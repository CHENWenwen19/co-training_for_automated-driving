[01/22 17:45:15] detectron2 INFO: Rank of current process: 1. World size: 2
[01/22 17:45:16] detectron2 INFO: Environment info:
----------------------  ------------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   /home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda-10.1:/usr/local/cuda - invalid!
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  ------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/22 17:45:16] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/22 17:45:16] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/22 17:45:16] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/22 17:45:16] detectron2.utils.env INFO: Using a generated random seed 16162447
[01/22 17:45:16] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/22 17:47:33] detectron2 INFO: Rank of current process: 1. World size: 2
[01/22 17:47:33] detectron2 INFO: Environment info:
----------------------  ------------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   /home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda-10.1:/usr/local/cuda - invalid!
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  ------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/22 17:47:33] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/22 17:47:33] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/22 17:47:33] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/22 17:47:33] detectron2.utils.env INFO: Using a generated random seed 33268350
[01/22 17:47:33] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/22 17:49:32] detectron2 INFO: Rank of current process: 1. World size: 2
[01/22 17:49:33] detectron2 INFO: Environment info:
----------------------  ------------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   /home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda-10.1:/usr/local/cuda - invalid!
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  ------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/22 17:49:33] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/22 17:49:33] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/22 17:49:33] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/22 17:49:33] detectron2.utils.env INFO: Using a generated random seed 33180383
[01/22 17:49:33] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/23 11:18:57] detectron2 INFO: Rank of current process: 1. World size: 2
[01/23 11:18:57] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  --------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/23 11:18:57] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/23 11:18:57] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/23 11:18:57] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/23 11:18:57] detectron2.utils.env INFO: Using a generated random seed 57459077
[01/23 11:18:57] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/23 11:19:15] detectron2 INFO: Rank of current process: 1. World size: 2
[01/23 11:19:16] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  --------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/23 11:19:16] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/23 11:19:16] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/23 11:19:16] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/23 11:19:16] detectron2.utils.env INFO: Using a generated random seed 16441816
[01/23 11:19:16] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/23 11:22:29] detectron2 INFO: Rank of current process: 1. World size: 2
[01/23 11:22:30] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  --------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/23 11:22:30] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/23 11:22:30] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/23 11:22:30] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/23 11:22:30] detectron2.utils.env INFO: Using a generated random seed 30330045
[01/23 11:22:30] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/23 11:23:17] detectron2 INFO: Rank of current process: 1. World size: 2
[01/23 11:23:18] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  --------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/23 11:23:18] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/23 11:23:18] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/23 11:23:18] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/23 11:23:18] detectron2.utils.env INFO: Using a generated random seed 18182038
[01/23 11:23:18] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/23 11:23:19] detectron2.data.build INFO: Removed 0 images with no usable annotations. 6732 images left.
[01/23 11:23:19] detectron2.data.build INFO: Distribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    car     | 29871        | pedestrian | 4254         |  cyclist   | 1442         |
|            |              |            |              |            |              |
|   total    | 35567        |            |              |            |              |[0m
[01/23 11:23:19] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[01/23 11:23:19] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/23 11:23:19] detectron2.data.common INFO: Serializing 6732 elements to byte tensors and concatenating them all ...
[01/23 11:23:19] detectron2.data.common INFO: Serialized dataset takes 3.81 MiB
[01/23 11:23:20] detectron2.data.build INFO: Removed 0 images with no usable annotations. 6732 images left.
[01/23 11:23:21] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[01/23 11:23:21] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/23 11:23:21] detectron2.data.common INFO: Serializing 6732 elements to byte tensors and concatenating them all ...
[01/23 11:23:21] detectron2.data.common INFO: Serialized dataset takes 3.81 MiB
[01/23 11:23:21] fvcore.common.checkpoint INFO: Loading checkpoint from ./output.pkl
[01/23 11:23:23] fvcore.common.checkpoint INFO: Reading a file from 'MOCO'
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.bias                      loaded from res2.0.conv1.norm.bias                   of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.num_batches_tracked       loaded from res2.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_mean              loaded from res2.0.conv1.norm.running_mean           of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_var               loaded from res2.0.conv1.norm.running_var            of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.weight                    loaded from res2.0.conv1.norm.weight                 of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.weight                         loaded from res2.0.conv1.weight                      of shape (64, 64, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.bias                      loaded from res2.0.conv2.norm.bias                   of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.num_batches_tracked       loaded from res2.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_mean              loaded from res2.0.conv2.norm.running_mean           of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_var               loaded from res2.0.conv2.norm.running_var            of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.weight                    loaded from res2.0.conv2.norm.weight                 of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.weight                         loaded from res2.0.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.bias                      loaded from res2.0.conv3.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.num_batches_tracked       loaded from res2.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_mean              loaded from res2.0.conv3.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_var               loaded from res2.0.conv3.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.weight                    loaded from res2.0.conv3.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.weight                         loaded from res2.0.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.bias                   loaded from res2.0.shortcut.norm.bias                of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.num_batches_tracked    loaded from res2.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_mean           loaded from res2.0.shortcut.norm.running_mean        of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_var            loaded from res2.0.shortcut.norm.running_var         of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.weight                 loaded from res2.0.shortcut.norm.weight              of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.weight                      loaded from res2.0.shortcut.weight                   of shape (256, 64, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.bias                      loaded from res2.1.conv1.norm.bias                   of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.num_batches_tracked       loaded from res2.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_mean              loaded from res2.1.conv1.norm.running_mean           of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_var               loaded from res2.1.conv1.norm.running_var            of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.weight                    loaded from res2.1.conv1.norm.weight                 of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.weight                         loaded from res2.1.conv1.weight                      of shape (64, 256, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.bias                      loaded from res2.1.conv2.norm.bias                   of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.num_batches_tracked       loaded from res2.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_mean              loaded from res2.1.conv2.norm.running_mean           of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_var               loaded from res2.1.conv2.norm.running_var            of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.weight                    loaded from res2.1.conv2.norm.weight                 of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.weight                         loaded from res2.1.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.bias                      loaded from res2.1.conv3.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.num_batches_tracked       loaded from res2.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_mean              loaded from res2.1.conv3.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_var               loaded from res2.1.conv3.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.weight                    loaded from res2.1.conv3.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.weight                         loaded from res2.1.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.bias                      loaded from res2.2.conv1.norm.bias                   of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.num_batches_tracked       loaded from res2.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_mean              loaded from res2.2.conv1.norm.running_mean           of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_var               loaded from res2.2.conv1.norm.running_var            of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.weight                    loaded from res2.2.conv1.norm.weight                 of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.weight                         loaded from res2.2.conv1.weight                      of shape (64, 256, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.bias                      loaded from res2.2.conv2.norm.bias                   of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.num_batches_tracked       loaded from res2.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_mean              loaded from res2.2.conv2.norm.running_mean           of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_var               loaded from res2.2.conv2.norm.running_var            of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.weight                    loaded from res2.2.conv2.norm.weight                 of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.weight                         loaded from res2.2.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.bias                      loaded from res2.2.conv3.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.num_batches_tracked       loaded from res2.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_mean              loaded from res2.2.conv3.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_var               loaded from res2.2.conv3.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.weight                    loaded from res2.2.conv3.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.weight                         loaded from res2.2.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.bias                      loaded from res3.0.conv1.norm.bias                   of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.num_batches_tracked       loaded from res3.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_mean              loaded from res3.0.conv1.norm.running_mean           of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_var               loaded from res3.0.conv1.norm.running_var            of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.weight                    loaded from res3.0.conv1.norm.weight                 of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.weight                         loaded from res3.0.conv1.weight                      of shape (128, 256, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.bias                      loaded from res3.0.conv2.norm.bias                   of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.num_batches_tracked       loaded from res3.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_mean              loaded from res3.0.conv2.norm.running_mean           of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_var               loaded from res3.0.conv2.norm.running_var            of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.weight                    loaded from res3.0.conv2.norm.weight                 of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.weight                         loaded from res3.0.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.bias                      loaded from res3.0.conv3.norm.bias                   of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.num_batches_tracked       loaded from res3.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_mean              loaded from res3.0.conv3.norm.running_mean           of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_var               loaded from res3.0.conv3.norm.running_var            of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.weight                    loaded from res3.0.conv3.norm.weight                 of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.weight                         loaded from res3.0.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.bias                   loaded from res3.0.shortcut.norm.bias                of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.num_batches_tracked    loaded from res3.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_mean           loaded from res3.0.shortcut.norm.running_mean        of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_var            loaded from res3.0.shortcut.norm.running_var         of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.weight                 loaded from res3.0.shortcut.norm.weight              of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.weight                      loaded from res3.0.shortcut.weight                   of shape (512, 256, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.bias                      loaded from res3.1.conv1.norm.bias                   of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.num_batches_tracked       loaded from res3.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_mean              loaded from res3.1.conv1.norm.running_mean           of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_var               loaded from res3.1.conv1.norm.running_var            of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.weight                    loaded from res3.1.conv1.norm.weight                 of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.weight                         loaded from res3.1.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.bias                      loaded from res3.1.conv2.norm.bias                   of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.num_batches_tracked       loaded from res3.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_mean              loaded from res3.1.conv2.norm.running_mean           of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_var               loaded from res3.1.conv2.norm.running_var            of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.weight                    loaded from res3.1.conv2.norm.weight                 of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.weight                         loaded from res3.1.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.bias                      loaded from res3.1.conv3.norm.bias                   of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.num_batches_tracked       loaded from res3.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_mean              loaded from res3.1.conv3.norm.running_mean           of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_var               loaded from res3.1.conv3.norm.running_var            of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.weight                    loaded from res3.1.conv3.norm.weight                 of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.weight                         loaded from res3.1.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.bias                      loaded from res3.2.conv1.norm.bias                   of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.num_batches_tracked       loaded from res3.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_mean              loaded from res3.2.conv1.norm.running_mean           of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_var               loaded from res3.2.conv1.norm.running_var            of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.weight                    loaded from res3.2.conv1.norm.weight                 of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.weight                         loaded from res3.2.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.bias                      loaded from res3.2.conv2.norm.bias                   of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.num_batches_tracked       loaded from res3.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_mean              loaded from res3.2.conv2.norm.running_mean           of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_var               loaded from res3.2.conv2.norm.running_var            of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.weight                    loaded from res3.2.conv2.norm.weight                 of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.weight                         loaded from res3.2.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.bias                      loaded from res3.2.conv3.norm.bias                   of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.num_batches_tracked       loaded from res3.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_mean              loaded from res3.2.conv3.norm.running_mean           of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_var               loaded from res3.2.conv3.norm.running_var            of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.weight                    loaded from res3.2.conv3.norm.weight                 of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.weight                         loaded from res3.2.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.bias                      loaded from res3.3.conv1.norm.bias                   of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.num_batches_tracked       loaded from res3.3.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_mean              loaded from res3.3.conv1.norm.running_mean           of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_var               loaded from res3.3.conv1.norm.running_var            of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.weight                    loaded from res3.3.conv1.norm.weight                 of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.weight                         loaded from res3.3.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.bias                      loaded from res3.3.conv2.norm.bias                   of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.num_batches_tracked       loaded from res3.3.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_mean              loaded from res3.3.conv2.norm.running_mean           of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_var               loaded from res3.3.conv2.norm.running_var            of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.weight                    loaded from res3.3.conv2.norm.weight                 of shape (128,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.weight                         loaded from res3.3.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.bias                      loaded from res3.3.conv3.norm.bias                   of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.num_batches_tracked       loaded from res3.3.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_mean              loaded from res3.3.conv3.norm.running_mean           of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_var               loaded from res3.3.conv3.norm.running_var            of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.weight                    loaded from res3.3.conv3.norm.weight                 of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.weight                         loaded from res3.3.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.bias                      loaded from res4.0.conv1.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.num_batches_tracked       loaded from res4.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_mean              loaded from res4.0.conv1.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_var               loaded from res4.0.conv1.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.weight                    loaded from res4.0.conv1.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.weight                         loaded from res4.0.conv1.weight                      of shape (256, 512, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.bias                      loaded from res4.0.conv2.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.num_batches_tracked       loaded from res4.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_mean              loaded from res4.0.conv2.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_var               loaded from res4.0.conv2.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.weight                    loaded from res4.0.conv2.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.weight                         loaded from res4.0.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.bias                      loaded from res4.0.conv3.norm.bias                   of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.num_batches_tracked       loaded from res4.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_mean              loaded from res4.0.conv3.norm.running_mean           of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_var               loaded from res4.0.conv3.norm.running_var            of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.weight                    loaded from res4.0.conv3.norm.weight                 of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.weight                         loaded from res4.0.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.bias                   loaded from res4.0.shortcut.norm.bias                of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.num_batches_tracked    loaded from res4.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_mean           loaded from res4.0.shortcut.norm.running_mean        of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_var            loaded from res4.0.shortcut.norm.running_var         of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.weight                 loaded from res4.0.shortcut.norm.weight              of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.weight                      loaded from res4.0.shortcut.weight                   of shape (1024, 512, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.bias                      loaded from res4.1.conv1.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.num_batches_tracked       loaded from res4.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_mean              loaded from res4.1.conv1.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_var               loaded from res4.1.conv1.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.weight                    loaded from res4.1.conv1.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.weight                         loaded from res4.1.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.bias                      loaded from res4.1.conv2.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.num_batches_tracked       loaded from res4.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_mean              loaded from res4.1.conv2.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_var               loaded from res4.1.conv2.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.weight                    loaded from res4.1.conv2.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.weight                         loaded from res4.1.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.bias                      loaded from res4.1.conv3.norm.bias                   of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.num_batches_tracked       loaded from res4.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_mean              loaded from res4.1.conv3.norm.running_mean           of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_var               loaded from res4.1.conv3.norm.running_var            of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.weight                    loaded from res4.1.conv3.norm.weight                 of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.weight                         loaded from res4.1.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.bias                      loaded from res4.2.conv1.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.num_batches_tracked       loaded from res4.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_mean              loaded from res4.2.conv1.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_var               loaded from res4.2.conv1.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.weight                    loaded from res4.2.conv1.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.weight                         loaded from res4.2.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.bias                      loaded from res4.2.conv2.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.num_batches_tracked       loaded from res4.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_mean              loaded from res4.2.conv2.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_var               loaded from res4.2.conv2.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.weight                    loaded from res4.2.conv2.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.weight                         loaded from res4.2.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.bias                      loaded from res4.2.conv3.norm.bias                   of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.num_batches_tracked       loaded from res4.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_mean              loaded from res4.2.conv3.norm.running_mean           of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_var               loaded from res4.2.conv3.norm.running_var            of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.weight                    loaded from res4.2.conv3.norm.weight                 of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.weight                         loaded from res4.2.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.bias                      loaded from res4.3.conv1.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.num_batches_tracked       loaded from res4.3.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_mean              loaded from res4.3.conv1.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_var               loaded from res4.3.conv1.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.weight                    loaded from res4.3.conv1.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.weight                         loaded from res4.3.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.bias                      loaded from res4.3.conv2.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.num_batches_tracked       loaded from res4.3.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_mean              loaded from res4.3.conv2.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_var               loaded from res4.3.conv2.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.weight                    loaded from res4.3.conv2.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.weight                         loaded from res4.3.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.bias                      loaded from res4.3.conv3.norm.bias                   of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.num_batches_tracked       loaded from res4.3.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_mean              loaded from res4.3.conv3.norm.running_mean           of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_var               loaded from res4.3.conv3.norm.running_var            of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.weight                    loaded from res4.3.conv3.norm.weight                 of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.weight                         loaded from res4.3.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.bias                      loaded from res4.4.conv1.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.num_batches_tracked       loaded from res4.4.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_mean              loaded from res4.4.conv1.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_var               loaded from res4.4.conv1.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.weight                    loaded from res4.4.conv1.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.weight                         loaded from res4.4.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.bias                      loaded from res4.4.conv2.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.num_batches_tracked       loaded from res4.4.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_mean              loaded from res4.4.conv2.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_var               loaded from res4.4.conv2.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.weight                    loaded from res4.4.conv2.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.weight                         loaded from res4.4.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.bias                      loaded from res4.4.conv3.norm.bias                   of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.num_batches_tracked       loaded from res4.4.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_mean              loaded from res4.4.conv3.norm.running_mean           of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_var               loaded from res4.4.conv3.norm.running_var            of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.weight                    loaded from res4.4.conv3.norm.weight                 of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.weight                         loaded from res4.4.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.bias                      loaded from res4.5.conv1.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.num_batches_tracked       loaded from res4.5.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_mean              loaded from res4.5.conv1.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_var               loaded from res4.5.conv1.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.weight                    loaded from res4.5.conv1.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.weight                         loaded from res4.5.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.bias                      loaded from res4.5.conv2.norm.bias                   of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.num_batches_tracked       loaded from res4.5.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_mean              loaded from res4.5.conv2.norm.running_mean           of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_var               loaded from res4.5.conv2.norm.running_var            of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.weight                    loaded from res4.5.conv2.norm.weight                 of shape (256,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.weight                         loaded from res4.5.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.bias                      loaded from res4.5.conv3.norm.bias                   of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.num_batches_tracked       loaded from res4.5.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_mean              loaded from res4.5.conv3.norm.running_mean           of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_var               loaded from res4.5.conv3.norm.running_var            of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.weight                    loaded from res4.5.conv3.norm.weight                 of shape (1024,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.weight                         loaded from res4.5.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.bias                        loaded from stem.conv1.norm.bias                     of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.num_batches_tracked         loaded from stem.conv1.norm.num_batches_tracked      of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_mean                loaded from stem.conv1.norm.running_mean             of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_var                 loaded from stem.conv1.norm.running_var              of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.weight                      loaded from stem.conv1.norm.weight                   of shape (64,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.weight                           loaded from stem.conv1.weight                        of shape (64, 3, 7, 7)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.bias                     loaded from res5.0.conv1.norm.bias                   of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.num_batches_tracked      loaded from res5.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_mean             loaded from res5.0.conv1.norm.running_mean           of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_var              loaded from res5.0.conv1.norm.running_var            of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.weight                   loaded from res5.0.conv1.norm.weight                 of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.weight                        loaded from res5.0.conv1.weight                      of shape (512, 1024, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.bias                     loaded from res5.0.conv2.norm.bias                   of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.num_batches_tracked      loaded from res5.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_mean             loaded from res5.0.conv2.norm.running_mean           of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_var              loaded from res5.0.conv2.norm.running_var            of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.weight                   loaded from res5.0.conv2.norm.weight                 of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.weight                        loaded from res5.0.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.bias                     loaded from res5.0.conv3.norm.bias                   of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.num_batches_tracked      loaded from res5.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_mean             loaded from res5.0.conv3.norm.running_mean           of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_var              loaded from res5.0.conv3.norm.running_var            of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.weight                   loaded from res5.0.conv3.norm.weight                 of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.weight                        loaded from res5.0.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.bias                  loaded from res5.0.shortcut.norm.bias                of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.num_batches_tracked   loaded from res5.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_mean          loaded from res5.0.shortcut.norm.running_mean        of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_var           loaded from res5.0.shortcut.norm.running_var         of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.weight                loaded from res5.0.shortcut.norm.weight              of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.weight                     loaded from res5.0.shortcut.weight                   of shape (2048, 1024, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.bias                     loaded from res5.1.conv1.norm.bias                   of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.num_batches_tracked      loaded from res5.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_mean             loaded from res5.1.conv1.norm.running_mean           of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_var              loaded from res5.1.conv1.norm.running_var            of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.weight                   loaded from res5.1.conv1.norm.weight                 of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.weight                        loaded from res5.1.conv1.weight                      of shape (512, 2048, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.bias                     loaded from res5.1.conv2.norm.bias                   of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.num_batches_tracked      loaded from res5.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_mean             loaded from res5.1.conv2.norm.running_mean           of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_var              loaded from res5.1.conv2.norm.running_var            of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.weight                   loaded from res5.1.conv2.norm.weight                 of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.weight                        loaded from res5.1.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.bias                     loaded from res5.1.conv3.norm.bias                   of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.num_batches_tracked      loaded from res5.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_mean             loaded from res5.1.conv3.norm.running_mean           of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_var              loaded from res5.1.conv3.norm.running_var            of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.weight                   loaded from res5.1.conv3.norm.weight                 of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.weight                        loaded from res5.1.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.bias                     loaded from res5.2.conv1.norm.bias                   of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.num_batches_tracked      loaded from res5.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_mean             loaded from res5.2.conv1.norm.running_mean           of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_var              loaded from res5.2.conv1.norm.running_var            of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.weight                   loaded from res5.2.conv1.norm.weight                 of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.weight                        loaded from res5.2.conv1.weight                      of shape (512, 2048, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.bias                     loaded from res5.2.conv2.norm.bias                   of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.num_batches_tracked      loaded from res5.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_mean             loaded from res5.2.conv2.norm.running_mean           of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_var              loaded from res5.2.conv2.norm.running_var            of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.weight                   loaded from res5.2.conv2.norm.weight                 of shape (512,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.weight                        loaded from res5.2.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.bias                     loaded from res5.2.conv3.norm.bias                   of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.num_batches_tracked      loaded from res5.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_mean             loaded from res5.2.conv3.norm.running_mean           of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_var              loaded from res5.2.conv3.norm.running_var            of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.weight                   loaded from res5.2.conv3.norm.weight                 of shape (2048,)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.weight                        loaded from res5.2.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.anchor_generator.cell_anchors.0[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mroi_heads.res5.norm.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[01/23 11:23:23] detectron2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.0.{bias, weight}[0m
  [35mstem.fc.2.{bias, weight}[0m
[01/23 11:23:23] detectron2.engine.train_loop INFO: Starting training from iteration 0
[01/23 11:23:27] detectron2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 134, in train
    self.run_step()
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 430, in run_step
    self._trainer.run_step()
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 222, in run_step
    data = next(self._data_loader_iter)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/data/common.py", line 179, in __iter__
    for d in self.dataset:
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 345, in __next__
    data = self._next_data()
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 856, in _next_data
    return self._process_data(data)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 881, in _process_data
    data.reraise()
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/_utils.py", line 395, in reraise
    raise self.exc_type(msg)
FileNotFoundError: Caught FileNotFoundError in DataLoader worker process 0.
Original Traceback (most recent call last):
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/utils/data/_utils/worker.py", line 178, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py", line 44, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py", line 44, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/data/common.py", line 43, in __getitem__
    data = self._map_func(self._dataset[cur_idx])
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/data/dataset_mapper.py", line 125, in __call__
    image = utils.read_image(dataset_dict["file_name"], format=self.image_format)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/data/detection_utils.py", line 178, in read_image
    with PathManager.open(file_name, "rb") as f:
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/fvcore/common/file_io.py", line 114, in open
    path, mode, buffering=buffering, **kwargs
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/iopath/common/file_io.py", line 429, in _open
    opener=opener,
FileNotFoundError: [Errno 2] No such file or directory: 'datasets/VOC2007/JPEGImages/002585.jpg'

[01/23 11:23:27] detectron2.engine.hooks INFO: Total training time: 0:00:03 (0:00:00 on hooks)
[01/23 11:24:51] detectron2 INFO: Rank of current process: 1. World size: 2
[01/23 11:24:51] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  --------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/23 11:24:51] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/23 11:24:51] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/23 11:24:51] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/23 11:24:51] detectron2.utils.env INFO: Using a generated random seed 51786058
[01/23 11:24:52] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/23 11:24:53] detectron2.data.build INFO: Removed 0 images with no usable annotations. 6732 images left.
[01/23 11:24:53] detectron2.data.build INFO: Distribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    car     | 29871        | pedestrian | 4254         |  cyclist   | 1442         |
|            |              |            |              |            |              |
|   total    | 35567        |            |              |            |              |[0m
[01/23 11:24:53] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[01/23 11:24:53] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/23 11:24:53] detectron2.data.common INFO: Serializing 6732 elements to byte tensors and concatenating them all ...
[01/23 11:24:53] detectron2.data.common INFO: Serialized dataset takes 3.81 MiB
[01/23 11:24:54] detectron2.data.build INFO: Removed 0 images with no usable annotations. 6732 images left.
[01/23 11:24:54] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[01/23 11:24:54] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/23 11:24:54] detectron2.data.common INFO: Serializing 6732 elements to byte tensors and concatenating them all ...
[01/23 11:24:54] detectron2.data.common INFO: Serialized dataset takes 3.81 MiB
[01/23 11:24:54] fvcore.common.checkpoint INFO: Loading checkpoint from ./output.pkl
[01/23 11:24:54] fvcore.common.checkpoint INFO: Reading a file from 'MOCO'
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.bias                      loaded from res2.0.conv1.norm.bias                   of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.num_batches_tracked       loaded from res2.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_mean              loaded from res2.0.conv1.norm.running_mean           of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_var               loaded from res2.0.conv1.norm.running_var            of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.weight                    loaded from res2.0.conv1.norm.weight                 of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.weight                         loaded from res2.0.conv1.weight                      of shape (64, 64, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.bias                      loaded from res2.0.conv2.norm.bias                   of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.num_batches_tracked       loaded from res2.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_mean              loaded from res2.0.conv2.norm.running_mean           of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_var               loaded from res2.0.conv2.norm.running_var            of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.weight                    loaded from res2.0.conv2.norm.weight                 of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.weight                         loaded from res2.0.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.bias                      loaded from res2.0.conv3.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.num_batches_tracked       loaded from res2.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_mean              loaded from res2.0.conv3.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_var               loaded from res2.0.conv3.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.weight                    loaded from res2.0.conv3.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.weight                         loaded from res2.0.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.bias                   loaded from res2.0.shortcut.norm.bias                of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.num_batches_tracked    loaded from res2.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_mean           loaded from res2.0.shortcut.norm.running_mean        of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_var            loaded from res2.0.shortcut.norm.running_var         of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.weight                 loaded from res2.0.shortcut.norm.weight              of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.weight                      loaded from res2.0.shortcut.weight                   of shape (256, 64, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.bias                      loaded from res2.1.conv1.norm.bias                   of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.num_batches_tracked       loaded from res2.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_mean              loaded from res2.1.conv1.norm.running_mean           of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_var               loaded from res2.1.conv1.norm.running_var            of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.weight                    loaded from res2.1.conv1.norm.weight                 of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.weight                         loaded from res2.1.conv1.weight                      of shape (64, 256, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.bias                      loaded from res2.1.conv2.norm.bias                   of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.num_batches_tracked       loaded from res2.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_mean              loaded from res2.1.conv2.norm.running_mean           of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_var               loaded from res2.1.conv2.norm.running_var            of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.weight                    loaded from res2.1.conv2.norm.weight                 of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.weight                         loaded from res2.1.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.bias                      loaded from res2.1.conv3.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.num_batches_tracked       loaded from res2.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_mean              loaded from res2.1.conv3.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_var               loaded from res2.1.conv3.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.weight                    loaded from res2.1.conv3.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.weight                         loaded from res2.1.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.bias                      loaded from res2.2.conv1.norm.bias                   of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.num_batches_tracked       loaded from res2.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_mean              loaded from res2.2.conv1.norm.running_mean           of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_var               loaded from res2.2.conv1.norm.running_var            of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.weight                    loaded from res2.2.conv1.norm.weight                 of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.weight                         loaded from res2.2.conv1.weight                      of shape (64, 256, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.bias                      loaded from res2.2.conv2.norm.bias                   of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.num_batches_tracked       loaded from res2.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_mean              loaded from res2.2.conv2.norm.running_mean           of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_var               loaded from res2.2.conv2.norm.running_var            of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.weight                    loaded from res2.2.conv2.norm.weight                 of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.weight                         loaded from res2.2.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.bias                      loaded from res2.2.conv3.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.num_batches_tracked       loaded from res2.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_mean              loaded from res2.2.conv3.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_var               loaded from res2.2.conv3.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.weight                    loaded from res2.2.conv3.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.weight                         loaded from res2.2.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.bias                      loaded from res3.0.conv1.norm.bias                   of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.num_batches_tracked       loaded from res3.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_mean              loaded from res3.0.conv1.norm.running_mean           of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_var               loaded from res3.0.conv1.norm.running_var            of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.weight                    loaded from res3.0.conv1.norm.weight                 of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.weight                         loaded from res3.0.conv1.weight                      of shape (128, 256, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.bias                      loaded from res3.0.conv2.norm.bias                   of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.num_batches_tracked       loaded from res3.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_mean              loaded from res3.0.conv2.norm.running_mean           of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_var               loaded from res3.0.conv2.norm.running_var            of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.weight                    loaded from res3.0.conv2.norm.weight                 of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.weight                         loaded from res3.0.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.bias                      loaded from res3.0.conv3.norm.bias                   of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.num_batches_tracked       loaded from res3.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_mean              loaded from res3.0.conv3.norm.running_mean           of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_var               loaded from res3.0.conv3.norm.running_var            of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.weight                    loaded from res3.0.conv3.norm.weight                 of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.weight                         loaded from res3.0.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.bias                   loaded from res3.0.shortcut.norm.bias                of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.num_batches_tracked    loaded from res3.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_mean           loaded from res3.0.shortcut.norm.running_mean        of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_var            loaded from res3.0.shortcut.norm.running_var         of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.weight                 loaded from res3.0.shortcut.norm.weight              of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.weight                      loaded from res3.0.shortcut.weight                   of shape (512, 256, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.bias                      loaded from res3.1.conv1.norm.bias                   of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.num_batches_tracked       loaded from res3.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_mean              loaded from res3.1.conv1.norm.running_mean           of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_var               loaded from res3.1.conv1.norm.running_var            of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.weight                    loaded from res3.1.conv1.norm.weight                 of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.weight                         loaded from res3.1.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.bias                      loaded from res3.1.conv2.norm.bias                   of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.num_batches_tracked       loaded from res3.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_mean              loaded from res3.1.conv2.norm.running_mean           of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_var               loaded from res3.1.conv2.norm.running_var            of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.weight                    loaded from res3.1.conv2.norm.weight                 of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.weight                         loaded from res3.1.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.bias                      loaded from res3.1.conv3.norm.bias                   of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.num_batches_tracked       loaded from res3.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_mean              loaded from res3.1.conv3.norm.running_mean           of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_var               loaded from res3.1.conv3.norm.running_var            of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.weight                    loaded from res3.1.conv3.norm.weight                 of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.weight                         loaded from res3.1.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.bias                      loaded from res3.2.conv1.norm.bias                   of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.num_batches_tracked       loaded from res3.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_mean              loaded from res3.2.conv1.norm.running_mean           of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_var               loaded from res3.2.conv1.norm.running_var            of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.weight                    loaded from res3.2.conv1.norm.weight                 of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.weight                         loaded from res3.2.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.bias                      loaded from res3.2.conv2.norm.bias                   of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.num_batches_tracked       loaded from res3.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_mean              loaded from res3.2.conv2.norm.running_mean           of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_var               loaded from res3.2.conv2.norm.running_var            of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.weight                    loaded from res3.2.conv2.norm.weight                 of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.weight                         loaded from res3.2.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.bias                      loaded from res3.2.conv3.norm.bias                   of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.num_batches_tracked       loaded from res3.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_mean              loaded from res3.2.conv3.norm.running_mean           of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_var               loaded from res3.2.conv3.norm.running_var            of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.weight                    loaded from res3.2.conv3.norm.weight                 of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.weight                         loaded from res3.2.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.bias                      loaded from res3.3.conv1.norm.bias                   of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.num_batches_tracked       loaded from res3.3.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_mean              loaded from res3.3.conv1.norm.running_mean           of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_var               loaded from res3.3.conv1.norm.running_var            of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.weight                    loaded from res3.3.conv1.norm.weight                 of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.weight                         loaded from res3.3.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.bias                      loaded from res3.3.conv2.norm.bias                   of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.num_batches_tracked       loaded from res3.3.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_mean              loaded from res3.3.conv2.norm.running_mean           of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_var               loaded from res3.3.conv2.norm.running_var            of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.weight                    loaded from res3.3.conv2.norm.weight                 of shape (128,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.weight                         loaded from res3.3.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.bias                      loaded from res3.3.conv3.norm.bias                   of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.num_batches_tracked       loaded from res3.3.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_mean              loaded from res3.3.conv3.norm.running_mean           of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_var               loaded from res3.3.conv3.norm.running_var            of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.weight                    loaded from res3.3.conv3.norm.weight                 of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.weight                         loaded from res3.3.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.bias                      loaded from res4.0.conv1.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.num_batches_tracked       loaded from res4.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_mean              loaded from res4.0.conv1.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_var               loaded from res4.0.conv1.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.weight                    loaded from res4.0.conv1.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.weight                         loaded from res4.0.conv1.weight                      of shape (256, 512, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.bias                      loaded from res4.0.conv2.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.num_batches_tracked       loaded from res4.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_mean              loaded from res4.0.conv2.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_var               loaded from res4.0.conv2.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.weight                    loaded from res4.0.conv2.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.weight                         loaded from res4.0.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.bias                      loaded from res4.0.conv3.norm.bias                   of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.num_batches_tracked       loaded from res4.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_mean              loaded from res4.0.conv3.norm.running_mean           of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_var               loaded from res4.0.conv3.norm.running_var            of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.weight                    loaded from res4.0.conv3.norm.weight                 of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.weight                         loaded from res4.0.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.bias                   loaded from res4.0.shortcut.norm.bias                of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.num_batches_tracked    loaded from res4.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_mean           loaded from res4.0.shortcut.norm.running_mean        of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_var            loaded from res4.0.shortcut.norm.running_var         of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.weight                 loaded from res4.0.shortcut.norm.weight              of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.weight                      loaded from res4.0.shortcut.weight                   of shape (1024, 512, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.bias                      loaded from res4.1.conv1.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.num_batches_tracked       loaded from res4.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_mean              loaded from res4.1.conv1.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_var               loaded from res4.1.conv1.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.weight                    loaded from res4.1.conv1.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.weight                         loaded from res4.1.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.bias                      loaded from res4.1.conv2.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.num_batches_tracked       loaded from res4.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_mean              loaded from res4.1.conv2.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_var               loaded from res4.1.conv2.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.weight                    loaded from res4.1.conv2.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.weight                         loaded from res4.1.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.bias                      loaded from res4.1.conv3.norm.bias                   of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.num_batches_tracked       loaded from res4.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_mean              loaded from res4.1.conv3.norm.running_mean           of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_var               loaded from res4.1.conv3.norm.running_var            of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.weight                    loaded from res4.1.conv3.norm.weight                 of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.weight                         loaded from res4.1.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.bias                      loaded from res4.2.conv1.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.num_batches_tracked       loaded from res4.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_mean              loaded from res4.2.conv1.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_var               loaded from res4.2.conv1.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.weight                    loaded from res4.2.conv1.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.weight                         loaded from res4.2.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.bias                      loaded from res4.2.conv2.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.num_batches_tracked       loaded from res4.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_mean              loaded from res4.2.conv2.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_var               loaded from res4.2.conv2.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.weight                    loaded from res4.2.conv2.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.weight                         loaded from res4.2.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.bias                      loaded from res4.2.conv3.norm.bias                   of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.num_batches_tracked       loaded from res4.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_mean              loaded from res4.2.conv3.norm.running_mean           of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_var               loaded from res4.2.conv3.norm.running_var            of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.weight                    loaded from res4.2.conv3.norm.weight                 of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.weight                         loaded from res4.2.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.bias                      loaded from res4.3.conv1.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.num_batches_tracked       loaded from res4.3.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_mean              loaded from res4.3.conv1.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_var               loaded from res4.3.conv1.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.weight                    loaded from res4.3.conv1.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.weight                         loaded from res4.3.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.bias                      loaded from res4.3.conv2.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.num_batches_tracked       loaded from res4.3.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_mean              loaded from res4.3.conv2.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_var               loaded from res4.3.conv2.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.weight                    loaded from res4.3.conv2.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.weight                         loaded from res4.3.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.bias                      loaded from res4.3.conv3.norm.bias                   of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.num_batches_tracked       loaded from res4.3.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_mean              loaded from res4.3.conv3.norm.running_mean           of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_var               loaded from res4.3.conv3.norm.running_var            of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.weight                    loaded from res4.3.conv3.norm.weight                 of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.weight                         loaded from res4.3.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.bias                      loaded from res4.4.conv1.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.num_batches_tracked       loaded from res4.4.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_mean              loaded from res4.4.conv1.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_var               loaded from res4.4.conv1.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.weight                    loaded from res4.4.conv1.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.weight                         loaded from res4.4.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.bias                      loaded from res4.4.conv2.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.num_batches_tracked       loaded from res4.4.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_mean              loaded from res4.4.conv2.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_var               loaded from res4.4.conv2.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.weight                    loaded from res4.4.conv2.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.weight                         loaded from res4.4.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.bias                      loaded from res4.4.conv3.norm.bias                   of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.num_batches_tracked       loaded from res4.4.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_mean              loaded from res4.4.conv3.norm.running_mean           of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_var               loaded from res4.4.conv3.norm.running_var            of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.weight                    loaded from res4.4.conv3.norm.weight                 of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.weight                         loaded from res4.4.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.bias                      loaded from res4.5.conv1.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.num_batches_tracked       loaded from res4.5.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_mean              loaded from res4.5.conv1.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_var               loaded from res4.5.conv1.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.weight                    loaded from res4.5.conv1.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.weight                         loaded from res4.5.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.bias                      loaded from res4.5.conv2.norm.bias                   of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.num_batches_tracked       loaded from res4.5.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_mean              loaded from res4.5.conv2.norm.running_mean           of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_var               loaded from res4.5.conv2.norm.running_var            of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.weight                    loaded from res4.5.conv2.norm.weight                 of shape (256,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.weight                         loaded from res4.5.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.bias                      loaded from res4.5.conv3.norm.bias                   of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.num_batches_tracked       loaded from res4.5.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_mean              loaded from res4.5.conv3.norm.running_mean           of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_var               loaded from res4.5.conv3.norm.running_var            of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.weight                    loaded from res4.5.conv3.norm.weight                 of shape (1024,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.weight                         loaded from res4.5.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.bias                        loaded from stem.conv1.norm.bias                     of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.num_batches_tracked         loaded from stem.conv1.norm.num_batches_tracked      of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_mean                loaded from stem.conv1.norm.running_mean             of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_var                 loaded from stem.conv1.norm.running_var              of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.weight                      loaded from stem.conv1.norm.weight                   of shape (64,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.weight                           loaded from stem.conv1.weight                        of shape (64, 3, 7, 7)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.bias                     loaded from res5.0.conv1.norm.bias                   of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.num_batches_tracked      loaded from res5.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_mean             loaded from res5.0.conv1.norm.running_mean           of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_var              loaded from res5.0.conv1.norm.running_var            of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.weight                   loaded from res5.0.conv1.norm.weight                 of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.weight                        loaded from res5.0.conv1.weight                      of shape (512, 1024, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.bias                     loaded from res5.0.conv2.norm.bias                   of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.num_batches_tracked      loaded from res5.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_mean             loaded from res5.0.conv2.norm.running_mean           of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_var              loaded from res5.0.conv2.norm.running_var            of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.weight                   loaded from res5.0.conv2.norm.weight                 of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.weight                        loaded from res5.0.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.bias                     loaded from res5.0.conv3.norm.bias                   of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.num_batches_tracked      loaded from res5.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_mean             loaded from res5.0.conv3.norm.running_mean           of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_var              loaded from res5.0.conv3.norm.running_var            of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.weight                   loaded from res5.0.conv3.norm.weight                 of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.weight                        loaded from res5.0.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.bias                  loaded from res5.0.shortcut.norm.bias                of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.num_batches_tracked   loaded from res5.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_mean          loaded from res5.0.shortcut.norm.running_mean        of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_var           loaded from res5.0.shortcut.norm.running_var         of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.weight                loaded from res5.0.shortcut.norm.weight              of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.weight                     loaded from res5.0.shortcut.weight                   of shape (2048, 1024, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.bias                     loaded from res5.1.conv1.norm.bias                   of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.num_batches_tracked      loaded from res5.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_mean             loaded from res5.1.conv1.norm.running_mean           of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_var              loaded from res5.1.conv1.norm.running_var            of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.weight                   loaded from res5.1.conv1.norm.weight                 of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.weight                        loaded from res5.1.conv1.weight                      of shape (512, 2048, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.bias                     loaded from res5.1.conv2.norm.bias                   of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.num_batches_tracked      loaded from res5.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_mean             loaded from res5.1.conv2.norm.running_mean           of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_var              loaded from res5.1.conv2.norm.running_var            of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.weight                   loaded from res5.1.conv2.norm.weight                 of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.weight                        loaded from res5.1.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.bias                     loaded from res5.1.conv3.norm.bias                   of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.num_batches_tracked      loaded from res5.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_mean             loaded from res5.1.conv3.norm.running_mean           of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_var              loaded from res5.1.conv3.norm.running_var            of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.weight                   loaded from res5.1.conv3.norm.weight                 of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.weight                        loaded from res5.1.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.bias                     loaded from res5.2.conv1.norm.bias                   of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.num_batches_tracked      loaded from res5.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_mean             loaded from res5.2.conv1.norm.running_mean           of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_var              loaded from res5.2.conv1.norm.running_var            of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.weight                   loaded from res5.2.conv1.norm.weight                 of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.weight                        loaded from res5.2.conv1.weight                      of shape (512, 2048, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.bias                     loaded from res5.2.conv2.norm.bias                   of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.num_batches_tracked      loaded from res5.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_mean             loaded from res5.2.conv2.norm.running_mean           of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_var              loaded from res5.2.conv2.norm.running_var            of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.weight                   loaded from res5.2.conv2.norm.weight                 of shape (512,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.weight                        loaded from res5.2.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.bias                     loaded from res5.2.conv3.norm.bias                   of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.num_batches_tracked      loaded from res5.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_mean             loaded from res5.2.conv3.norm.running_mean           of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_var              loaded from res5.2.conv3.norm.running_var            of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.weight                   loaded from res5.2.conv3.norm.weight                 of shape (2048,)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.weight                        loaded from res5.2.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.anchor_generator.cell_anchors.0[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mroi_heads.res5.norm.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[01/23 11:24:54] detectron2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.0.{bias, weight}[0m
  [35mstem.fc.2.{bias, weight}[0m
[01/23 11:24:54] detectron2.engine.train_loop INFO: Starting training from iteration 0
[01/23 11:25:02] detectron2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 134, in train
    self.run_step()
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 430, in run_step
    self._trainer.run_step()
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 228, in run_step
    loss_dict = self.model(data)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/parallel/distributed.py", line 458, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 166, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 427, in forward
    [features[f] for f in self.in_features], proposal_boxes
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 411, in _shared_roi_transform
    x = self.pooler(features, boxes)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/modeling/poolers.py", line 229, in forward
    return self.level_poolers[0](x[0], pooler_fmt_boxes)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/layers/roi_align.py", line 112, in forward
    self.aligned,
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/layers/roi_align.py", line 32, in forward
    input, roi, spatial_scale, output_size[0], output_size[1], sampling_ratio, aligned
RuntimeError: CUDA out of memory. Tried to allocate 3.06 GiB (GPU 1; 10.91 GiB total capacity; 6.99 GiB already allocated; 2.81 GiB free; 7.19 GiB reserved in total by PyTorch)
[01/23 11:25:02] detectron2.engine.hooks INFO: Total training time: 0:00:07 (0:00:00 on hooks)
[01/23 12:17:05] detectron2 INFO: Rank of current process: 1. World size: 2
[01/23 12:17:05] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  --------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/23 12:17:05] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/23 12:17:05] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/23 12:17:05] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/23 12:17:05] detectron2.utils.env INFO: Using a generated random seed 6003596
[01/23 12:17:06] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/23 12:17:07] detectron2.data.build INFO: Removed 0 images with no usable annotations. 6732 images left.
[01/23 12:17:07] detectron2.data.build INFO: Distribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    car     | 29871        | pedestrian | 4254         |  cyclist   | 1442         |
|            |              |            |              |            |              |
|   total    | 35567        |            |              |            |              |[0m
[01/23 12:17:07] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[01/23 12:17:07] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/23 12:17:07] detectron2.data.common INFO: Serializing 6732 elements to byte tensors and concatenating them all ...
[01/23 12:17:07] detectron2.data.common INFO: Serialized dataset takes 3.81 MiB
[01/23 12:17:08] detectron2.data.build INFO: Removed 0 images with no usable annotations. 6732 images left.
[01/23 12:17:08] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[01/23 12:17:08] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/23 12:17:08] detectron2.data.common INFO: Serializing 6732 elements to byte tensors and concatenating them all ...
[01/23 12:17:08] detectron2.data.common INFO: Serialized dataset takes 3.81 MiB
[01/23 12:17:08] fvcore.common.checkpoint INFO: Loading checkpoint from ./output.pkl
[01/23 12:17:09] fvcore.common.checkpoint INFO: Reading a file from 'MOCO'
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.bias                      loaded from res2.0.conv1.norm.bias                   of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.num_batches_tracked       loaded from res2.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_mean              loaded from res2.0.conv1.norm.running_mean           of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_var               loaded from res2.0.conv1.norm.running_var            of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.weight                    loaded from res2.0.conv1.norm.weight                 of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.weight                         loaded from res2.0.conv1.weight                      of shape (64, 64, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.bias                      loaded from res2.0.conv2.norm.bias                   of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.num_batches_tracked       loaded from res2.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_mean              loaded from res2.0.conv2.norm.running_mean           of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_var               loaded from res2.0.conv2.norm.running_var            of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.weight                    loaded from res2.0.conv2.norm.weight                 of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.weight                         loaded from res2.0.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.bias                      loaded from res2.0.conv3.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.num_batches_tracked       loaded from res2.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_mean              loaded from res2.0.conv3.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_var               loaded from res2.0.conv3.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.weight                    loaded from res2.0.conv3.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.weight                         loaded from res2.0.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.bias                   loaded from res2.0.shortcut.norm.bias                of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.num_batches_tracked    loaded from res2.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_mean           loaded from res2.0.shortcut.norm.running_mean        of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_var            loaded from res2.0.shortcut.norm.running_var         of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.weight                 loaded from res2.0.shortcut.norm.weight              of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.weight                      loaded from res2.0.shortcut.weight                   of shape (256, 64, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.bias                      loaded from res2.1.conv1.norm.bias                   of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.num_batches_tracked       loaded from res2.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_mean              loaded from res2.1.conv1.norm.running_mean           of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_var               loaded from res2.1.conv1.norm.running_var            of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.weight                    loaded from res2.1.conv1.norm.weight                 of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.weight                         loaded from res2.1.conv1.weight                      of shape (64, 256, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.bias                      loaded from res2.1.conv2.norm.bias                   of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.num_batches_tracked       loaded from res2.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_mean              loaded from res2.1.conv2.norm.running_mean           of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_var               loaded from res2.1.conv2.norm.running_var            of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.weight                    loaded from res2.1.conv2.norm.weight                 of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.weight                         loaded from res2.1.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.bias                      loaded from res2.1.conv3.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.num_batches_tracked       loaded from res2.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_mean              loaded from res2.1.conv3.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_var               loaded from res2.1.conv3.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.weight                    loaded from res2.1.conv3.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.weight                         loaded from res2.1.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.bias                      loaded from res2.2.conv1.norm.bias                   of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.num_batches_tracked       loaded from res2.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_mean              loaded from res2.2.conv1.norm.running_mean           of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_var               loaded from res2.2.conv1.norm.running_var            of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.weight                    loaded from res2.2.conv1.norm.weight                 of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.weight                         loaded from res2.2.conv1.weight                      of shape (64, 256, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.bias                      loaded from res2.2.conv2.norm.bias                   of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.num_batches_tracked       loaded from res2.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_mean              loaded from res2.2.conv2.norm.running_mean           of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_var               loaded from res2.2.conv2.norm.running_var            of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.weight                    loaded from res2.2.conv2.norm.weight                 of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.weight                         loaded from res2.2.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.bias                      loaded from res2.2.conv3.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.num_batches_tracked       loaded from res2.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_mean              loaded from res2.2.conv3.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_var               loaded from res2.2.conv3.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.weight                    loaded from res2.2.conv3.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.weight                         loaded from res2.2.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.bias                      loaded from res3.0.conv1.norm.bias                   of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.num_batches_tracked       loaded from res3.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_mean              loaded from res3.0.conv1.norm.running_mean           of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_var               loaded from res3.0.conv1.norm.running_var            of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.weight                    loaded from res3.0.conv1.norm.weight                 of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.weight                         loaded from res3.0.conv1.weight                      of shape (128, 256, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.bias                      loaded from res3.0.conv2.norm.bias                   of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.num_batches_tracked       loaded from res3.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_mean              loaded from res3.0.conv2.norm.running_mean           of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_var               loaded from res3.0.conv2.norm.running_var            of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.weight                    loaded from res3.0.conv2.norm.weight                 of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.weight                         loaded from res3.0.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.bias                      loaded from res3.0.conv3.norm.bias                   of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.num_batches_tracked       loaded from res3.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_mean              loaded from res3.0.conv3.norm.running_mean           of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_var               loaded from res3.0.conv3.norm.running_var            of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.weight                    loaded from res3.0.conv3.norm.weight                 of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.weight                         loaded from res3.0.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.bias                   loaded from res3.0.shortcut.norm.bias                of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.num_batches_tracked    loaded from res3.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_mean           loaded from res3.0.shortcut.norm.running_mean        of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_var            loaded from res3.0.shortcut.norm.running_var         of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.weight                 loaded from res3.0.shortcut.norm.weight              of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.weight                      loaded from res3.0.shortcut.weight                   of shape (512, 256, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.bias                      loaded from res3.1.conv1.norm.bias                   of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.num_batches_tracked       loaded from res3.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_mean              loaded from res3.1.conv1.norm.running_mean           of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_var               loaded from res3.1.conv1.norm.running_var            of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.weight                    loaded from res3.1.conv1.norm.weight                 of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.weight                         loaded from res3.1.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.bias                      loaded from res3.1.conv2.norm.bias                   of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.num_batches_tracked       loaded from res3.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_mean              loaded from res3.1.conv2.norm.running_mean           of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_var               loaded from res3.1.conv2.norm.running_var            of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.weight                    loaded from res3.1.conv2.norm.weight                 of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.weight                         loaded from res3.1.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.bias                      loaded from res3.1.conv3.norm.bias                   of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.num_batches_tracked       loaded from res3.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_mean              loaded from res3.1.conv3.norm.running_mean           of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_var               loaded from res3.1.conv3.norm.running_var            of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.weight                    loaded from res3.1.conv3.norm.weight                 of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.weight                         loaded from res3.1.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.bias                      loaded from res3.2.conv1.norm.bias                   of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.num_batches_tracked       loaded from res3.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_mean              loaded from res3.2.conv1.norm.running_mean           of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_var               loaded from res3.2.conv1.norm.running_var            of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.weight                    loaded from res3.2.conv1.norm.weight                 of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.weight                         loaded from res3.2.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.bias                      loaded from res3.2.conv2.norm.bias                   of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.num_batches_tracked       loaded from res3.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_mean              loaded from res3.2.conv2.norm.running_mean           of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_var               loaded from res3.2.conv2.norm.running_var            of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.weight                    loaded from res3.2.conv2.norm.weight                 of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.weight                         loaded from res3.2.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.bias                      loaded from res3.2.conv3.norm.bias                   of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.num_batches_tracked       loaded from res3.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_mean              loaded from res3.2.conv3.norm.running_mean           of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_var               loaded from res3.2.conv3.norm.running_var            of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.weight                    loaded from res3.2.conv3.norm.weight                 of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.weight                         loaded from res3.2.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.bias                      loaded from res3.3.conv1.norm.bias                   of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.num_batches_tracked       loaded from res3.3.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_mean              loaded from res3.3.conv1.norm.running_mean           of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_var               loaded from res3.3.conv1.norm.running_var            of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.weight                    loaded from res3.3.conv1.norm.weight                 of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.weight                         loaded from res3.3.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.bias                      loaded from res3.3.conv2.norm.bias                   of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.num_batches_tracked       loaded from res3.3.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_mean              loaded from res3.3.conv2.norm.running_mean           of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_var               loaded from res3.3.conv2.norm.running_var            of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.weight                    loaded from res3.3.conv2.norm.weight                 of shape (128,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.weight                         loaded from res3.3.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.bias                      loaded from res3.3.conv3.norm.bias                   of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.num_batches_tracked       loaded from res3.3.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_mean              loaded from res3.3.conv3.norm.running_mean           of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_var               loaded from res3.3.conv3.norm.running_var            of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.weight                    loaded from res3.3.conv3.norm.weight                 of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.weight                         loaded from res3.3.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.bias                      loaded from res4.0.conv1.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.num_batches_tracked       loaded from res4.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_mean              loaded from res4.0.conv1.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_var               loaded from res4.0.conv1.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.weight                    loaded from res4.0.conv1.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.weight                         loaded from res4.0.conv1.weight                      of shape (256, 512, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.bias                      loaded from res4.0.conv2.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.num_batches_tracked       loaded from res4.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_mean              loaded from res4.0.conv2.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_var               loaded from res4.0.conv2.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.weight                    loaded from res4.0.conv2.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.weight                         loaded from res4.0.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.bias                      loaded from res4.0.conv3.norm.bias                   of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.num_batches_tracked       loaded from res4.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_mean              loaded from res4.0.conv3.norm.running_mean           of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_var               loaded from res4.0.conv3.norm.running_var            of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.weight                    loaded from res4.0.conv3.norm.weight                 of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.weight                         loaded from res4.0.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.bias                   loaded from res4.0.shortcut.norm.bias                of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.num_batches_tracked    loaded from res4.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_mean           loaded from res4.0.shortcut.norm.running_mean        of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_var            loaded from res4.0.shortcut.norm.running_var         of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.weight                 loaded from res4.0.shortcut.norm.weight              of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.weight                      loaded from res4.0.shortcut.weight                   of shape (1024, 512, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.bias                      loaded from res4.1.conv1.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.num_batches_tracked       loaded from res4.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_mean              loaded from res4.1.conv1.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_var               loaded from res4.1.conv1.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.weight                    loaded from res4.1.conv1.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.weight                         loaded from res4.1.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.bias                      loaded from res4.1.conv2.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.num_batches_tracked       loaded from res4.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_mean              loaded from res4.1.conv2.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_var               loaded from res4.1.conv2.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.weight                    loaded from res4.1.conv2.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.weight                         loaded from res4.1.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.bias                      loaded from res4.1.conv3.norm.bias                   of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.num_batches_tracked       loaded from res4.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_mean              loaded from res4.1.conv3.norm.running_mean           of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_var               loaded from res4.1.conv3.norm.running_var            of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.weight                    loaded from res4.1.conv3.norm.weight                 of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.weight                         loaded from res4.1.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.bias                      loaded from res4.2.conv1.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.num_batches_tracked       loaded from res4.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_mean              loaded from res4.2.conv1.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_var               loaded from res4.2.conv1.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.weight                    loaded from res4.2.conv1.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.weight                         loaded from res4.2.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.bias                      loaded from res4.2.conv2.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.num_batches_tracked       loaded from res4.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_mean              loaded from res4.2.conv2.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_var               loaded from res4.2.conv2.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.weight                    loaded from res4.2.conv2.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.weight                         loaded from res4.2.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.bias                      loaded from res4.2.conv3.norm.bias                   of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.num_batches_tracked       loaded from res4.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_mean              loaded from res4.2.conv3.norm.running_mean           of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_var               loaded from res4.2.conv3.norm.running_var            of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.weight                    loaded from res4.2.conv3.norm.weight                 of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.weight                         loaded from res4.2.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.bias                      loaded from res4.3.conv1.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.num_batches_tracked       loaded from res4.3.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_mean              loaded from res4.3.conv1.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_var               loaded from res4.3.conv1.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.weight                    loaded from res4.3.conv1.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.weight                         loaded from res4.3.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.bias                      loaded from res4.3.conv2.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.num_batches_tracked       loaded from res4.3.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_mean              loaded from res4.3.conv2.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_var               loaded from res4.3.conv2.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.weight                    loaded from res4.3.conv2.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.weight                         loaded from res4.3.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.bias                      loaded from res4.3.conv3.norm.bias                   of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.num_batches_tracked       loaded from res4.3.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_mean              loaded from res4.3.conv3.norm.running_mean           of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_var               loaded from res4.3.conv3.norm.running_var            of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.weight                    loaded from res4.3.conv3.norm.weight                 of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.weight                         loaded from res4.3.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.bias                      loaded from res4.4.conv1.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.num_batches_tracked       loaded from res4.4.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_mean              loaded from res4.4.conv1.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_var               loaded from res4.4.conv1.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.weight                    loaded from res4.4.conv1.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.weight                         loaded from res4.4.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.bias                      loaded from res4.4.conv2.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.num_batches_tracked       loaded from res4.4.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_mean              loaded from res4.4.conv2.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_var               loaded from res4.4.conv2.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.weight                    loaded from res4.4.conv2.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.weight                         loaded from res4.4.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.bias                      loaded from res4.4.conv3.norm.bias                   of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.num_batches_tracked       loaded from res4.4.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_mean              loaded from res4.4.conv3.norm.running_mean           of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_var               loaded from res4.4.conv3.norm.running_var            of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.weight                    loaded from res4.4.conv3.norm.weight                 of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.weight                         loaded from res4.4.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.bias                      loaded from res4.5.conv1.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.num_batches_tracked       loaded from res4.5.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_mean              loaded from res4.5.conv1.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_var               loaded from res4.5.conv1.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.weight                    loaded from res4.5.conv1.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.weight                         loaded from res4.5.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.bias                      loaded from res4.5.conv2.norm.bias                   of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.num_batches_tracked       loaded from res4.5.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_mean              loaded from res4.5.conv2.norm.running_mean           of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_var               loaded from res4.5.conv2.norm.running_var            of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.weight                    loaded from res4.5.conv2.norm.weight                 of shape (256,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.weight                         loaded from res4.5.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.bias                      loaded from res4.5.conv3.norm.bias                   of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.num_batches_tracked       loaded from res4.5.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_mean              loaded from res4.5.conv3.norm.running_mean           of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_var               loaded from res4.5.conv3.norm.running_var            of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.weight                    loaded from res4.5.conv3.norm.weight                 of shape (1024,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.weight                         loaded from res4.5.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.bias                        loaded from stem.conv1.norm.bias                     of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.num_batches_tracked         loaded from stem.conv1.norm.num_batches_tracked      of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_mean                loaded from stem.conv1.norm.running_mean             of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_var                 loaded from stem.conv1.norm.running_var              of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.weight                      loaded from stem.conv1.norm.weight                   of shape (64,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.weight                           loaded from stem.conv1.weight                        of shape (64, 3, 7, 7)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.bias                     loaded from res5.0.conv1.norm.bias                   of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.num_batches_tracked      loaded from res5.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_mean             loaded from res5.0.conv1.norm.running_mean           of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_var              loaded from res5.0.conv1.norm.running_var            of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.weight                   loaded from res5.0.conv1.norm.weight                 of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.weight                        loaded from res5.0.conv1.weight                      of shape (512, 1024, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.bias                     loaded from res5.0.conv2.norm.bias                   of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.num_batches_tracked      loaded from res5.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_mean             loaded from res5.0.conv2.norm.running_mean           of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_var              loaded from res5.0.conv2.norm.running_var            of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.weight                   loaded from res5.0.conv2.norm.weight                 of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.weight                        loaded from res5.0.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.bias                     loaded from res5.0.conv3.norm.bias                   of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.num_batches_tracked      loaded from res5.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_mean             loaded from res5.0.conv3.norm.running_mean           of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_var              loaded from res5.0.conv3.norm.running_var            of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.weight                   loaded from res5.0.conv3.norm.weight                 of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.weight                        loaded from res5.0.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.bias                  loaded from res5.0.shortcut.norm.bias                of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.num_batches_tracked   loaded from res5.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_mean          loaded from res5.0.shortcut.norm.running_mean        of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_var           loaded from res5.0.shortcut.norm.running_var         of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.weight                loaded from res5.0.shortcut.norm.weight              of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.weight                     loaded from res5.0.shortcut.weight                   of shape (2048, 1024, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.bias                     loaded from res5.1.conv1.norm.bias                   of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.num_batches_tracked      loaded from res5.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_mean             loaded from res5.1.conv1.norm.running_mean           of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_var              loaded from res5.1.conv1.norm.running_var            of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.weight                   loaded from res5.1.conv1.norm.weight                 of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.weight                        loaded from res5.1.conv1.weight                      of shape (512, 2048, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.bias                     loaded from res5.1.conv2.norm.bias                   of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.num_batches_tracked      loaded from res5.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_mean             loaded from res5.1.conv2.norm.running_mean           of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_var              loaded from res5.1.conv2.norm.running_var            of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.weight                   loaded from res5.1.conv2.norm.weight                 of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.weight                        loaded from res5.1.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.bias                     loaded from res5.1.conv3.norm.bias                   of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.num_batches_tracked      loaded from res5.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_mean             loaded from res5.1.conv3.norm.running_mean           of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_var              loaded from res5.1.conv3.norm.running_var            of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.weight                   loaded from res5.1.conv3.norm.weight                 of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.weight                        loaded from res5.1.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.bias                     loaded from res5.2.conv1.norm.bias                   of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.num_batches_tracked      loaded from res5.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_mean             loaded from res5.2.conv1.norm.running_mean           of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_var              loaded from res5.2.conv1.norm.running_var            of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.weight                   loaded from res5.2.conv1.norm.weight                 of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.weight                        loaded from res5.2.conv1.weight                      of shape (512, 2048, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.bias                     loaded from res5.2.conv2.norm.bias                   of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.num_batches_tracked      loaded from res5.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_mean             loaded from res5.2.conv2.norm.running_mean           of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_var              loaded from res5.2.conv2.norm.running_var            of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.weight                   loaded from res5.2.conv2.norm.weight                 of shape (512,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.weight                        loaded from res5.2.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.bias                     loaded from res5.2.conv3.norm.bias                   of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.num_batches_tracked      loaded from res5.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_mean             loaded from res5.2.conv3.norm.running_mean           of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_var              loaded from res5.2.conv3.norm.running_var            of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.weight                   loaded from res5.2.conv3.norm.weight                 of shape (2048,)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.weight                        loaded from res5.2.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.anchor_generator.cell_anchors.0[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mroi_heads.res5.norm.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[01/23 12:17:09] detectron2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.0.{bias, weight}[0m
  [35mstem.fc.2.{bias, weight}[0m
[01/23 12:17:09] detectron2.engine.train_loop INFO: Starting training from iteration 0
[01/23 12:17:14] detectron2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 134, in train
    self.run_step()
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 430, in run_step
    self._trainer.run_step()
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 228, in run_step
    loss_dict = self.model(data)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/parallel/distributed.py", line 458, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 166, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 427, in forward
    [features[f] for f in self.in_features], proposal_boxes
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 411, in _shared_roi_transform
    x = self.pooler(features, boxes)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/modeling/poolers.py", line 229, in forward
    return self.level_poolers[0](x[0], pooler_fmt_boxes)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/layers/roi_align.py", line 112, in forward
    self.aligned,
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/layers/roi_align.py", line 32, in forward
    input, roi, spatial_scale, output_size[0], output_size[1], sampling_ratio, aligned
RuntimeError: CUDA out of memory. Tried to allocate 3.06 GiB (GPU 1; 10.91 GiB total capacity; 6.98 GiB already allocated; 2.81 GiB free; 7.18 GiB reserved in total by PyTorch)
[01/23 12:17:14] detectron2.engine.hooks INFO: Total training time: 0:00:05 (0:00:00 on hooks)
[01/23 12:19:57] detectron2 INFO: Rank of current process: 1. World size: 2
[01/23 12:19:57] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  --------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/23 12:19:57] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/23 12:19:57] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/23 12:19:57] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/23 12:19:57] detectron2.utils.env INFO: Using a generated random seed 57775219
[01/23 12:19:58] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/23 12:19:59] detectron2.data.build INFO: Removed 0 images with no usable annotations. 6732 images left.
[01/23 12:19:59] detectron2.data.build INFO: Distribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    car     | 29871        | pedestrian | 4254         |  cyclist   | 1442         |
|            |              |            |              |            |              |
|   total    | 35567        |            |              |            |              |[0m
[01/23 12:19:59] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[01/23 12:19:59] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/23 12:19:59] detectron2.data.common INFO: Serializing 6732 elements to byte tensors and concatenating them all ...
[01/23 12:19:59] detectron2.data.common INFO: Serialized dataset takes 3.81 MiB
[01/23 12:20:00] detectron2.data.build INFO: Removed 0 images with no usable annotations. 6732 images left.
[01/23 12:20:00] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[01/23 12:20:00] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/23 12:20:00] detectron2.data.common INFO: Serializing 6732 elements to byte tensors and concatenating them all ...
[01/23 12:20:00] detectron2.data.common INFO: Serialized dataset takes 3.81 MiB
[01/23 12:20:00] fvcore.common.checkpoint INFO: Loading checkpoint from ./output.pkl
[01/23 12:20:00] fvcore.common.checkpoint INFO: Reading a file from 'MOCO'
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.bias                      loaded from res2.0.conv1.norm.bias                   of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.num_batches_tracked       loaded from res2.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_mean              loaded from res2.0.conv1.norm.running_mean           of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_var               loaded from res2.0.conv1.norm.running_var            of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.weight                    loaded from res2.0.conv1.norm.weight                 of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.weight                         loaded from res2.0.conv1.weight                      of shape (64, 64, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.bias                      loaded from res2.0.conv2.norm.bias                   of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.num_batches_tracked       loaded from res2.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_mean              loaded from res2.0.conv2.norm.running_mean           of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_var               loaded from res2.0.conv2.norm.running_var            of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.weight                    loaded from res2.0.conv2.norm.weight                 of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.weight                         loaded from res2.0.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.bias                      loaded from res2.0.conv3.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.num_batches_tracked       loaded from res2.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_mean              loaded from res2.0.conv3.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_var               loaded from res2.0.conv3.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.weight                    loaded from res2.0.conv3.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.weight                         loaded from res2.0.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.bias                   loaded from res2.0.shortcut.norm.bias                of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.num_batches_tracked    loaded from res2.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_mean           loaded from res2.0.shortcut.norm.running_mean        of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_var            loaded from res2.0.shortcut.norm.running_var         of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.weight                 loaded from res2.0.shortcut.norm.weight              of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.weight                      loaded from res2.0.shortcut.weight                   of shape (256, 64, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.bias                      loaded from res2.1.conv1.norm.bias                   of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.num_batches_tracked       loaded from res2.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_mean              loaded from res2.1.conv1.norm.running_mean           of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_var               loaded from res2.1.conv1.norm.running_var            of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.weight                    loaded from res2.1.conv1.norm.weight                 of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.weight                         loaded from res2.1.conv1.weight                      of shape (64, 256, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.bias                      loaded from res2.1.conv2.norm.bias                   of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.num_batches_tracked       loaded from res2.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_mean              loaded from res2.1.conv2.norm.running_mean           of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_var               loaded from res2.1.conv2.norm.running_var            of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.weight                    loaded from res2.1.conv2.norm.weight                 of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.weight                         loaded from res2.1.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.bias                      loaded from res2.1.conv3.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.num_batches_tracked       loaded from res2.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_mean              loaded from res2.1.conv3.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_var               loaded from res2.1.conv3.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.weight                    loaded from res2.1.conv3.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.weight                         loaded from res2.1.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.bias                      loaded from res2.2.conv1.norm.bias                   of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.num_batches_tracked       loaded from res2.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_mean              loaded from res2.2.conv1.norm.running_mean           of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_var               loaded from res2.2.conv1.norm.running_var            of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.weight                    loaded from res2.2.conv1.norm.weight                 of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.weight                         loaded from res2.2.conv1.weight                      of shape (64, 256, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.bias                      loaded from res2.2.conv2.norm.bias                   of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.num_batches_tracked       loaded from res2.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_mean              loaded from res2.2.conv2.norm.running_mean           of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_var               loaded from res2.2.conv2.norm.running_var            of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.weight                    loaded from res2.2.conv2.norm.weight                 of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.weight                         loaded from res2.2.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.bias                      loaded from res2.2.conv3.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.num_batches_tracked       loaded from res2.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_mean              loaded from res2.2.conv3.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_var               loaded from res2.2.conv3.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.weight                    loaded from res2.2.conv3.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.weight                         loaded from res2.2.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.bias                      loaded from res3.0.conv1.norm.bias                   of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.num_batches_tracked       loaded from res3.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_mean              loaded from res3.0.conv1.norm.running_mean           of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_var               loaded from res3.0.conv1.norm.running_var            of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.weight                    loaded from res3.0.conv1.norm.weight                 of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.weight                         loaded from res3.0.conv1.weight                      of shape (128, 256, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.bias                      loaded from res3.0.conv2.norm.bias                   of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.num_batches_tracked       loaded from res3.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_mean              loaded from res3.0.conv2.norm.running_mean           of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_var               loaded from res3.0.conv2.norm.running_var            of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.weight                    loaded from res3.0.conv2.norm.weight                 of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.weight                         loaded from res3.0.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.bias                      loaded from res3.0.conv3.norm.bias                   of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.num_batches_tracked       loaded from res3.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_mean              loaded from res3.0.conv3.norm.running_mean           of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_var               loaded from res3.0.conv3.norm.running_var            of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.weight                    loaded from res3.0.conv3.norm.weight                 of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.weight                         loaded from res3.0.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.bias                   loaded from res3.0.shortcut.norm.bias                of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.num_batches_tracked    loaded from res3.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_mean           loaded from res3.0.shortcut.norm.running_mean        of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_var            loaded from res3.0.shortcut.norm.running_var         of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.weight                 loaded from res3.0.shortcut.norm.weight              of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.weight                      loaded from res3.0.shortcut.weight                   of shape (512, 256, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.bias                      loaded from res3.1.conv1.norm.bias                   of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.num_batches_tracked       loaded from res3.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_mean              loaded from res3.1.conv1.norm.running_mean           of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_var               loaded from res3.1.conv1.norm.running_var            of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.weight                    loaded from res3.1.conv1.norm.weight                 of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.weight                         loaded from res3.1.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.bias                      loaded from res3.1.conv2.norm.bias                   of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.num_batches_tracked       loaded from res3.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_mean              loaded from res3.1.conv2.norm.running_mean           of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_var               loaded from res3.1.conv2.norm.running_var            of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.weight                    loaded from res3.1.conv2.norm.weight                 of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.weight                         loaded from res3.1.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.bias                      loaded from res3.1.conv3.norm.bias                   of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.num_batches_tracked       loaded from res3.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_mean              loaded from res3.1.conv3.norm.running_mean           of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_var               loaded from res3.1.conv3.norm.running_var            of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.weight                    loaded from res3.1.conv3.norm.weight                 of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.weight                         loaded from res3.1.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.bias                      loaded from res3.2.conv1.norm.bias                   of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.num_batches_tracked       loaded from res3.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_mean              loaded from res3.2.conv1.norm.running_mean           of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_var               loaded from res3.2.conv1.norm.running_var            of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.weight                    loaded from res3.2.conv1.norm.weight                 of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.weight                         loaded from res3.2.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.bias                      loaded from res3.2.conv2.norm.bias                   of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.num_batches_tracked       loaded from res3.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_mean              loaded from res3.2.conv2.norm.running_mean           of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_var               loaded from res3.2.conv2.norm.running_var            of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.weight                    loaded from res3.2.conv2.norm.weight                 of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.weight                         loaded from res3.2.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.bias                      loaded from res3.2.conv3.norm.bias                   of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.num_batches_tracked       loaded from res3.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_mean              loaded from res3.2.conv3.norm.running_mean           of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_var               loaded from res3.2.conv3.norm.running_var            of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.weight                    loaded from res3.2.conv3.norm.weight                 of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.weight                         loaded from res3.2.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.bias                      loaded from res3.3.conv1.norm.bias                   of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.num_batches_tracked       loaded from res3.3.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_mean              loaded from res3.3.conv1.norm.running_mean           of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_var               loaded from res3.3.conv1.norm.running_var            of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.weight                    loaded from res3.3.conv1.norm.weight                 of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.weight                         loaded from res3.3.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.bias                      loaded from res3.3.conv2.norm.bias                   of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.num_batches_tracked       loaded from res3.3.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_mean              loaded from res3.3.conv2.norm.running_mean           of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_var               loaded from res3.3.conv2.norm.running_var            of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.weight                    loaded from res3.3.conv2.norm.weight                 of shape (128,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.weight                         loaded from res3.3.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.bias                      loaded from res3.3.conv3.norm.bias                   of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.num_batches_tracked       loaded from res3.3.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_mean              loaded from res3.3.conv3.norm.running_mean           of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_var               loaded from res3.3.conv3.norm.running_var            of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.weight                    loaded from res3.3.conv3.norm.weight                 of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.weight                         loaded from res3.3.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.bias                      loaded from res4.0.conv1.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.num_batches_tracked       loaded from res4.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_mean              loaded from res4.0.conv1.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_var               loaded from res4.0.conv1.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.weight                    loaded from res4.0.conv1.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.weight                         loaded from res4.0.conv1.weight                      of shape (256, 512, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.bias                      loaded from res4.0.conv2.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.num_batches_tracked       loaded from res4.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_mean              loaded from res4.0.conv2.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_var               loaded from res4.0.conv2.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.weight                    loaded from res4.0.conv2.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.weight                         loaded from res4.0.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.bias                      loaded from res4.0.conv3.norm.bias                   of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.num_batches_tracked       loaded from res4.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_mean              loaded from res4.0.conv3.norm.running_mean           of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_var               loaded from res4.0.conv3.norm.running_var            of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.weight                    loaded from res4.0.conv3.norm.weight                 of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.weight                         loaded from res4.0.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.bias                   loaded from res4.0.shortcut.norm.bias                of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.num_batches_tracked    loaded from res4.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_mean           loaded from res4.0.shortcut.norm.running_mean        of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_var            loaded from res4.0.shortcut.norm.running_var         of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.weight                 loaded from res4.0.shortcut.norm.weight              of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.weight                      loaded from res4.0.shortcut.weight                   of shape (1024, 512, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.bias                      loaded from res4.1.conv1.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.num_batches_tracked       loaded from res4.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_mean              loaded from res4.1.conv1.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_var               loaded from res4.1.conv1.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.weight                    loaded from res4.1.conv1.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.weight                         loaded from res4.1.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.bias                      loaded from res4.1.conv2.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.num_batches_tracked       loaded from res4.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_mean              loaded from res4.1.conv2.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_var               loaded from res4.1.conv2.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.weight                    loaded from res4.1.conv2.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.weight                         loaded from res4.1.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.bias                      loaded from res4.1.conv3.norm.bias                   of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.num_batches_tracked       loaded from res4.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_mean              loaded from res4.1.conv3.norm.running_mean           of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_var               loaded from res4.1.conv3.norm.running_var            of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.weight                    loaded from res4.1.conv3.norm.weight                 of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.weight                         loaded from res4.1.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.bias                      loaded from res4.2.conv1.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.num_batches_tracked       loaded from res4.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_mean              loaded from res4.2.conv1.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_var               loaded from res4.2.conv1.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.weight                    loaded from res4.2.conv1.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.weight                         loaded from res4.2.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.bias                      loaded from res4.2.conv2.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.num_batches_tracked       loaded from res4.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_mean              loaded from res4.2.conv2.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_var               loaded from res4.2.conv2.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.weight                    loaded from res4.2.conv2.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.weight                         loaded from res4.2.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.bias                      loaded from res4.2.conv3.norm.bias                   of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.num_batches_tracked       loaded from res4.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_mean              loaded from res4.2.conv3.norm.running_mean           of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_var               loaded from res4.2.conv3.norm.running_var            of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.weight                    loaded from res4.2.conv3.norm.weight                 of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.weight                         loaded from res4.2.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.bias                      loaded from res4.3.conv1.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.num_batches_tracked       loaded from res4.3.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_mean              loaded from res4.3.conv1.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_var               loaded from res4.3.conv1.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.weight                    loaded from res4.3.conv1.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.weight                         loaded from res4.3.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.bias                      loaded from res4.3.conv2.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.num_batches_tracked       loaded from res4.3.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_mean              loaded from res4.3.conv2.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_var               loaded from res4.3.conv2.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.weight                    loaded from res4.3.conv2.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.weight                         loaded from res4.3.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.bias                      loaded from res4.3.conv3.norm.bias                   of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.num_batches_tracked       loaded from res4.3.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_mean              loaded from res4.3.conv3.norm.running_mean           of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_var               loaded from res4.3.conv3.norm.running_var            of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.weight                    loaded from res4.3.conv3.norm.weight                 of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.weight                         loaded from res4.3.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.bias                      loaded from res4.4.conv1.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.num_batches_tracked       loaded from res4.4.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_mean              loaded from res4.4.conv1.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_var               loaded from res4.4.conv1.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.weight                    loaded from res4.4.conv1.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.weight                         loaded from res4.4.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.bias                      loaded from res4.4.conv2.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.num_batches_tracked       loaded from res4.4.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_mean              loaded from res4.4.conv2.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_var               loaded from res4.4.conv2.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.weight                    loaded from res4.4.conv2.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.weight                         loaded from res4.4.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.bias                      loaded from res4.4.conv3.norm.bias                   of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.num_batches_tracked       loaded from res4.4.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_mean              loaded from res4.4.conv3.norm.running_mean           of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_var               loaded from res4.4.conv3.norm.running_var            of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.weight                    loaded from res4.4.conv3.norm.weight                 of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.weight                         loaded from res4.4.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.bias                      loaded from res4.5.conv1.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.num_batches_tracked       loaded from res4.5.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_mean              loaded from res4.5.conv1.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_var               loaded from res4.5.conv1.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.weight                    loaded from res4.5.conv1.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.weight                         loaded from res4.5.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.bias                      loaded from res4.5.conv2.norm.bias                   of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.num_batches_tracked       loaded from res4.5.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_mean              loaded from res4.5.conv2.norm.running_mean           of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_var               loaded from res4.5.conv2.norm.running_var            of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.weight                    loaded from res4.5.conv2.norm.weight                 of shape (256,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.weight                         loaded from res4.5.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.bias                      loaded from res4.5.conv3.norm.bias                   of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.num_batches_tracked       loaded from res4.5.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_mean              loaded from res4.5.conv3.norm.running_mean           of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_var               loaded from res4.5.conv3.norm.running_var            of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.weight                    loaded from res4.5.conv3.norm.weight                 of shape (1024,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.weight                         loaded from res4.5.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.bias                        loaded from stem.conv1.norm.bias                     of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.num_batches_tracked         loaded from stem.conv1.norm.num_batches_tracked      of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_mean                loaded from stem.conv1.norm.running_mean             of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_var                 loaded from stem.conv1.norm.running_var              of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.weight                      loaded from stem.conv1.norm.weight                   of shape (64,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.weight                           loaded from stem.conv1.weight                        of shape (64, 3, 7, 7)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.bias                     loaded from res5.0.conv1.norm.bias                   of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.num_batches_tracked      loaded from res5.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_mean             loaded from res5.0.conv1.norm.running_mean           of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_var              loaded from res5.0.conv1.norm.running_var            of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.weight                   loaded from res5.0.conv1.norm.weight                 of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.weight                        loaded from res5.0.conv1.weight                      of shape (512, 1024, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.bias                     loaded from res5.0.conv2.norm.bias                   of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.num_batches_tracked      loaded from res5.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_mean             loaded from res5.0.conv2.norm.running_mean           of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_var              loaded from res5.0.conv2.norm.running_var            of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.weight                   loaded from res5.0.conv2.norm.weight                 of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.weight                        loaded from res5.0.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.bias                     loaded from res5.0.conv3.norm.bias                   of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.num_batches_tracked      loaded from res5.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_mean             loaded from res5.0.conv3.norm.running_mean           of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_var              loaded from res5.0.conv3.norm.running_var            of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.weight                   loaded from res5.0.conv3.norm.weight                 of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.weight                        loaded from res5.0.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.bias                  loaded from res5.0.shortcut.norm.bias                of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.num_batches_tracked   loaded from res5.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_mean          loaded from res5.0.shortcut.norm.running_mean        of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_var           loaded from res5.0.shortcut.norm.running_var         of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.weight                loaded from res5.0.shortcut.norm.weight              of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.weight                     loaded from res5.0.shortcut.weight                   of shape (2048, 1024, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.bias                     loaded from res5.1.conv1.norm.bias                   of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.num_batches_tracked      loaded from res5.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_mean             loaded from res5.1.conv1.norm.running_mean           of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_var              loaded from res5.1.conv1.norm.running_var            of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.weight                   loaded from res5.1.conv1.norm.weight                 of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.weight                        loaded from res5.1.conv1.weight                      of shape (512, 2048, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.bias                     loaded from res5.1.conv2.norm.bias                   of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.num_batches_tracked      loaded from res5.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_mean             loaded from res5.1.conv2.norm.running_mean           of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_var              loaded from res5.1.conv2.norm.running_var            of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.weight                   loaded from res5.1.conv2.norm.weight                 of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.weight                        loaded from res5.1.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.bias                     loaded from res5.1.conv3.norm.bias                   of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.num_batches_tracked      loaded from res5.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_mean             loaded from res5.1.conv3.norm.running_mean           of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_var              loaded from res5.1.conv3.norm.running_var            of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.weight                   loaded from res5.1.conv3.norm.weight                 of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.weight                        loaded from res5.1.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.bias                     loaded from res5.2.conv1.norm.bias                   of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.num_batches_tracked      loaded from res5.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_mean             loaded from res5.2.conv1.norm.running_mean           of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_var              loaded from res5.2.conv1.norm.running_var            of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.weight                   loaded from res5.2.conv1.norm.weight                 of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.weight                        loaded from res5.2.conv1.weight                      of shape (512, 2048, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.bias                     loaded from res5.2.conv2.norm.bias                   of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.num_batches_tracked      loaded from res5.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_mean             loaded from res5.2.conv2.norm.running_mean           of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_var              loaded from res5.2.conv2.norm.running_var            of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.weight                   loaded from res5.2.conv2.norm.weight                 of shape (512,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.weight                        loaded from res5.2.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.bias                     loaded from res5.2.conv3.norm.bias                   of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.num_batches_tracked      loaded from res5.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_mean             loaded from res5.2.conv3.norm.running_mean           of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_var              loaded from res5.2.conv3.norm.running_var            of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.weight                   loaded from res5.2.conv3.norm.weight                 of shape (2048,)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.weight                        loaded from res5.2.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.anchor_generator.cell_anchors.0[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mroi_heads.res5.norm.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[01/23 12:20:00] detectron2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.0.{bias, weight}[0m
  [35mstem.fc.2.{bias, weight}[0m
[01/23 12:20:00] detectron2.engine.train_loop INFO: Starting training from iteration 0
[01/23 12:20:06] detectron2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 134, in train
    self.run_step()
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/engine/defaults.py", line 430, in run_step
    self._trainer.run_step()
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/engine/train_loop.py", line 228, in run_step
    loss_dict = self.model(data)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/parallel/distributed.py", line 458, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 166, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 427, in forward
    [features[f] for f in self.in_features], proposal_boxes
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 411, in _shared_roi_transform
    x = self.pooler(features, boxes)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/modeling/poolers.py", line 229, in forward
    return self.level_poolers[0](x[0], pooler_fmt_boxes)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/layers/roi_align.py", line 112, in forward
    self.aligned,
  File "/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/layers/roi_align.py", line 32, in forward
    input, roi, spatial_scale, output_size[0], output_size[1], sampling_ratio, aligned
RuntimeError: CUDA out of memory. Tried to allocate 3.06 GiB (GPU 1; 10.91 GiB total capacity; 6.99 GiB already allocated; 2.80 GiB free; 7.19 GiB reserved in total by PyTorch)
[01/23 12:20:06] detectron2.engine.hooks INFO: Total training time: 0:00:05 (0:00:00 on hooks)
[01/23 13:07:49] detectron2 INFO: Rank of current process: 1. World size: 2
[01/23 13:07:49] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  --------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/23 13:07:49] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/23 13:07:49] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/23 13:07:49] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/23 13:07:49] detectron2.utils.env INFO: Using a generated random seed 49822248
[01/23 13:07:50] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/23 13:07:51] detectron2.data.build INFO: Removed 0 images with no usable annotations. 6732 images left.
[01/23 13:07:51] detectron2.data.build INFO: Distribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    car     | 29871        | pedestrian | 4254         |  cyclist   | 1442         |
|            |              |            |              |            |              |
|   total    | 35567        |            |              |            |              |[0m
[01/23 13:07:51] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[01/23 13:07:51] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/23 13:07:51] detectron2.data.common INFO: Serializing 6732 elements to byte tensors and concatenating them all ...
[01/23 13:07:51] detectron2.data.common INFO: Serialized dataset takes 3.81 MiB
[01/23 13:07:52] detectron2.data.build INFO: Removed 0 images with no usable annotations. 6732 images left.
[01/23 13:07:52] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[01/23 13:07:52] detectron2.data.build INFO: Using training sampler TrainingSampler
[01/23 13:07:52] detectron2.data.common INFO: Serializing 6732 elements to byte tensors and concatenating them all ...
[01/23 13:07:52] detectron2.data.common INFO: Serialized dataset takes 3.81 MiB
[01/23 13:07:52] fvcore.common.checkpoint INFO: Loading checkpoint from ./output.pkl
[01/23 13:07:52] fvcore.common.checkpoint INFO: Reading a file from 'MOCO'
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.bias                      loaded from res2.0.conv1.norm.bias                   of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.num_batches_tracked       loaded from res2.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_mean              loaded from res2.0.conv1.norm.running_mean           of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_var               loaded from res2.0.conv1.norm.running_var            of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.weight                    loaded from res2.0.conv1.norm.weight                 of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.weight                         loaded from res2.0.conv1.weight                      of shape (64, 64, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.bias                      loaded from res2.0.conv2.norm.bias                   of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.num_batches_tracked       loaded from res2.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_mean              loaded from res2.0.conv2.norm.running_mean           of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_var               loaded from res2.0.conv2.norm.running_var            of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.weight                    loaded from res2.0.conv2.norm.weight                 of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.weight                         loaded from res2.0.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.bias                      loaded from res2.0.conv3.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.num_batches_tracked       loaded from res2.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_mean              loaded from res2.0.conv3.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_var               loaded from res2.0.conv3.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.weight                    loaded from res2.0.conv3.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.weight                         loaded from res2.0.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.bias                   loaded from res2.0.shortcut.norm.bias                of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.num_batches_tracked    loaded from res2.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_mean           loaded from res2.0.shortcut.norm.running_mean        of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_var            loaded from res2.0.shortcut.norm.running_var         of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.weight                 loaded from res2.0.shortcut.norm.weight              of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.weight                      loaded from res2.0.shortcut.weight                   of shape (256, 64, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.bias                      loaded from res2.1.conv1.norm.bias                   of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.num_batches_tracked       loaded from res2.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_mean              loaded from res2.1.conv1.norm.running_mean           of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_var               loaded from res2.1.conv1.norm.running_var            of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.weight                    loaded from res2.1.conv1.norm.weight                 of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.weight                         loaded from res2.1.conv1.weight                      of shape (64, 256, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.bias                      loaded from res2.1.conv2.norm.bias                   of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.num_batches_tracked       loaded from res2.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_mean              loaded from res2.1.conv2.norm.running_mean           of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_var               loaded from res2.1.conv2.norm.running_var            of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.weight                    loaded from res2.1.conv2.norm.weight                 of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.weight                         loaded from res2.1.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.bias                      loaded from res2.1.conv3.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.num_batches_tracked       loaded from res2.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_mean              loaded from res2.1.conv3.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_var               loaded from res2.1.conv3.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.weight                    loaded from res2.1.conv3.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.weight                         loaded from res2.1.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.bias                      loaded from res2.2.conv1.norm.bias                   of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.num_batches_tracked       loaded from res2.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_mean              loaded from res2.2.conv1.norm.running_mean           of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_var               loaded from res2.2.conv1.norm.running_var            of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.weight                    loaded from res2.2.conv1.norm.weight                 of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.weight                         loaded from res2.2.conv1.weight                      of shape (64, 256, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.bias                      loaded from res2.2.conv2.norm.bias                   of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.num_batches_tracked       loaded from res2.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_mean              loaded from res2.2.conv2.norm.running_mean           of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_var               loaded from res2.2.conv2.norm.running_var            of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.weight                    loaded from res2.2.conv2.norm.weight                 of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.weight                         loaded from res2.2.conv2.weight                      of shape (64, 64, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.bias                      loaded from res2.2.conv3.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.num_batches_tracked       loaded from res2.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_mean              loaded from res2.2.conv3.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_var               loaded from res2.2.conv3.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.weight                    loaded from res2.2.conv3.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.weight                         loaded from res2.2.conv3.weight                      of shape (256, 64, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.bias                      loaded from res3.0.conv1.norm.bias                   of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.num_batches_tracked       loaded from res3.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_mean              loaded from res3.0.conv1.norm.running_mean           of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_var               loaded from res3.0.conv1.norm.running_var            of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.weight                    loaded from res3.0.conv1.norm.weight                 of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.weight                         loaded from res3.0.conv1.weight                      of shape (128, 256, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.bias                      loaded from res3.0.conv2.norm.bias                   of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.num_batches_tracked       loaded from res3.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_mean              loaded from res3.0.conv2.norm.running_mean           of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_var               loaded from res3.0.conv2.norm.running_var            of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.weight                    loaded from res3.0.conv2.norm.weight                 of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.weight                         loaded from res3.0.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.bias                      loaded from res3.0.conv3.norm.bias                   of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.num_batches_tracked       loaded from res3.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_mean              loaded from res3.0.conv3.norm.running_mean           of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_var               loaded from res3.0.conv3.norm.running_var            of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.weight                    loaded from res3.0.conv3.norm.weight                 of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.weight                         loaded from res3.0.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.bias                   loaded from res3.0.shortcut.norm.bias                of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.num_batches_tracked    loaded from res3.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_mean           loaded from res3.0.shortcut.norm.running_mean        of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_var            loaded from res3.0.shortcut.norm.running_var         of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.weight                 loaded from res3.0.shortcut.norm.weight              of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.weight                      loaded from res3.0.shortcut.weight                   of shape (512, 256, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.bias                      loaded from res3.1.conv1.norm.bias                   of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.num_batches_tracked       loaded from res3.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_mean              loaded from res3.1.conv1.norm.running_mean           of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_var               loaded from res3.1.conv1.norm.running_var            of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.weight                    loaded from res3.1.conv1.norm.weight                 of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.weight                         loaded from res3.1.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.bias                      loaded from res3.1.conv2.norm.bias                   of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.num_batches_tracked       loaded from res3.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_mean              loaded from res3.1.conv2.norm.running_mean           of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_var               loaded from res3.1.conv2.norm.running_var            of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.weight                    loaded from res3.1.conv2.norm.weight                 of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.weight                         loaded from res3.1.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.bias                      loaded from res3.1.conv3.norm.bias                   of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.num_batches_tracked       loaded from res3.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_mean              loaded from res3.1.conv3.norm.running_mean           of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_var               loaded from res3.1.conv3.norm.running_var            of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.weight                    loaded from res3.1.conv3.norm.weight                 of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.weight                         loaded from res3.1.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.bias                      loaded from res3.2.conv1.norm.bias                   of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.num_batches_tracked       loaded from res3.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_mean              loaded from res3.2.conv1.norm.running_mean           of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_var               loaded from res3.2.conv1.norm.running_var            of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.weight                    loaded from res3.2.conv1.norm.weight                 of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.weight                         loaded from res3.2.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.bias                      loaded from res3.2.conv2.norm.bias                   of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.num_batches_tracked       loaded from res3.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_mean              loaded from res3.2.conv2.norm.running_mean           of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_var               loaded from res3.2.conv2.norm.running_var            of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.weight                    loaded from res3.2.conv2.norm.weight                 of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.weight                         loaded from res3.2.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.bias                      loaded from res3.2.conv3.norm.bias                   of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.num_batches_tracked       loaded from res3.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_mean              loaded from res3.2.conv3.norm.running_mean           of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_var               loaded from res3.2.conv3.norm.running_var            of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.weight                    loaded from res3.2.conv3.norm.weight                 of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.weight                         loaded from res3.2.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.bias                      loaded from res3.3.conv1.norm.bias                   of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.num_batches_tracked       loaded from res3.3.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_mean              loaded from res3.3.conv1.norm.running_mean           of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_var               loaded from res3.3.conv1.norm.running_var            of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.weight                    loaded from res3.3.conv1.norm.weight                 of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.weight                         loaded from res3.3.conv1.weight                      of shape (128, 512, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.bias                      loaded from res3.3.conv2.norm.bias                   of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.num_batches_tracked       loaded from res3.3.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_mean              loaded from res3.3.conv2.norm.running_mean           of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_var               loaded from res3.3.conv2.norm.running_var            of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.weight                    loaded from res3.3.conv2.norm.weight                 of shape (128,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.weight                         loaded from res3.3.conv2.weight                      of shape (128, 128, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.bias                      loaded from res3.3.conv3.norm.bias                   of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.num_batches_tracked       loaded from res3.3.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_mean              loaded from res3.3.conv3.norm.running_mean           of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_var               loaded from res3.3.conv3.norm.running_var            of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.weight                    loaded from res3.3.conv3.norm.weight                 of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.weight                         loaded from res3.3.conv3.weight                      of shape (512, 128, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.bias                      loaded from res4.0.conv1.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.num_batches_tracked       loaded from res4.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_mean              loaded from res4.0.conv1.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_var               loaded from res4.0.conv1.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.weight                    loaded from res4.0.conv1.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.weight                         loaded from res4.0.conv1.weight                      of shape (256, 512, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.bias                      loaded from res4.0.conv2.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.num_batches_tracked       loaded from res4.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_mean              loaded from res4.0.conv2.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_var               loaded from res4.0.conv2.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.weight                    loaded from res4.0.conv2.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.weight                         loaded from res4.0.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.bias                      loaded from res4.0.conv3.norm.bias                   of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.num_batches_tracked       loaded from res4.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_mean              loaded from res4.0.conv3.norm.running_mean           of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_var               loaded from res4.0.conv3.norm.running_var            of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.weight                    loaded from res4.0.conv3.norm.weight                 of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.weight                         loaded from res4.0.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.bias                   loaded from res4.0.shortcut.norm.bias                of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.num_batches_tracked    loaded from res4.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_mean           loaded from res4.0.shortcut.norm.running_mean        of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_var            loaded from res4.0.shortcut.norm.running_var         of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.weight                 loaded from res4.0.shortcut.norm.weight              of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.weight                      loaded from res4.0.shortcut.weight                   of shape (1024, 512, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.bias                      loaded from res4.1.conv1.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.num_batches_tracked       loaded from res4.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_mean              loaded from res4.1.conv1.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_var               loaded from res4.1.conv1.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.weight                    loaded from res4.1.conv1.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.weight                         loaded from res4.1.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.bias                      loaded from res4.1.conv2.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.num_batches_tracked       loaded from res4.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_mean              loaded from res4.1.conv2.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_var               loaded from res4.1.conv2.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.weight                    loaded from res4.1.conv2.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.weight                         loaded from res4.1.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.bias                      loaded from res4.1.conv3.norm.bias                   of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.num_batches_tracked       loaded from res4.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_mean              loaded from res4.1.conv3.norm.running_mean           of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_var               loaded from res4.1.conv3.norm.running_var            of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.weight                    loaded from res4.1.conv3.norm.weight                 of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.weight                         loaded from res4.1.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.bias                      loaded from res4.2.conv1.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.num_batches_tracked       loaded from res4.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_mean              loaded from res4.2.conv1.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_var               loaded from res4.2.conv1.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.weight                    loaded from res4.2.conv1.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.weight                         loaded from res4.2.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.bias                      loaded from res4.2.conv2.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.num_batches_tracked       loaded from res4.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_mean              loaded from res4.2.conv2.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_var               loaded from res4.2.conv2.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.weight                    loaded from res4.2.conv2.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.weight                         loaded from res4.2.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.bias                      loaded from res4.2.conv3.norm.bias                   of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.num_batches_tracked       loaded from res4.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_mean              loaded from res4.2.conv3.norm.running_mean           of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_var               loaded from res4.2.conv3.norm.running_var            of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.weight                    loaded from res4.2.conv3.norm.weight                 of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.weight                         loaded from res4.2.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.bias                      loaded from res4.3.conv1.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.num_batches_tracked       loaded from res4.3.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_mean              loaded from res4.3.conv1.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_var               loaded from res4.3.conv1.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.weight                    loaded from res4.3.conv1.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.weight                         loaded from res4.3.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.bias                      loaded from res4.3.conv2.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.num_batches_tracked       loaded from res4.3.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_mean              loaded from res4.3.conv2.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_var               loaded from res4.3.conv2.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.weight                    loaded from res4.3.conv2.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.weight                         loaded from res4.3.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.bias                      loaded from res4.3.conv3.norm.bias                   of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.num_batches_tracked       loaded from res4.3.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_mean              loaded from res4.3.conv3.norm.running_mean           of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_var               loaded from res4.3.conv3.norm.running_var            of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.weight                    loaded from res4.3.conv3.norm.weight                 of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.weight                         loaded from res4.3.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.bias                      loaded from res4.4.conv1.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.num_batches_tracked       loaded from res4.4.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_mean              loaded from res4.4.conv1.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_var               loaded from res4.4.conv1.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.weight                    loaded from res4.4.conv1.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.weight                         loaded from res4.4.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.bias                      loaded from res4.4.conv2.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.num_batches_tracked       loaded from res4.4.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_mean              loaded from res4.4.conv2.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_var               loaded from res4.4.conv2.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.weight                    loaded from res4.4.conv2.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.weight                         loaded from res4.4.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.bias                      loaded from res4.4.conv3.norm.bias                   of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.num_batches_tracked       loaded from res4.4.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_mean              loaded from res4.4.conv3.norm.running_mean           of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_var               loaded from res4.4.conv3.norm.running_var            of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.weight                    loaded from res4.4.conv3.norm.weight                 of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.weight                         loaded from res4.4.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.bias                      loaded from res4.5.conv1.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.num_batches_tracked       loaded from res4.5.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_mean              loaded from res4.5.conv1.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_var               loaded from res4.5.conv1.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.weight                    loaded from res4.5.conv1.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.weight                         loaded from res4.5.conv1.weight                      of shape (256, 1024, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.bias                      loaded from res4.5.conv2.norm.bias                   of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.num_batches_tracked       loaded from res4.5.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_mean              loaded from res4.5.conv2.norm.running_mean           of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_var               loaded from res4.5.conv2.norm.running_var            of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.weight                    loaded from res4.5.conv2.norm.weight                 of shape (256,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.weight                         loaded from res4.5.conv2.weight                      of shape (256, 256, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.bias                      loaded from res4.5.conv3.norm.bias                   of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.num_batches_tracked       loaded from res4.5.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_mean              loaded from res4.5.conv3.norm.running_mean           of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_var               loaded from res4.5.conv3.norm.running_var            of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.weight                    loaded from res4.5.conv3.norm.weight                 of shape (1024,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.weight                         loaded from res4.5.conv3.weight                      of shape (1024, 256, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.bias                        loaded from stem.conv1.norm.bias                     of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.num_batches_tracked         loaded from stem.conv1.norm.num_batches_tracked      of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_mean                loaded from stem.conv1.norm.running_mean             of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_var                 loaded from stem.conv1.norm.running_var              of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.weight                      loaded from stem.conv1.norm.weight                   of shape (64,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.weight                           loaded from stem.conv1.weight                        of shape (64, 3, 7, 7)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.bias                     loaded from res5.0.conv1.norm.bias                   of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.num_batches_tracked      loaded from res5.0.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_mean             loaded from res5.0.conv1.norm.running_mean           of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_var              loaded from res5.0.conv1.norm.running_var            of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.weight                   loaded from res5.0.conv1.norm.weight                 of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.weight                        loaded from res5.0.conv1.weight                      of shape (512, 1024, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.bias                     loaded from res5.0.conv2.norm.bias                   of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.num_batches_tracked      loaded from res5.0.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_mean             loaded from res5.0.conv2.norm.running_mean           of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_var              loaded from res5.0.conv2.norm.running_var            of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.weight                   loaded from res5.0.conv2.norm.weight                 of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.weight                        loaded from res5.0.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.bias                     loaded from res5.0.conv3.norm.bias                   of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.num_batches_tracked      loaded from res5.0.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_mean             loaded from res5.0.conv3.norm.running_mean           of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_var              loaded from res5.0.conv3.norm.running_var            of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.weight                   loaded from res5.0.conv3.norm.weight                 of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.weight                        loaded from res5.0.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.bias                  loaded from res5.0.shortcut.norm.bias                of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.num_batches_tracked   loaded from res5.0.shortcut.norm.num_batches_tracked of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_mean          loaded from res5.0.shortcut.norm.running_mean        of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_var           loaded from res5.0.shortcut.norm.running_var         of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.weight                loaded from res5.0.shortcut.norm.weight              of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.weight                     loaded from res5.0.shortcut.weight                   of shape (2048, 1024, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.bias                     loaded from res5.1.conv1.norm.bias                   of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.num_batches_tracked      loaded from res5.1.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_mean             loaded from res5.1.conv1.norm.running_mean           of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_var              loaded from res5.1.conv1.norm.running_var            of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.weight                   loaded from res5.1.conv1.norm.weight                 of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.weight                        loaded from res5.1.conv1.weight                      of shape (512, 2048, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.bias                     loaded from res5.1.conv2.norm.bias                   of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.num_batches_tracked      loaded from res5.1.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_mean             loaded from res5.1.conv2.norm.running_mean           of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_var              loaded from res5.1.conv2.norm.running_var            of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.weight                   loaded from res5.1.conv2.norm.weight                 of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.weight                        loaded from res5.1.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.bias                     loaded from res5.1.conv3.norm.bias                   of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.num_batches_tracked      loaded from res5.1.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_mean             loaded from res5.1.conv3.norm.running_mean           of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_var              loaded from res5.1.conv3.norm.running_var            of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.weight                   loaded from res5.1.conv3.norm.weight                 of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.weight                        loaded from res5.1.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.bias                     loaded from res5.2.conv1.norm.bias                   of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.num_batches_tracked      loaded from res5.2.conv1.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_mean             loaded from res5.2.conv1.norm.running_mean           of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_var              loaded from res5.2.conv1.norm.running_var            of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.weight                   loaded from res5.2.conv1.norm.weight                 of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.weight                        loaded from res5.2.conv1.weight                      of shape (512, 2048, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.bias                     loaded from res5.2.conv2.norm.bias                   of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.num_batches_tracked      loaded from res5.2.conv2.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_mean             loaded from res5.2.conv2.norm.running_mean           of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_var              loaded from res5.2.conv2.norm.running_var            of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.weight                   loaded from res5.2.conv2.norm.weight                 of shape (512,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.weight                        loaded from res5.2.conv2.weight                      of shape (512, 512, 3, 3)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.bias                     loaded from res5.2.conv3.norm.bias                   of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.num_batches_tracked      loaded from res5.2.conv3.norm.num_batches_tracked    of shape ()
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_mean             loaded from res5.2.conv3.norm.running_mean           of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_var              loaded from res5.2.conv3.norm.running_var            of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.weight                   loaded from res5.2.conv3.norm.weight                 of shape (2048,)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.weight                        loaded from res5.2.conv3.weight                      of shape (2048, 512, 1, 1)
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.anchor_generator.cell_anchors.0[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mroi_heads.res5.norm.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[01/23 13:07:52] detectron2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.0.{bias, weight}[0m
  [35mstem.fc.2.{bias, weight}[0m
[01/23 13:07:52] detectron2.engine.train_loop INFO: Starting training from iteration 0
[01/23 18:03:15] detectron2.engine.hooks INFO: Running precise-BN for 200 iterations...  Note that this could produce different statistics every time.
[01/23 18:03:37] detectron2.engine.hooks INFO: Running precise-BN ... 100/200 iterations.
[01/23 18:03:58] detectron2.engine.hooks INFO: Running precise-BN ... 200/200 iterations.
[01/23 18:03:59] detectron2.engine.hooks INFO: Overall training speed: 23998 iterations in 4:55:08 (0.7379 s / it)
[01/23 18:03:59] detectron2.engine.hooks INFO: Total training time: 4:55:58 (0:00:50 on hooks)
[01/23 18:04:00] detectron2.data.build INFO: Distribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    car     | 3390         | pedestrian | 455          |  cyclist   | 185          |
|            |              |            |              |            |              |
|   total    | 4030         |            |              |            |              |[0m
[01/23 18:04:00] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[01/23 18:04:00] detectron2.data.common INFO: Serializing 749 elements to byte tensors and concatenating them all ...
[01/23 18:04:00] detectron2.data.common INFO: Serialized dataset takes 0.43 MiB
[01/23 18:04:00] detectron2.evaluation.evaluator INFO: Start inference on 374 images
[01/23 18:04:14] detectron2.evaluation.evaluator INFO: Inference done 11/374. 0.2460 s / img. ETA=0:01:29
[01/23 18:04:19] detectron2.evaluation.evaluator INFO: Inference done 31/374. 0.2507 s / img. ETA=0:01:26
[01/23 18:04:24] detectron2.evaluation.evaluator INFO: Inference done 51/374. 0.2502 s / img. ETA=0:01:21
[01/23 18:04:29] detectron2.evaluation.evaluator INFO: Inference done 71/374. 0.2500 s / img. ETA=0:01:16
[01/23 18:04:34] detectron2.evaluation.evaluator INFO: Inference done 91/374. 0.2513 s / img. ETA=0:01:11
[01/23 18:04:39] detectron2.evaluation.evaluator INFO: Inference done 111/374. 0.2525 s / img. ETA=0:01:06
[01/23 18:04:44] detectron2.evaluation.evaluator INFO: Inference done 131/374. 0.2522 s / img. ETA=0:01:01
[01/23 18:04:49] detectron2.evaluation.evaluator INFO: Inference done 151/374. 0.2520 s / img. ETA=0:00:56
[01/23 18:04:54] detectron2.evaluation.evaluator INFO: Inference done 171/374. 0.2521 s / img. ETA=0:00:51
[01/23 18:04:59] detectron2.evaluation.evaluator INFO: Inference done 191/374. 0.2519 s / img. ETA=0:00:46
[01/23 18:05:04] detectron2.evaluation.evaluator INFO: Inference done 211/374. 0.2516 s / img. ETA=0:00:41
[01/23 18:05:09] detectron2.evaluation.evaluator INFO: Inference done 231/374. 0.2518 s / img. ETA=0:00:36
[01/23 18:05:14] detectron2.evaluation.evaluator INFO: Inference done 251/374. 0.2519 s / img. ETA=0:00:31
[01/23 18:05:20] detectron2.evaluation.evaluator INFO: Inference done 271/374. 0.2521 s / img. ETA=0:00:26
[01/23 18:05:25] detectron2.evaluation.evaluator INFO: Inference done 291/374. 0.2526 s / img. ETA=0:00:21
[01/23 18:05:30] detectron2.evaluation.evaluator INFO: Inference done 311/374. 0.2527 s / img. ETA=0:00:16
[01/23 18:05:35] detectron2.evaluation.evaluator INFO: Inference done 331/374. 0.2529 s / img. ETA=0:00:10
[01/23 18:05:40] detectron2.evaluation.evaluator INFO: Inference done 351/374. 0.2533 s / img. ETA=0:00:05
[01/23 18:05:45] detectron2.evaluation.evaluator INFO: Inference done 371/374. 0.2533 s / img. ETA=0:00:00
[01/23 18:05:46] detectron2.evaluation.evaluator INFO: Total inference time: 0:01:34.129537 (0.255094 s / img per device, on 2 devices)
[01/23 18:05:46] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:33 (0.253348 s / img per device, on 2 devices)
[01/24 10:29:39] detectron2 INFO: Rank of current process: 1. World size: 2
[01/24 10:29:40] detectron2 INFO: Environment info:
----------------------  ------------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   /home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda-10.1:/usr/local/cuda - invalid!
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  ------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/24 10:29:40] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=True, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/24 10:29:40] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/24 10:29:40] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/24 10:29:40] detectron2.utils.env INFO: Using a generated random seed 40133855
[01/24 10:29:40] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/24 10:29:40] fvcore.common.checkpoint INFO: Loading checkpoint from ./output.pkl
[01/24 10:29:41] fvcore.common.checkpoint INFO: Reading a file from 'MOCO'
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.bias                      loaded from res2.0.conv1.norm.bias                   of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.num_batches_tracked       loaded from res2.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_mean              loaded from res2.0.conv1.norm.running_mean           of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_var               loaded from res2.0.conv1.norm.running_var            of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.weight                    loaded from res2.0.conv1.norm.weight                 of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.weight                         loaded from res2.0.conv1.weight                      of shape (64, 64, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.bias                      loaded from res2.0.conv2.norm.bias                   of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.num_batches_tracked       loaded from res2.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_mean              loaded from res2.0.conv2.norm.running_mean           of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_var               loaded from res2.0.conv2.norm.running_var            of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.weight                    loaded from res2.0.conv2.norm.weight                 of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.weight                         loaded from res2.0.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.bias                      loaded from res2.0.conv3.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.num_batches_tracked       loaded from res2.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_mean              loaded from res2.0.conv3.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_var               loaded from res2.0.conv3.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.weight                    loaded from res2.0.conv3.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.weight                         loaded from res2.0.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.bias                   loaded from res2.0.shortcut.norm.bias                of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.num_batches_tracked    loaded from res2.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_mean           loaded from res2.0.shortcut.norm.running_mean        of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_var            loaded from res2.0.shortcut.norm.running_var         of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.weight                 loaded from res2.0.shortcut.norm.weight              of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.weight                      loaded from res2.0.shortcut.weight                   of shape (256, 64, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.bias                      loaded from res2.1.conv1.norm.bias                   of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.num_batches_tracked       loaded from res2.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_mean              loaded from res2.1.conv1.norm.running_mean           of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_var               loaded from res2.1.conv1.norm.running_var            of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.weight                    loaded from res2.1.conv1.norm.weight                 of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.weight                         loaded from res2.1.conv1.weight                      of shape (64, 256, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.bias                      loaded from res2.1.conv2.norm.bias                   of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.num_batches_tracked       loaded from res2.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_mean              loaded from res2.1.conv2.norm.running_mean           of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_var               loaded from res2.1.conv2.norm.running_var            of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.weight                    loaded from res2.1.conv2.norm.weight                 of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.weight                         loaded from res2.1.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.bias                      loaded from res2.1.conv3.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.num_batches_tracked       loaded from res2.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_mean              loaded from res2.1.conv3.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_var               loaded from res2.1.conv3.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.weight                    loaded from res2.1.conv3.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.weight                         loaded from res2.1.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.bias                      loaded from res2.2.conv1.norm.bias                   of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.num_batches_tracked       loaded from res2.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_mean              loaded from res2.2.conv1.norm.running_mean           of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_var               loaded from res2.2.conv1.norm.running_var            of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.weight                    loaded from res2.2.conv1.norm.weight                 of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.weight                         loaded from res2.2.conv1.weight                      of shape (64, 256, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.bias                      loaded from res2.2.conv2.norm.bias                   of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.num_batches_tracked       loaded from res2.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_mean              loaded from res2.2.conv2.norm.running_mean           of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_var               loaded from res2.2.conv2.norm.running_var            of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.weight                    loaded from res2.2.conv2.norm.weight                 of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.weight                         loaded from res2.2.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.bias                      loaded from res2.2.conv3.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.num_batches_tracked       loaded from res2.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_mean              loaded from res2.2.conv3.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_var               loaded from res2.2.conv3.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.weight                    loaded from res2.2.conv3.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.weight                         loaded from res2.2.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.bias                      loaded from res3.0.conv1.norm.bias                   of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.num_batches_tracked       loaded from res3.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_mean              loaded from res3.0.conv1.norm.running_mean           of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_var               loaded from res3.0.conv1.norm.running_var            of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.weight                    loaded from res3.0.conv1.norm.weight                 of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.weight                         loaded from res3.0.conv1.weight                      of shape (128, 256, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.bias                      loaded from res3.0.conv2.norm.bias                   of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.num_batches_tracked       loaded from res3.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_mean              loaded from res3.0.conv2.norm.running_mean           of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_var               loaded from res3.0.conv2.norm.running_var            of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.weight                    loaded from res3.0.conv2.norm.weight                 of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.weight                         loaded from res3.0.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.bias                      loaded from res3.0.conv3.norm.bias                   of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.num_batches_tracked       loaded from res3.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_mean              loaded from res3.0.conv3.norm.running_mean           of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_var               loaded from res3.0.conv3.norm.running_var            of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.weight                    loaded from res3.0.conv3.norm.weight                 of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.weight                         loaded from res3.0.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.bias                   loaded from res3.0.shortcut.norm.bias                of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.num_batches_tracked    loaded from res3.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_mean           loaded from res3.0.shortcut.norm.running_mean        of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_var            loaded from res3.0.shortcut.norm.running_var         of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.weight                 loaded from res3.0.shortcut.norm.weight              of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.weight                      loaded from res3.0.shortcut.weight                   of shape (512, 256, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.bias                      loaded from res3.1.conv1.norm.bias                   of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.num_batches_tracked       loaded from res3.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_mean              loaded from res3.1.conv1.norm.running_mean           of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_var               loaded from res3.1.conv1.norm.running_var            of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.weight                    loaded from res3.1.conv1.norm.weight                 of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.weight                         loaded from res3.1.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.bias                      loaded from res3.1.conv2.norm.bias                   of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.num_batches_tracked       loaded from res3.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_mean              loaded from res3.1.conv2.norm.running_mean           of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_var               loaded from res3.1.conv2.norm.running_var            of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.weight                    loaded from res3.1.conv2.norm.weight                 of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.weight                         loaded from res3.1.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.bias                      loaded from res3.1.conv3.norm.bias                   of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.num_batches_tracked       loaded from res3.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_mean              loaded from res3.1.conv3.norm.running_mean           of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_var               loaded from res3.1.conv3.norm.running_var            of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.weight                    loaded from res3.1.conv3.norm.weight                 of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.weight                         loaded from res3.1.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.bias                      loaded from res3.2.conv1.norm.bias                   of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.num_batches_tracked       loaded from res3.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_mean              loaded from res3.2.conv1.norm.running_mean           of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_var               loaded from res3.2.conv1.norm.running_var            of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.weight                    loaded from res3.2.conv1.norm.weight                 of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.weight                         loaded from res3.2.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.bias                      loaded from res3.2.conv2.norm.bias                   of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.num_batches_tracked       loaded from res3.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_mean              loaded from res3.2.conv2.norm.running_mean           of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_var               loaded from res3.2.conv2.norm.running_var            of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.weight                    loaded from res3.2.conv2.norm.weight                 of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.weight                         loaded from res3.2.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.bias                      loaded from res3.2.conv3.norm.bias                   of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.num_batches_tracked       loaded from res3.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_mean              loaded from res3.2.conv3.norm.running_mean           of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_var               loaded from res3.2.conv3.norm.running_var            of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.weight                    loaded from res3.2.conv3.norm.weight                 of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.weight                         loaded from res3.2.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.bias                      loaded from res3.3.conv1.norm.bias                   of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.num_batches_tracked       loaded from res3.3.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_mean              loaded from res3.3.conv1.norm.running_mean           of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_var               loaded from res3.3.conv1.norm.running_var            of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.weight                    loaded from res3.3.conv1.norm.weight                 of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.weight                         loaded from res3.3.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.bias                      loaded from res3.3.conv2.norm.bias                   of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.num_batches_tracked       loaded from res3.3.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_mean              loaded from res3.3.conv2.norm.running_mean           of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_var               loaded from res3.3.conv2.norm.running_var            of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.weight                    loaded from res3.3.conv2.norm.weight                 of shape (128,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.weight                         loaded from res3.3.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.bias                      loaded from res3.3.conv3.norm.bias                   of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.num_batches_tracked       loaded from res3.3.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_mean              loaded from res3.3.conv3.norm.running_mean           of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_var               loaded from res3.3.conv3.norm.running_var            of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.weight                    loaded from res3.3.conv3.norm.weight                 of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.weight                         loaded from res3.3.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.bias                      loaded from res4.0.conv1.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.num_batches_tracked       loaded from res4.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_mean              loaded from res4.0.conv1.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_var               loaded from res4.0.conv1.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.weight                    loaded from res4.0.conv1.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.weight                         loaded from res4.0.conv1.weight                      of shape (256, 512, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.bias                      loaded from res4.0.conv2.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.num_batches_tracked       loaded from res4.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_mean              loaded from res4.0.conv2.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_var               loaded from res4.0.conv2.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.weight                    loaded from res4.0.conv2.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.weight                         loaded from res4.0.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.bias                      loaded from res4.0.conv3.norm.bias                   of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.num_batches_tracked       loaded from res4.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_mean              loaded from res4.0.conv3.norm.running_mean           of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_var               loaded from res4.0.conv3.norm.running_var            of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.weight                    loaded from res4.0.conv3.norm.weight                 of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.weight                         loaded from res4.0.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.bias                   loaded from res4.0.shortcut.norm.bias                of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.num_batches_tracked    loaded from res4.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_mean           loaded from res4.0.shortcut.norm.running_mean        of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_var            loaded from res4.0.shortcut.norm.running_var         of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.weight                 loaded from res4.0.shortcut.norm.weight              of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.weight                      loaded from res4.0.shortcut.weight                   of shape (1024, 512, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.bias                      loaded from res4.1.conv1.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.num_batches_tracked       loaded from res4.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_mean              loaded from res4.1.conv1.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_var               loaded from res4.1.conv1.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.weight                    loaded from res4.1.conv1.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.weight                         loaded from res4.1.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.bias                      loaded from res4.1.conv2.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.num_batches_tracked       loaded from res4.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_mean              loaded from res4.1.conv2.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_var               loaded from res4.1.conv2.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.weight                    loaded from res4.1.conv2.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.weight                         loaded from res4.1.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.bias                      loaded from res4.1.conv3.norm.bias                   of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.num_batches_tracked       loaded from res4.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_mean              loaded from res4.1.conv3.norm.running_mean           of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_var               loaded from res4.1.conv3.norm.running_var            of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.weight                    loaded from res4.1.conv3.norm.weight                 of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.weight                         loaded from res4.1.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.bias                      loaded from res4.2.conv1.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.num_batches_tracked       loaded from res4.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_mean              loaded from res4.2.conv1.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_var               loaded from res4.2.conv1.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.weight                    loaded from res4.2.conv1.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.weight                         loaded from res4.2.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.bias                      loaded from res4.2.conv2.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.num_batches_tracked       loaded from res4.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_mean              loaded from res4.2.conv2.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_var               loaded from res4.2.conv2.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.weight                    loaded from res4.2.conv2.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.weight                         loaded from res4.2.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.bias                      loaded from res4.2.conv3.norm.bias                   of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.num_batches_tracked       loaded from res4.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_mean              loaded from res4.2.conv3.norm.running_mean           of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_var               loaded from res4.2.conv3.norm.running_var            of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.weight                    loaded from res4.2.conv3.norm.weight                 of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.weight                         loaded from res4.2.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.bias                      loaded from res4.3.conv1.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.num_batches_tracked       loaded from res4.3.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_mean              loaded from res4.3.conv1.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_var               loaded from res4.3.conv1.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.weight                    loaded from res4.3.conv1.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.weight                         loaded from res4.3.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.bias                      loaded from res4.3.conv2.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.num_batches_tracked       loaded from res4.3.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_mean              loaded from res4.3.conv2.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_var               loaded from res4.3.conv2.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.weight                    loaded from res4.3.conv2.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.weight                         loaded from res4.3.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.bias                      loaded from res4.3.conv3.norm.bias                   of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.num_batches_tracked       loaded from res4.3.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_mean              loaded from res4.3.conv3.norm.running_mean           of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_var               loaded from res4.3.conv3.norm.running_var            of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.weight                    loaded from res4.3.conv3.norm.weight                 of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.weight                         loaded from res4.3.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.bias                      loaded from res4.4.conv1.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.num_batches_tracked       loaded from res4.4.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_mean              loaded from res4.4.conv1.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_var               loaded from res4.4.conv1.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.weight                    loaded from res4.4.conv1.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.weight                         loaded from res4.4.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.bias                      loaded from res4.4.conv2.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.num_batches_tracked       loaded from res4.4.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_mean              loaded from res4.4.conv2.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_var               loaded from res4.4.conv2.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.weight                    loaded from res4.4.conv2.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.weight                         loaded from res4.4.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.bias                      loaded from res4.4.conv3.norm.bias                   of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.num_batches_tracked       loaded from res4.4.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_mean              loaded from res4.4.conv3.norm.running_mean           of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_var               loaded from res4.4.conv3.norm.running_var            of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.weight                    loaded from res4.4.conv3.norm.weight                 of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.weight                         loaded from res4.4.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.bias                      loaded from res4.5.conv1.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.num_batches_tracked       loaded from res4.5.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_mean              loaded from res4.5.conv1.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_var               loaded from res4.5.conv1.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.weight                    loaded from res4.5.conv1.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.weight                         loaded from res4.5.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.bias                      loaded from res4.5.conv2.norm.bias                   of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.num_batches_tracked       loaded from res4.5.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_mean              loaded from res4.5.conv2.norm.running_mean           of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_var               loaded from res4.5.conv2.norm.running_var            of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.weight                    loaded from res4.5.conv2.norm.weight                 of shape (256,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.weight                         loaded from res4.5.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.bias                      loaded from res4.5.conv3.norm.bias                   of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.num_batches_tracked       loaded from res4.5.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_mean              loaded from res4.5.conv3.norm.running_mean           of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_var               loaded from res4.5.conv3.norm.running_var            of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.weight                    loaded from res4.5.conv3.norm.weight                 of shape (1024,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.weight                         loaded from res4.5.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.bias                        loaded from stem.conv1.norm.bias                     of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.num_batches_tracked         loaded from stem.conv1.norm.num_batches_tracked      of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_mean                loaded from stem.conv1.norm.running_mean             of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_var                 loaded from stem.conv1.norm.running_var              of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.weight                      loaded from stem.conv1.norm.weight                   of shape (64,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.weight                           loaded from stem.conv1.weight                        of shape (64, 3, 7, 7)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.bias                     loaded from res5.0.conv1.norm.bias                   of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.num_batches_tracked      loaded from res5.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_mean             loaded from res5.0.conv1.norm.running_mean           of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_var              loaded from res5.0.conv1.norm.running_var            of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.weight                   loaded from res5.0.conv1.norm.weight                 of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.weight                        loaded from res5.0.conv1.weight                      of shape (512, 1024, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.bias                     loaded from res5.0.conv2.norm.bias                   of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.num_batches_tracked      loaded from res5.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_mean             loaded from res5.0.conv2.norm.running_mean           of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_var              loaded from res5.0.conv2.norm.running_var            of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.weight                   loaded from res5.0.conv2.norm.weight                 of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.weight                        loaded from res5.0.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.bias                     loaded from res5.0.conv3.norm.bias                   of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.num_batches_tracked      loaded from res5.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_mean             loaded from res5.0.conv3.norm.running_mean           of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_var              loaded from res5.0.conv3.norm.running_var            of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.weight                   loaded from res5.0.conv3.norm.weight                 of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.weight                        loaded from res5.0.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.bias                  loaded from res5.0.shortcut.norm.bias                of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.num_batches_tracked   loaded from res5.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_mean          loaded from res5.0.shortcut.norm.running_mean        of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_var           loaded from res5.0.shortcut.norm.running_var         of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.weight                loaded from res5.0.shortcut.norm.weight              of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.weight                     loaded from res5.0.shortcut.weight                   of shape (2048, 1024, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.bias                     loaded from res5.1.conv1.norm.bias                   of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.num_batches_tracked      loaded from res5.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_mean             loaded from res5.1.conv1.norm.running_mean           of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_var              loaded from res5.1.conv1.norm.running_var            of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.weight                   loaded from res5.1.conv1.norm.weight                 of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.weight                        loaded from res5.1.conv1.weight                      of shape (512, 2048, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.bias                     loaded from res5.1.conv2.norm.bias                   of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.num_batches_tracked      loaded from res5.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_mean             loaded from res5.1.conv2.norm.running_mean           of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_var              loaded from res5.1.conv2.norm.running_var            of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.weight                   loaded from res5.1.conv2.norm.weight                 of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.weight                        loaded from res5.1.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.bias                     loaded from res5.1.conv3.norm.bias                   of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.num_batches_tracked      loaded from res5.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_mean             loaded from res5.1.conv3.norm.running_mean           of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_var              loaded from res5.1.conv3.norm.running_var            of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.weight                   loaded from res5.1.conv3.norm.weight                 of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.weight                        loaded from res5.1.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.bias                     loaded from res5.2.conv1.norm.bias                   of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.num_batches_tracked      loaded from res5.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_mean             loaded from res5.2.conv1.norm.running_mean           of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_var              loaded from res5.2.conv1.norm.running_var            of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.weight                   loaded from res5.2.conv1.norm.weight                 of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.weight                        loaded from res5.2.conv1.weight                      of shape (512, 2048, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.bias                     loaded from res5.2.conv2.norm.bias                   of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.num_batches_tracked      loaded from res5.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_mean             loaded from res5.2.conv2.norm.running_mean           of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_var              loaded from res5.2.conv2.norm.running_var            of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.weight                   loaded from res5.2.conv2.norm.weight                 of shape (512,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.weight                        loaded from res5.2.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.bias                     loaded from res5.2.conv3.norm.bias                   of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.num_batches_tracked      loaded from res5.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_mean             loaded from res5.2.conv3.norm.running_mean           of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_var              loaded from res5.2.conv3.norm.running_var            of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.weight                   loaded from res5.2.conv3.norm.weight                 of shape (2048,)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.weight                        loaded from res5.2.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.anchor_generator.cell_anchors.0[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mroi_heads.res5.norm.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[01/24 10:29:41] detectron2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.0.{bias, weight}[0m
  [35mstem.fc.2.{bias, weight}[0m
[01/24 10:29:43] detectron2.data.build INFO: Distribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    car     | 3390         | pedestrian | 455          |  cyclist   | 185          |
|            |              |            |              |            |              |
|   total    | 4030         |            |              |            |              |[0m
[01/24 10:29:43] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[01/24 10:29:43] detectron2.data.common INFO: Serializing 749 elements to byte tensors and concatenating them all ...
[01/24 10:29:43] detectron2.data.common INFO: Serialized dataset takes 0.43 MiB
[01/24 10:29:43] detectron2.evaluation.evaluator INFO: Start inference on 374 images
[01/24 10:29:51] detectron2.evaluation.evaluator INFO: Inference done 11/374. 0.2527 s / img. ETA=0:01:32
[01/24 10:29:56] detectron2.evaluation.evaluator INFO: Inference done 32/374. 0.2483 s / img. ETA=0:01:25
[01/24 10:30:01] detectron2.evaluation.evaluator INFO: Inference done 52/374. 0.2485 s / img. ETA=0:01:20
[01/24 10:30:07] detectron2.evaluation.evaluator INFO: Inference done 73/374. 0.2467 s / img. ETA=0:01:14
[01/24 10:30:12] detectron2.evaluation.evaluator INFO: Inference done 94/374. 0.2459 s / img. ETA=0:01:09
[01/24 10:30:17] detectron2.evaluation.evaluator INFO: Inference done 114/374. 0.2464 s / img. ETA=0:01:04
[01/24 10:30:22] detectron2.evaluation.evaluator INFO: Inference done 135/374. 0.2466 s / img. ETA=0:00:59
[01/24 10:30:27] detectron2.evaluation.evaluator INFO: Inference done 156/374. 0.2462 s / img. ETA=0:00:54
[01/24 10:30:32] detectron2.evaluation.evaluator INFO: Inference done 177/374. 0.2459 s / img. ETA=0:00:48
[01/24 10:30:37] detectron2.evaluation.evaluator INFO: Inference done 198/374. 0.2458 s / img. ETA=0:00:43
[01/24 10:30:43] detectron2.evaluation.evaluator INFO: Inference done 219/374. 0.2458 s / img. ETA=0:00:38
[01/24 10:30:48] detectron2.evaluation.evaluator INFO: Inference done 240/374. 0.2457 s / img. ETA=0:00:33
[01/24 10:30:53] detectron2.evaluation.evaluator INFO: Inference done 261/374. 0.2457 s / img. ETA=0:00:27
[01/24 10:30:58] detectron2.evaluation.evaluator INFO: Inference done 282/374. 0.2457 s / img. ETA=0:00:22
[01/24 10:31:03] detectron2.evaluation.evaluator INFO: Inference done 303/374. 0.2458 s / img. ETA=0:00:17
[01/24 10:31:09] detectron2.evaluation.evaluator INFO: Inference done 324/374. 0.2458 s / img. ETA=0:00:12
[01/24 10:31:14] detectron2.evaluation.evaluator INFO: Inference done 345/374. 0.2460 s / img. ETA=0:00:07
[01/24 10:31:19] detectron2.evaluation.evaluator INFO: Inference done 366/374. 0.2461 s / img. ETA=0:00:01
[01/24 10:31:21] detectron2.evaluation.evaluator INFO: Total inference time: 0:01:31.717487 (0.248557 s / img per device, on 2 devices)
[01/24 10:31:21] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:30 (0.246102 s / img per device, on 2 devices)
[01/24 11:14:33] detectron2 INFO: Rank of current process: 1. World size: 2
[01/24 11:14:33] detectron2 INFO: Environment info:
----------------------  ------------------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   /home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2/_C.cpython-37m-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda-10.1:/usr/local/cuda - invalid!
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  /home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  ------------------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/24 11:14:33] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=True, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/24 11:14:33] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/24 11:14:33] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/24 11:14:33] detectron2.utils.env INFO: Using a generated random seed 33713169
[01/24 11:14:34] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/24 11:14:34] fvcore.common.checkpoint INFO: Loading checkpoint from ./output.pkl
[01/24 11:14:34] fvcore.common.checkpoint INFO: Reading a file from 'MOCO'
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.bias                      loaded from res2.0.conv1.norm.bias                   of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.num_batches_tracked       loaded from res2.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_mean              loaded from res2.0.conv1.norm.running_mean           of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_var               loaded from res2.0.conv1.norm.running_var            of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.weight                    loaded from res2.0.conv1.norm.weight                 of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.weight                         loaded from res2.0.conv1.weight                      of shape (64, 64, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.bias                      loaded from res2.0.conv2.norm.bias                   of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.num_batches_tracked       loaded from res2.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_mean              loaded from res2.0.conv2.norm.running_mean           of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_var               loaded from res2.0.conv2.norm.running_var            of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.weight                    loaded from res2.0.conv2.norm.weight                 of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.weight                         loaded from res2.0.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.bias                      loaded from res2.0.conv3.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.num_batches_tracked       loaded from res2.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_mean              loaded from res2.0.conv3.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_var               loaded from res2.0.conv3.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.weight                    loaded from res2.0.conv3.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.weight                         loaded from res2.0.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.bias                   loaded from res2.0.shortcut.norm.bias                of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.num_batches_tracked    loaded from res2.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_mean           loaded from res2.0.shortcut.norm.running_mean        of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_var            loaded from res2.0.shortcut.norm.running_var         of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.weight                 loaded from res2.0.shortcut.norm.weight              of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.weight                      loaded from res2.0.shortcut.weight                   of shape (256, 64, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.bias                      loaded from res2.1.conv1.norm.bias                   of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.num_batches_tracked       loaded from res2.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_mean              loaded from res2.1.conv1.norm.running_mean           of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_var               loaded from res2.1.conv1.norm.running_var            of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.weight                    loaded from res2.1.conv1.norm.weight                 of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.weight                         loaded from res2.1.conv1.weight                      of shape (64, 256, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.bias                      loaded from res2.1.conv2.norm.bias                   of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.num_batches_tracked       loaded from res2.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_mean              loaded from res2.1.conv2.norm.running_mean           of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_var               loaded from res2.1.conv2.norm.running_var            of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.weight                    loaded from res2.1.conv2.norm.weight                 of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.weight                         loaded from res2.1.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.bias                      loaded from res2.1.conv3.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.num_batches_tracked       loaded from res2.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_mean              loaded from res2.1.conv3.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_var               loaded from res2.1.conv3.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.weight                    loaded from res2.1.conv3.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.weight                         loaded from res2.1.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.bias                      loaded from res2.2.conv1.norm.bias                   of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.num_batches_tracked       loaded from res2.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_mean              loaded from res2.2.conv1.norm.running_mean           of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_var               loaded from res2.2.conv1.norm.running_var            of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.weight                    loaded from res2.2.conv1.norm.weight                 of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.weight                         loaded from res2.2.conv1.weight                      of shape (64, 256, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.bias                      loaded from res2.2.conv2.norm.bias                   of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.num_batches_tracked       loaded from res2.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_mean              loaded from res2.2.conv2.norm.running_mean           of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_var               loaded from res2.2.conv2.norm.running_var            of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.weight                    loaded from res2.2.conv2.norm.weight                 of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.weight                         loaded from res2.2.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.bias                      loaded from res2.2.conv3.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.num_batches_tracked       loaded from res2.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_mean              loaded from res2.2.conv3.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_var               loaded from res2.2.conv3.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.weight                    loaded from res2.2.conv3.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.weight                         loaded from res2.2.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.bias                      loaded from res3.0.conv1.norm.bias                   of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.num_batches_tracked       loaded from res3.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_mean              loaded from res3.0.conv1.norm.running_mean           of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_var               loaded from res3.0.conv1.norm.running_var            of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.weight                    loaded from res3.0.conv1.norm.weight                 of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.weight                         loaded from res3.0.conv1.weight                      of shape (128, 256, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.bias                      loaded from res3.0.conv2.norm.bias                   of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.num_batches_tracked       loaded from res3.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_mean              loaded from res3.0.conv2.norm.running_mean           of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_var               loaded from res3.0.conv2.norm.running_var            of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.weight                    loaded from res3.0.conv2.norm.weight                 of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.weight                         loaded from res3.0.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.bias                      loaded from res3.0.conv3.norm.bias                   of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.num_batches_tracked       loaded from res3.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_mean              loaded from res3.0.conv3.norm.running_mean           of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_var               loaded from res3.0.conv3.norm.running_var            of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.weight                    loaded from res3.0.conv3.norm.weight                 of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.weight                         loaded from res3.0.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.bias                   loaded from res3.0.shortcut.norm.bias                of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.num_batches_tracked    loaded from res3.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_mean           loaded from res3.0.shortcut.norm.running_mean        of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_var            loaded from res3.0.shortcut.norm.running_var         of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.weight                 loaded from res3.0.shortcut.norm.weight              of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.weight                      loaded from res3.0.shortcut.weight                   of shape (512, 256, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.bias                      loaded from res3.1.conv1.norm.bias                   of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.num_batches_tracked       loaded from res3.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_mean              loaded from res3.1.conv1.norm.running_mean           of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_var               loaded from res3.1.conv1.norm.running_var            of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.weight                    loaded from res3.1.conv1.norm.weight                 of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.weight                         loaded from res3.1.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.bias                      loaded from res3.1.conv2.norm.bias                   of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.num_batches_tracked       loaded from res3.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_mean              loaded from res3.1.conv2.norm.running_mean           of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_var               loaded from res3.1.conv2.norm.running_var            of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.weight                    loaded from res3.1.conv2.norm.weight                 of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.weight                         loaded from res3.1.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.bias                      loaded from res3.1.conv3.norm.bias                   of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.num_batches_tracked       loaded from res3.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_mean              loaded from res3.1.conv3.norm.running_mean           of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_var               loaded from res3.1.conv3.norm.running_var            of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.weight                    loaded from res3.1.conv3.norm.weight                 of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.weight                         loaded from res3.1.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.bias                      loaded from res3.2.conv1.norm.bias                   of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.num_batches_tracked       loaded from res3.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_mean              loaded from res3.2.conv1.norm.running_mean           of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_var               loaded from res3.2.conv1.norm.running_var            of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.weight                    loaded from res3.2.conv1.norm.weight                 of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.weight                         loaded from res3.2.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.bias                      loaded from res3.2.conv2.norm.bias                   of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.num_batches_tracked       loaded from res3.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_mean              loaded from res3.2.conv2.norm.running_mean           of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_var               loaded from res3.2.conv2.norm.running_var            of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.weight                    loaded from res3.2.conv2.norm.weight                 of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.weight                         loaded from res3.2.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.bias                      loaded from res3.2.conv3.norm.bias                   of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.num_batches_tracked       loaded from res3.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_mean              loaded from res3.2.conv3.norm.running_mean           of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_var               loaded from res3.2.conv3.norm.running_var            of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.weight                    loaded from res3.2.conv3.norm.weight                 of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.weight                         loaded from res3.2.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.bias                      loaded from res3.3.conv1.norm.bias                   of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.num_batches_tracked       loaded from res3.3.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_mean              loaded from res3.3.conv1.norm.running_mean           of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_var               loaded from res3.3.conv1.norm.running_var            of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.weight                    loaded from res3.3.conv1.norm.weight                 of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.weight                         loaded from res3.3.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.bias                      loaded from res3.3.conv2.norm.bias                   of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.num_batches_tracked       loaded from res3.3.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_mean              loaded from res3.3.conv2.norm.running_mean           of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_var               loaded from res3.3.conv2.norm.running_var            of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.weight                    loaded from res3.3.conv2.norm.weight                 of shape (128,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.weight                         loaded from res3.3.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.bias                      loaded from res3.3.conv3.norm.bias                   of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.num_batches_tracked       loaded from res3.3.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_mean              loaded from res3.3.conv3.norm.running_mean           of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_var               loaded from res3.3.conv3.norm.running_var            of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.weight                    loaded from res3.3.conv3.norm.weight                 of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.weight                         loaded from res3.3.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.bias                      loaded from res4.0.conv1.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.num_batches_tracked       loaded from res4.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_mean              loaded from res4.0.conv1.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_var               loaded from res4.0.conv1.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.weight                    loaded from res4.0.conv1.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.weight                         loaded from res4.0.conv1.weight                      of shape (256, 512, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.bias                      loaded from res4.0.conv2.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.num_batches_tracked       loaded from res4.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_mean              loaded from res4.0.conv2.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_var               loaded from res4.0.conv2.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.weight                    loaded from res4.0.conv2.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.weight                         loaded from res4.0.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.bias                      loaded from res4.0.conv3.norm.bias                   of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.num_batches_tracked       loaded from res4.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_mean              loaded from res4.0.conv3.norm.running_mean           of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_var               loaded from res4.0.conv3.norm.running_var            of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.weight                    loaded from res4.0.conv3.norm.weight                 of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.weight                         loaded from res4.0.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.bias                   loaded from res4.0.shortcut.norm.bias                of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.num_batches_tracked    loaded from res4.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_mean           loaded from res4.0.shortcut.norm.running_mean        of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_var            loaded from res4.0.shortcut.norm.running_var         of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.weight                 loaded from res4.0.shortcut.norm.weight              of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.weight                      loaded from res4.0.shortcut.weight                   of shape (1024, 512, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.bias                      loaded from res4.1.conv1.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.num_batches_tracked       loaded from res4.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_mean              loaded from res4.1.conv1.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_var               loaded from res4.1.conv1.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.weight                    loaded from res4.1.conv1.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.weight                         loaded from res4.1.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.bias                      loaded from res4.1.conv2.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.num_batches_tracked       loaded from res4.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_mean              loaded from res4.1.conv2.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_var               loaded from res4.1.conv2.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.weight                    loaded from res4.1.conv2.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.weight                         loaded from res4.1.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.bias                      loaded from res4.1.conv3.norm.bias                   of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.num_batches_tracked       loaded from res4.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_mean              loaded from res4.1.conv3.norm.running_mean           of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_var               loaded from res4.1.conv3.norm.running_var            of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.weight                    loaded from res4.1.conv3.norm.weight                 of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.weight                         loaded from res4.1.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.bias                      loaded from res4.2.conv1.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.num_batches_tracked       loaded from res4.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_mean              loaded from res4.2.conv1.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_var               loaded from res4.2.conv1.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.weight                    loaded from res4.2.conv1.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.weight                         loaded from res4.2.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.bias                      loaded from res4.2.conv2.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.num_batches_tracked       loaded from res4.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_mean              loaded from res4.2.conv2.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_var               loaded from res4.2.conv2.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.weight                    loaded from res4.2.conv2.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.weight                         loaded from res4.2.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.bias                      loaded from res4.2.conv3.norm.bias                   of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.num_batches_tracked       loaded from res4.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_mean              loaded from res4.2.conv3.norm.running_mean           of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_var               loaded from res4.2.conv3.norm.running_var            of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.weight                    loaded from res4.2.conv3.norm.weight                 of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.weight                         loaded from res4.2.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.bias                      loaded from res4.3.conv1.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.num_batches_tracked       loaded from res4.3.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_mean              loaded from res4.3.conv1.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_var               loaded from res4.3.conv1.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.weight                    loaded from res4.3.conv1.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.weight                         loaded from res4.3.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.bias                      loaded from res4.3.conv2.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.num_batches_tracked       loaded from res4.3.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_mean              loaded from res4.3.conv2.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_var               loaded from res4.3.conv2.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.weight                    loaded from res4.3.conv2.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.weight                         loaded from res4.3.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.bias                      loaded from res4.3.conv3.norm.bias                   of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.num_batches_tracked       loaded from res4.3.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_mean              loaded from res4.3.conv3.norm.running_mean           of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_var               loaded from res4.3.conv3.norm.running_var            of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.weight                    loaded from res4.3.conv3.norm.weight                 of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.weight                         loaded from res4.3.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.bias                      loaded from res4.4.conv1.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.num_batches_tracked       loaded from res4.4.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_mean              loaded from res4.4.conv1.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_var               loaded from res4.4.conv1.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.weight                    loaded from res4.4.conv1.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.weight                         loaded from res4.4.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.bias                      loaded from res4.4.conv2.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.num_batches_tracked       loaded from res4.4.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_mean              loaded from res4.4.conv2.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_var               loaded from res4.4.conv2.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.weight                    loaded from res4.4.conv2.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.weight                         loaded from res4.4.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.bias                      loaded from res4.4.conv3.norm.bias                   of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.num_batches_tracked       loaded from res4.4.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_mean              loaded from res4.4.conv3.norm.running_mean           of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_var               loaded from res4.4.conv3.norm.running_var            of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.weight                    loaded from res4.4.conv3.norm.weight                 of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.weight                         loaded from res4.4.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.bias                      loaded from res4.5.conv1.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.num_batches_tracked       loaded from res4.5.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_mean              loaded from res4.5.conv1.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_var               loaded from res4.5.conv1.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.weight                    loaded from res4.5.conv1.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.weight                         loaded from res4.5.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.bias                      loaded from res4.5.conv2.norm.bias                   of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.num_batches_tracked       loaded from res4.5.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_mean              loaded from res4.5.conv2.norm.running_mean           of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_var               loaded from res4.5.conv2.norm.running_var            of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.weight                    loaded from res4.5.conv2.norm.weight                 of shape (256,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.weight                         loaded from res4.5.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.bias                      loaded from res4.5.conv3.norm.bias                   of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.num_batches_tracked       loaded from res4.5.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_mean              loaded from res4.5.conv3.norm.running_mean           of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_var               loaded from res4.5.conv3.norm.running_var            of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.weight                    loaded from res4.5.conv3.norm.weight                 of shape (1024,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.weight                         loaded from res4.5.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.bias                        loaded from stem.conv1.norm.bias                     of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.num_batches_tracked         loaded from stem.conv1.norm.num_batches_tracked      of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_mean                loaded from stem.conv1.norm.running_mean             of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_var                 loaded from stem.conv1.norm.running_var              of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.weight                      loaded from stem.conv1.norm.weight                   of shape (64,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.weight                           loaded from stem.conv1.weight                        of shape (64, 3, 7, 7)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.bias                     loaded from res5.0.conv1.norm.bias                   of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.num_batches_tracked      loaded from res5.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_mean             loaded from res5.0.conv1.norm.running_mean           of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_var              loaded from res5.0.conv1.norm.running_var            of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.weight                   loaded from res5.0.conv1.norm.weight                 of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.weight                        loaded from res5.0.conv1.weight                      of shape (512, 1024, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.bias                     loaded from res5.0.conv2.norm.bias                   of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.num_batches_tracked      loaded from res5.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_mean             loaded from res5.0.conv2.norm.running_mean           of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_var              loaded from res5.0.conv2.norm.running_var            of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.weight                   loaded from res5.0.conv2.norm.weight                 of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.weight                        loaded from res5.0.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.bias                     loaded from res5.0.conv3.norm.bias                   of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.num_batches_tracked      loaded from res5.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_mean             loaded from res5.0.conv3.norm.running_mean           of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_var              loaded from res5.0.conv3.norm.running_var            of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.weight                   loaded from res5.0.conv3.norm.weight                 of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.weight                        loaded from res5.0.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.bias                  loaded from res5.0.shortcut.norm.bias                of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.num_batches_tracked   loaded from res5.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_mean          loaded from res5.0.shortcut.norm.running_mean        of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_var           loaded from res5.0.shortcut.norm.running_var         of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.weight                loaded from res5.0.shortcut.norm.weight              of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.weight                     loaded from res5.0.shortcut.weight                   of shape (2048, 1024, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.bias                     loaded from res5.1.conv1.norm.bias                   of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.num_batches_tracked      loaded from res5.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_mean             loaded from res5.1.conv1.norm.running_mean           of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_var              loaded from res5.1.conv1.norm.running_var            of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.weight                   loaded from res5.1.conv1.norm.weight                 of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.weight                        loaded from res5.1.conv1.weight                      of shape (512, 2048, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.bias                     loaded from res5.1.conv2.norm.bias                   of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.num_batches_tracked      loaded from res5.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_mean             loaded from res5.1.conv2.norm.running_mean           of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_var              loaded from res5.1.conv2.norm.running_var            of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.weight                   loaded from res5.1.conv2.norm.weight                 of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.weight                        loaded from res5.1.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.bias                     loaded from res5.1.conv3.norm.bias                   of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.num_batches_tracked      loaded from res5.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_mean             loaded from res5.1.conv3.norm.running_mean           of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_var              loaded from res5.1.conv3.norm.running_var            of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.weight                   loaded from res5.1.conv3.norm.weight                 of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.weight                        loaded from res5.1.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.bias                     loaded from res5.2.conv1.norm.bias                   of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.num_batches_tracked      loaded from res5.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_mean             loaded from res5.2.conv1.norm.running_mean           of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_var              loaded from res5.2.conv1.norm.running_var            of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.weight                   loaded from res5.2.conv1.norm.weight                 of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.weight                        loaded from res5.2.conv1.weight                      of shape (512, 2048, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.bias                     loaded from res5.2.conv2.norm.bias                   of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.num_batches_tracked      loaded from res5.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_mean             loaded from res5.2.conv2.norm.running_mean           of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_var              loaded from res5.2.conv2.norm.running_var            of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.weight                   loaded from res5.2.conv2.norm.weight                 of shape (512,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.weight                        loaded from res5.2.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.bias                     loaded from res5.2.conv3.norm.bias                   of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.num_batches_tracked      loaded from res5.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_mean             loaded from res5.2.conv3.norm.running_mean           of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_var              loaded from res5.2.conv3.norm.running_var            of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.weight                   loaded from res5.2.conv3.norm.weight                 of shape (2048,)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.weight                        loaded from res5.2.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.anchor_generator.cell_anchors.0[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mroi_heads.res5.norm.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[01/24 11:14:34] detectron2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.0.{bias, weight}[0m
  [35mstem.fc.2.{bias, weight}[0m
[01/24 11:14:34] detectron2.data.build INFO: Distribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    car     | 3390         | pedestrian | 455          |  cyclist   | 185          |
|            |              |            |              |            |              |
|   total    | 4030         |            |              |            |              |[0m
[01/24 11:14:34] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[01/24 11:14:34] detectron2.data.common INFO: Serializing 749 elements to byte tensors and concatenating them all ...
[01/24 11:14:34] detectron2.data.common INFO: Serialized dataset takes 0.43 MiB
[01/24 11:14:34] detectron2.evaluation.evaluator INFO: Start inference on 374 images
[01/24 11:14:41] detectron2.evaluation.evaluator INFO: Inference done 11/374. 0.2407 s / img. ETA=0:01:27
[01/24 11:14:46] detectron2.evaluation.evaluator INFO: Inference done 32/374. 0.2459 s / img. ETA=0:01:24
[01/24 11:14:51] detectron2.evaluation.evaluator INFO: Inference done 53/374. 0.2446 s / img. ETA=0:01:19
[01/24 11:14:56] detectron2.evaluation.evaluator INFO: Inference done 72/374. 0.2497 s / img. ETA=0:01:15
[01/24 11:15:01] detectron2.evaluation.evaluator INFO: Inference done 92/374. 0.2494 s / img. ETA=0:01:10
[01/24 11:15:06] detectron2.evaluation.evaluator INFO: Inference done 112/374. 0.2504 s / img. ETA=0:01:06
[01/24 11:15:12] detectron2.evaluation.evaluator INFO: Inference done 133/374. 0.2494 s / img. ETA=0:01:00
[01/24 11:15:17] detectron2.evaluation.evaluator INFO: Inference done 154/374. 0.2493 s / img. ETA=0:00:55
[01/24 11:15:22] detectron2.evaluation.evaluator INFO: Inference done 175/374. 0.2487 s / img. ETA=0:00:49
[01/24 11:15:27] detectron2.evaluation.evaluator INFO: Inference done 196/374. 0.2485 s / img. ETA=0:00:44
[01/24 11:15:32] detectron2.evaluation.evaluator INFO: Inference done 217/374. 0.2481 s / img. ETA=0:00:39
[01/24 11:15:38] detectron2.evaluation.evaluator INFO: Inference done 238/374. 0.2478 s / img. ETA=0:00:33
[01/24 11:15:43] detectron2.evaluation.evaluator INFO: Inference done 259/374. 0.2475 s / img. ETA=0:00:28
[01/24 11:15:48] detectron2.evaluation.evaluator INFO: Inference done 280/374. 0.2473 s / img. ETA=0:00:23
[01/24 11:15:53] detectron2.evaluation.evaluator INFO: Inference done 301/374. 0.2472 s / img. ETA=0:00:18
[01/24 11:15:58] detectron2.evaluation.evaluator INFO: Inference done 322/374. 0.2471 s / img. ETA=0:00:12
[01/24 11:16:03] detectron2.evaluation.evaluator INFO: Inference done 343/374. 0.2470 s / img. ETA=0:00:07
[01/24 11:16:09] detectron2.evaluation.evaluator INFO: Inference done 364/374. 0.2469 s / img. ETA=0:00:02
[01/24 11:16:11] detectron2.evaluation.evaluator INFO: Total inference time: 0:01:32.020016 (0.249377 s / img per device, on 2 devices)
[01/24 11:16:11] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:31 (0.246916 s / img per device, on 2 devices)
[01/24 12:25:10] detectron2 INFO: Rank of current process: 1. World size: 2
[01/24 12:25:11] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  --------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/24 12:25:11] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=True, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/24 12:25:11] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/24 12:25:11] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/24 12:25:11] detectron2.utils.env INFO: Using a generated random seed 11509108
[01/24 12:25:12] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/24 12:25:12] fvcore.common.checkpoint INFO: Loading checkpoint from ./output.pkl
[01/24 12:25:12] fvcore.common.checkpoint INFO: Reading a file from 'MOCO'
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.bias                      loaded from res2.0.conv1.norm.bias                   of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.num_batches_tracked       loaded from res2.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_mean              loaded from res2.0.conv1.norm.running_mean           of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_var               loaded from res2.0.conv1.norm.running_var            of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.weight                    loaded from res2.0.conv1.norm.weight                 of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.weight                         loaded from res2.0.conv1.weight                      of shape (64, 64, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.bias                      loaded from res2.0.conv2.norm.bias                   of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.num_batches_tracked       loaded from res2.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_mean              loaded from res2.0.conv2.norm.running_mean           of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_var               loaded from res2.0.conv2.norm.running_var            of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.weight                    loaded from res2.0.conv2.norm.weight                 of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.weight                         loaded from res2.0.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.bias                      loaded from res2.0.conv3.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.num_batches_tracked       loaded from res2.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_mean              loaded from res2.0.conv3.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_var               loaded from res2.0.conv3.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.weight                    loaded from res2.0.conv3.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.weight                         loaded from res2.0.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.bias                   loaded from res2.0.shortcut.norm.bias                of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.num_batches_tracked    loaded from res2.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_mean           loaded from res2.0.shortcut.norm.running_mean        of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_var            loaded from res2.0.shortcut.norm.running_var         of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.weight                 loaded from res2.0.shortcut.norm.weight              of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.weight                      loaded from res2.0.shortcut.weight                   of shape (256, 64, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.bias                      loaded from res2.1.conv1.norm.bias                   of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.num_batches_tracked       loaded from res2.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_mean              loaded from res2.1.conv1.norm.running_mean           of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_var               loaded from res2.1.conv1.norm.running_var            of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.weight                    loaded from res2.1.conv1.norm.weight                 of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.weight                         loaded from res2.1.conv1.weight                      of shape (64, 256, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.bias                      loaded from res2.1.conv2.norm.bias                   of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.num_batches_tracked       loaded from res2.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_mean              loaded from res2.1.conv2.norm.running_mean           of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_var               loaded from res2.1.conv2.norm.running_var            of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.weight                    loaded from res2.1.conv2.norm.weight                 of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.weight                         loaded from res2.1.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.bias                      loaded from res2.1.conv3.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.num_batches_tracked       loaded from res2.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_mean              loaded from res2.1.conv3.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_var               loaded from res2.1.conv3.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.weight                    loaded from res2.1.conv3.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.weight                         loaded from res2.1.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.bias                      loaded from res2.2.conv1.norm.bias                   of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.num_batches_tracked       loaded from res2.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_mean              loaded from res2.2.conv1.norm.running_mean           of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_var               loaded from res2.2.conv1.norm.running_var            of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.weight                    loaded from res2.2.conv1.norm.weight                 of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.weight                         loaded from res2.2.conv1.weight                      of shape (64, 256, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.bias                      loaded from res2.2.conv2.norm.bias                   of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.num_batches_tracked       loaded from res2.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_mean              loaded from res2.2.conv2.norm.running_mean           of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_var               loaded from res2.2.conv2.norm.running_var            of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.weight                    loaded from res2.2.conv2.norm.weight                 of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.weight                         loaded from res2.2.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.bias                      loaded from res2.2.conv3.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.num_batches_tracked       loaded from res2.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_mean              loaded from res2.2.conv3.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_var               loaded from res2.2.conv3.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.weight                    loaded from res2.2.conv3.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.weight                         loaded from res2.2.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.bias                      loaded from res3.0.conv1.norm.bias                   of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.num_batches_tracked       loaded from res3.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_mean              loaded from res3.0.conv1.norm.running_mean           of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_var               loaded from res3.0.conv1.norm.running_var            of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.weight                    loaded from res3.0.conv1.norm.weight                 of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.weight                         loaded from res3.0.conv1.weight                      of shape (128, 256, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.bias                      loaded from res3.0.conv2.norm.bias                   of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.num_batches_tracked       loaded from res3.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_mean              loaded from res3.0.conv2.norm.running_mean           of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_var               loaded from res3.0.conv2.norm.running_var            of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.weight                    loaded from res3.0.conv2.norm.weight                 of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.weight                         loaded from res3.0.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.bias                      loaded from res3.0.conv3.norm.bias                   of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.num_batches_tracked       loaded from res3.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_mean              loaded from res3.0.conv3.norm.running_mean           of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_var               loaded from res3.0.conv3.norm.running_var            of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.weight                    loaded from res3.0.conv3.norm.weight                 of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.weight                         loaded from res3.0.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.bias                   loaded from res3.0.shortcut.norm.bias                of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.num_batches_tracked    loaded from res3.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_mean           loaded from res3.0.shortcut.norm.running_mean        of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_var            loaded from res3.0.shortcut.norm.running_var         of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.weight                 loaded from res3.0.shortcut.norm.weight              of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.weight                      loaded from res3.0.shortcut.weight                   of shape (512, 256, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.bias                      loaded from res3.1.conv1.norm.bias                   of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.num_batches_tracked       loaded from res3.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_mean              loaded from res3.1.conv1.norm.running_mean           of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_var               loaded from res3.1.conv1.norm.running_var            of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.weight                    loaded from res3.1.conv1.norm.weight                 of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.weight                         loaded from res3.1.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.bias                      loaded from res3.1.conv2.norm.bias                   of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.num_batches_tracked       loaded from res3.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_mean              loaded from res3.1.conv2.norm.running_mean           of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_var               loaded from res3.1.conv2.norm.running_var            of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.weight                    loaded from res3.1.conv2.norm.weight                 of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.weight                         loaded from res3.1.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.bias                      loaded from res3.1.conv3.norm.bias                   of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.num_batches_tracked       loaded from res3.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_mean              loaded from res3.1.conv3.norm.running_mean           of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_var               loaded from res3.1.conv3.norm.running_var            of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.weight                    loaded from res3.1.conv3.norm.weight                 of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.weight                         loaded from res3.1.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.bias                      loaded from res3.2.conv1.norm.bias                   of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.num_batches_tracked       loaded from res3.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_mean              loaded from res3.2.conv1.norm.running_mean           of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_var               loaded from res3.2.conv1.norm.running_var            of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.weight                    loaded from res3.2.conv1.norm.weight                 of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.weight                         loaded from res3.2.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.bias                      loaded from res3.2.conv2.norm.bias                   of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.num_batches_tracked       loaded from res3.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_mean              loaded from res3.2.conv2.norm.running_mean           of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_var               loaded from res3.2.conv2.norm.running_var            of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.weight                    loaded from res3.2.conv2.norm.weight                 of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.weight                         loaded from res3.2.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.bias                      loaded from res3.2.conv3.norm.bias                   of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.num_batches_tracked       loaded from res3.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_mean              loaded from res3.2.conv3.norm.running_mean           of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_var               loaded from res3.2.conv3.norm.running_var            of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.weight                    loaded from res3.2.conv3.norm.weight                 of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.weight                         loaded from res3.2.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.bias                      loaded from res3.3.conv1.norm.bias                   of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.num_batches_tracked       loaded from res3.3.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_mean              loaded from res3.3.conv1.norm.running_mean           of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_var               loaded from res3.3.conv1.norm.running_var            of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.weight                    loaded from res3.3.conv1.norm.weight                 of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.weight                         loaded from res3.3.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.bias                      loaded from res3.3.conv2.norm.bias                   of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.num_batches_tracked       loaded from res3.3.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_mean              loaded from res3.3.conv2.norm.running_mean           of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_var               loaded from res3.3.conv2.norm.running_var            of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.weight                    loaded from res3.3.conv2.norm.weight                 of shape (128,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.weight                         loaded from res3.3.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.bias                      loaded from res3.3.conv3.norm.bias                   of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.num_batches_tracked       loaded from res3.3.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_mean              loaded from res3.3.conv3.norm.running_mean           of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_var               loaded from res3.3.conv3.norm.running_var            of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.weight                    loaded from res3.3.conv3.norm.weight                 of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.weight                         loaded from res3.3.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.bias                      loaded from res4.0.conv1.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.num_batches_tracked       loaded from res4.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_mean              loaded from res4.0.conv1.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_var               loaded from res4.0.conv1.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.weight                    loaded from res4.0.conv1.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.weight                         loaded from res4.0.conv1.weight                      of shape (256, 512, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.bias                      loaded from res4.0.conv2.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.num_batches_tracked       loaded from res4.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_mean              loaded from res4.0.conv2.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_var               loaded from res4.0.conv2.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.weight                    loaded from res4.0.conv2.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.weight                         loaded from res4.0.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.bias                      loaded from res4.0.conv3.norm.bias                   of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.num_batches_tracked       loaded from res4.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_mean              loaded from res4.0.conv3.norm.running_mean           of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_var               loaded from res4.0.conv3.norm.running_var            of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.weight                    loaded from res4.0.conv3.norm.weight                 of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.weight                         loaded from res4.0.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.bias                   loaded from res4.0.shortcut.norm.bias                of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.num_batches_tracked    loaded from res4.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_mean           loaded from res4.0.shortcut.norm.running_mean        of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_var            loaded from res4.0.shortcut.norm.running_var         of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.weight                 loaded from res4.0.shortcut.norm.weight              of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.weight                      loaded from res4.0.shortcut.weight                   of shape (1024, 512, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.bias                      loaded from res4.1.conv1.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.num_batches_tracked       loaded from res4.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_mean              loaded from res4.1.conv1.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_var               loaded from res4.1.conv1.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.weight                    loaded from res4.1.conv1.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.weight                         loaded from res4.1.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.bias                      loaded from res4.1.conv2.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.num_batches_tracked       loaded from res4.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_mean              loaded from res4.1.conv2.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_var               loaded from res4.1.conv2.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.weight                    loaded from res4.1.conv2.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.weight                         loaded from res4.1.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.bias                      loaded from res4.1.conv3.norm.bias                   of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.num_batches_tracked       loaded from res4.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_mean              loaded from res4.1.conv3.norm.running_mean           of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_var               loaded from res4.1.conv3.norm.running_var            of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.weight                    loaded from res4.1.conv3.norm.weight                 of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.weight                         loaded from res4.1.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.bias                      loaded from res4.2.conv1.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.num_batches_tracked       loaded from res4.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_mean              loaded from res4.2.conv1.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_var               loaded from res4.2.conv1.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.weight                    loaded from res4.2.conv1.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.weight                         loaded from res4.2.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.bias                      loaded from res4.2.conv2.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.num_batches_tracked       loaded from res4.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_mean              loaded from res4.2.conv2.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_var               loaded from res4.2.conv2.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.weight                    loaded from res4.2.conv2.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.weight                         loaded from res4.2.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.bias                      loaded from res4.2.conv3.norm.bias                   of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.num_batches_tracked       loaded from res4.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_mean              loaded from res4.2.conv3.norm.running_mean           of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_var               loaded from res4.2.conv3.norm.running_var            of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.weight                    loaded from res4.2.conv3.norm.weight                 of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.weight                         loaded from res4.2.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.bias                      loaded from res4.3.conv1.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.num_batches_tracked       loaded from res4.3.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_mean              loaded from res4.3.conv1.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_var               loaded from res4.3.conv1.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.weight                    loaded from res4.3.conv1.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.weight                         loaded from res4.3.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.bias                      loaded from res4.3.conv2.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.num_batches_tracked       loaded from res4.3.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_mean              loaded from res4.3.conv2.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_var               loaded from res4.3.conv2.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.weight                    loaded from res4.3.conv2.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.weight                         loaded from res4.3.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.bias                      loaded from res4.3.conv3.norm.bias                   of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.num_batches_tracked       loaded from res4.3.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_mean              loaded from res4.3.conv3.norm.running_mean           of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_var               loaded from res4.3.conv3.norm.running_var            of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.weight                    loaded from res4.3.conv3.norm.weight                 of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.weight                         loaded from res4.3.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.bias                      loaded from res4.4.conv1.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.num_batches_tracked       loaded from res4.4.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_mean              loaded from res4.4.conv1.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_var               loaded from res4.4.conv1.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.weight                    loaded from res4.4.conv1.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.weight                         loaded from res4.4.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.bias                      loaded from res4.4.conv2.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.num_batches_tracked       loaded from res4.4.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_mean              loaded from res4.4.conv2.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_var               loaded from res4.4.conv2.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.weight                    loaded from res4.4.conv2.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.weight                         loaded from res4.4.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.bias                      loaded from res4.4.conv3.norm.bias                   of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.num_batches_tracked       loaded from res4.4.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_mean              loaded from res4.4.conv3.norm.running_mean           of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_var               loaded from res4.4.conv3.norm.running_var            of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.weight                    loaded from res4.4.conv3.norm.weight                 of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.weight                         loaded from res4.4.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.bias                      loaded from res4.5.conv1.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.num_batches_tracked       loaded from res4.5.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_mean              loaded from res4.5.conv1.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_var               loaded from res4.5.conv1.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.weight                    loaded from res4.5.conv1.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.weight                         loaded from res4.5.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.bias                      loaded from res4.5.conv2.norm.bias                   of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.num_batches_tracked       loaded from res4.5.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_mean              loaded from res4.5.conv2.norm.running_mean           of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_var               loaded from res4.5.conv2.norm.running_var            of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.weight                    loaded from res4.5.conv2.norm.weight                 of shape (256,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.weight                         loaded from res4.5.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.bias                      loaded from res4.5.conv3.norm.bias                   of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.num_batches_tracked       loaded from res4.5.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_mean              loaded from res4.5.conv3.norm.running_mean           of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_var               loaded from res4.5.conv3.norm.running_var            of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.weight                    loaded from res4.5.conv3.norm.weight                 of shape (1024,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.weight                         loaded from res4.5.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.bias                        loaded from stem.conv1.norm.bias                     of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.num_batches_tracked         loaded from stem.conv1.norm.num_batches_tracked      of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_mean                loaded from stem.conv1.norm.running_mean             of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_var                 loaded from stem.conv1.norm.running_var              of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.weight                      loaded from stem.conv1.norm.weight                   of shape (64,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.weight                           loaded from stem.conv1.weight                        of shape (64, 3, 7, 7)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.bias                     loaded from res5.0.conv1.norm.bias                   of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.num_batches_tracked      loaded from res5.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_mean             loaded from res5.0.conv1.norm.running_mean           of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_var              loaded from res5.0.conv1.norm.running_var            of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.weight                   loaded from res5.0.conv1.norm.weight                 of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.weight                        loaded from res5.0.conv1.weight                      of shape (512, 1024, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.bias                     loaded from res5.0.conv2.norm.bias                   of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.num_batches_tracked      loaded from res5.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_mean             loaded from res5.0.conv2.norm.running_mean           of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_var              loaded from res5.0.conv2.norm.running_var            of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.weight                   loaded from res5.0.conv2.norm.weight                 of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.weight                        loaded from res5.0.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.bias                     loaded from res5.0.conv3.norm.bias                   of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.num_batches_tracked      loaded from res5.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_mean             loaded from res5.0.conv3.norm.running_mean           of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_var              loaded from res5.0.conv3.norm.running_var            of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.weight                   loaded from res5.0.conv3.norm.weight                 of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.weight                        loaded from res5.0.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.bias                  loaded from res5.0.shortcut.norm.bias                of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.num_batches_tracked   loaded from res5.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_mean          loaded from res5.0.shortcut.norm.running_mean        of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_var           loaded from res5.0.shortcut.norm.running_var         of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.weight                loaded from res5.0.shortcut.norm.weight              of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.weight                     loaded from res5.0.shortcut.weight                   of shape (2048, 1024, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.bias                     loaded from res5.1.conv1.norm.bias                   of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.num_batches_tracked      loaded from res5.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_mean             loaded from res5.1.conv1.norm.running_mean           of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_var              loaded from res5.1.conv1.norm.running_var            of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.weight                   loaded from res5.1.conv1.norm.weight                 of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.weight                        loaded from res5.1.conv1.weight                      of shape (512, 2048, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.bias                     loaded from res5.1.conv2.norm.bias                   of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.num_batches_tracked      loaded from res5.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_mean             loaded from res5.1.conv2.norm.running_mean           of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_var              loaded from res5.1.conv2.norm.running_var            of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.weight                   loaded from res5.1.conv2.norm.weight                 of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.weight                        loaded from res5.1.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.bias                     loaded from res5.1.conv3.norm.bias                   of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.num_batches_tracked      loaded from res5.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_mean             loaded from res5.1.conv3.norm.running_mean           of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_var              loaded from res5.1.conv3.norm.running_var            of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.weight                   loaded from res5.1.conv3.norm.weight                 of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.weight                        loaded from res5.1.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.bias                     loaded from res5.2.conv1.norm.bias                   of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.num_batches_tracked      loaded from res5.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_mean             loaded from res5.2.conv1.norm.running_mean           of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_var              loaded from res5.2.conv1.norm.running_var            of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.weight                   loaded from res5.2.conv1.norm.weight                 of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.weight                        loaded from res5.2.conv1.weight                      of shape (512, 2048, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.bias                     loaded from res5.2.conv2.norm.bias                   of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.num_batches_tracked      loaded from res5.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_mean             loaded from res5.2.conv2.norm.running_mean           of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_var              loaded from res5.2.conv2.norm.running_var            of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.weight                   loaded from res5.2.conv2.norm.weight                 of shape (512,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.weight                        loaded from res5.2.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.bias                     loaded from res5.2.conv3.norm.bias                   of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.num_batches_tracked      loaded from res5.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_mean             loaded from res5.2.conv3.norm.running_mean           of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_var              loaded from res5.2.conv3.norm.running_var            of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.weight                   loaded from res5.2.conv3.norm.weight                 of shape (2048,)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.weight                        loaded from res5.2.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.anchor_generator.cell_anchors.0[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mroi_heads.res5.norm.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[01/24 12:25:12] detectron2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.0.{bias, weight}[0m
  [35mstem.fc.2.{bias, weight}[0m
[01/24 12:25:35] detectron2 INFO: Rank of current process: 1. World size: 2
[01/24 12:25:35] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  --------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/24 12:25:35] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=True, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/24 12:25:35] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/24 12:25:35] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/24 12:25:35] detectron2.utils.env INFO: Using a generated random seed 35770763
[01/24 12:25:36] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/24 12:25:36] fvcore.common.checkpoint INFO: Loading checkpoint from ./output.pkl
[01/24 12:25:36] fvcore.common.checkpoint INFO: Reading a file from 'MOCO'
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.bias                      loaded from res2.0.conv1.norm.bias                   of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.num_batches_tracked       loaded from res2.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_mean              loaded from res2.0.conv1.norm.running_mean           of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_var               loaded from res2.0.conv1.norm.running_var            of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.weight                    loaded from res2.0.conv1.norm.weight                 of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.weight                         loaded from res2.0.conv1.weight                      of shape (64, 64, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.bias                      loaded from res2.0.conv2.norm.bias                   of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.num_batches_tracked       loaded from res2.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_mean              loaded from res2.0.conv2.norm.running_mean           of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_var               loaded from res2.0.conv2.norm.running_var            of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.weight                    loaded from res2.0.conv2.norm.weight                 of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.weight                         loaded from res2.0.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.bias                      loaded from res2.0.conv3.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.num_batches_tracked       loaded from res2.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_mean              loaded from res2.0.conv3.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_var               loaded from res2.0.conv3.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.weight                    loaded from res2.0.conv3.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.weight                         loaded from res2.0.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.bias                   loaded from res2.0.shortcut.norm.bias                of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.num_batches_tracked    loaded from res2.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_mean           loaded from res2.0.shortcut.norm.running_mean        of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_var            loaded from res2.0.shortcut.norm.running_var         of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.weight                 loaded from res2.0.shortcut.norm.weight              of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.weight                      loaded from res2.0.shortcut.weight                   of shape (256, 64, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.bias                      loaded from res2.1.conv1.norm.bias                   of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.num_batches_tracked       loaded from res2.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_mean              loaded from res2.1.conv1.norm.running_mean           of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_var               loaded from res2.1.conv1.norm.running_var            of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.weight                    loaded from res2.1.conv1.norm.weight                 of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.weight                         loaded from res2.1.conv1.weight                      of shape (64, 256, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.bias                      loaded from res2.1.conv2.norm.bias                   of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.num_batches_tracked       loaded from res2.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_mean              loaded from res2.1.conv2.norm.running_mean           of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_var               loaded from res2.1.conv2.norm.running_var            of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.weight                    loaded from res2.1.conv2.norm.weight                 of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.weight                         loaded from res2.1.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.bias                      loaded from res2.1.conv3.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.num_batches_tracked       loaded from res2.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_mean              loaded from res2.1.conv3.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_var               loaded from res2.1.conv3.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.weight                    loaded from res2.1.conv3.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.weight                         loaded from res2.1.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.bias                      loaded from res2.2.conv1.norm.bias                   of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.num_batches_tracked       loaded from res2.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_mean              loaded from res2.2.conv1.norm.running_mean           of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_var               loaded from res2.2.conv1.norm.running_var            of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.weight                    loaded from res2.2.conv1.norm.weight                 of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.weight                         loaded from res2.2.conv1.weight                      of shape (64, 256, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.bias                      loaded from res2.2.conv2.norm.bias                   of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.num_batches_tracked       loaded from res2.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_mean              loaded from res2.2.conv2.norm.running_mean           of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_var               loaded from res2.2.conv2.norm.running_var            of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.weight                    loaded from res2.2.conv2.norm.weight                 of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.weight                         loaded from res2.2.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.bias                      loaded from res2.2.conv3.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.num_batches_tracked       loaded from res2.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_mean              loaded from res2.2.conv3.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_var               loaded from res2.2.conv3.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.weight                    loaded from res2.2.conv3.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.weight                         loaded from res2.2.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.bias                      loaded from res3.0.conv1.norm.bias                   of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.num_batches_tracked       loaded from res3.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_mean              loaded from res3.0.conv1.norm.running_mean           of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_var               loaded from res3.0.conv1.norm.running_var            of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.weight                    loaded from res3.0.conv1.norm.weight                 of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.weight                         loaded from res3.0.conv1.weight                      of shape (128, 256, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.bias                      loaded from res3.0.conv2.norm.bias                   of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.num_batches_tracked       loaded from res3.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_mean              loaded from res3.0.conv2.norm.running_mean           of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_var               loaded from res3.0.conv2.norm.running_var            of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.weight                    loaded from res3.0.conv2.norm.weight                 of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.weight                         loaded from res3.0.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.bias                      loaded from res3.0.conv3.norm.bias                   of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.num_batches_tracked       loaded from res3.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_mean              loaded from res3.0.conv3.norm.running_mean           of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_var               loaded from res3.0.conv3.norm.running_var            of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.weight                    loaded from res3.0.conv3.norm.weight                 of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.weight                         loaded from res3.0.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.bias                   loaded from res3.0.shortcut.norm.bias                of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.num_batches_tracked    loaded from res3.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_mean           loaded from res3.0.shortcut.norm.running_mean        of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_var            loaded from res3.0.shortcut.norm.running_var         of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.weight                 loaded from res3.0.shortcut.norm.weight              of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.weight                      loaded from res3.0.shortcut.weight                   of shape (512, 256, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.bias                      loaded from res3.1.conv1.norm.bias                   of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.num_batches_tracked       loaded from res3.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_mean              loaded from res3.1.conv1.norm.running_mean           of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_var               loaded from res3.1.conv1.norm.running_var            of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.weight                    loaded from res3.1.conv1.norm.weight                 of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.weight                         loaded from res3.1.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.bias                      loaded from res3.1.conv2.norm.bias                   of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.num_batches_tracked       loaded from res3.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_mean              loaded from res3.1.conv2.norm.running_mean           of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_var               loaded from res3.1.conv2.norm.running_var            of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.weight                    loaded from res3.1.conv2.norm.weight                 of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.weight                         loaded from res3.1.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.bias                      loaded from res3.1.conv3.norm.bias                   of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.num_batches_tracked       loaded from res3.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_mean              loaded from res3.1.conv3.norm.running_mean           of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_var               loaded from res3.1.conv3.norm.running_var            of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.weight                    loaded from res3.1.conv3.norm.weight                 of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.weight                         loaded from res3.1.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.bias                      loaded from res3.2.conv1.norm.bias                   of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.num_batches_tracked       loaded from res3.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_mean              loaded from res3.2.conv1.norm.running_mean           of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_var               loaded from res3.2.conv1.norm.running_var            of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.weight                    loaded from res3.2.conv1.norm.weight                 of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.weight                         loaded from res3.2.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.bias                      loaded from res3.2.conv2.norm.bias                   of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.num_batches_tracked       loaded from res3.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_mean              loaded from res3.2.conv2.norm.running_mean           of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_var               loaded from res3.2.conv2.norm.running_var            of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.weight                    loaded from res3.2.conv2.norm.weight                 of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.weight                         loaded from res3.2.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.bias                      loaded from res3.2.conv3.norm.bias                   of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.num_batches_tracked       loaded from res3.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_mean              loaded from res3.2.conv3.norm.running_mean           of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_var               loaded from res3.2.conv3.norm.running_var            of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.weight                    loaded from res3.2.conv3.norm.weight                 of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.weight                         loaded from res3.2.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.bias                      loaded from res3.3.conv1.norm.bias                   of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.num_batches_tracked       loaded from res3.3.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_mean              loaded from res3.3.conv1.norm.running_mean           of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_var               loaded from res3.3.conv1.norm.running_var            of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.weight                    loaded from res3.3.conv1.norm.weight                 of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.weight                         loaded from res3.3.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.bias                      loaded from res3.3.conv2.norm.bias                   of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.num_batches_tracked       loaded from res3.3.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_mean              loaded from res3.3.conv2.norm.running_mean           of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_var               loaded from res3.3.conv2.norm.running_var            of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.weight                    loaded from res3.3.conv2.norm.weight                 of shape (128,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.weight                         loaded from res3.3.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.bias                      loaded from res3.3.conv3.norm.bias                   of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.num_batches_tracked       loaded from res3.3.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_mean              loaded from res3.3.conv3.norm.running_mean           of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_var               loaded from res3.3.conv3.norm.running_var            of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.weight                    loaded from res3.3.conv3.norm.weight                 of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.weight                         loaded from res3.3.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.bias                      loaded from res4.0.conv1.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.num_batches_tracked       loaded from res4.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_mean              loaded from res4.0.conv1.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_var               loaded from res4.0.conv1.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.weight                    loaded from res4.0.conv1.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.weight                         loaded from res4.0.conv1.weight                      of shape (256, 512, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.bias                      loaded from res4.0.conv2.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.num_batches_tracked       loaded from res4.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_mean              loaded from res4.0.conv2.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_var               loaded from res4.0.conv2.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.weight                    loaded from res4.0.conv2.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.weight                         loaded from res4.0.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.bias                      loaded from res4.0.conv3.norm.bias                   of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.num_batches_tracked       loaded from res4.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_mean              loaded from res4.0.conv3.norm.running_mean           of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_var               loaded from res4.0.conv3.norm.running_var            of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.weight                    loaded from res4.0.conv3.norm.weight                 of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.weight                         loaded from res4.0.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.bias                   loaded from res4.0.shortcut.norm.bias                of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.num_batches_tracked    loaded from res4.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_mean           loaded from res4.0.shortcut.norm.running_mean        of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_var            loaded from res4.0.shortcut.norm.running_var         of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.weight                 loaded from res4.0.shortcut.norm.weight              of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.weight                      loaded from res4.0.shortcut.weight                   of shape (1024, 512, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.bias                      loaded from res4.1.conv1.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.num_batches_tracked       loaded from res4.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_mean              loaded from res4.1.conv1.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_var               loaded from res4.1.conv1.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.weight                    loaded from res4.1.conv1.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.weight                         loaded from res4.1.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.bias                      loaded from res4.1.conv2.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.num_batches_tracked       loaded from res4.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_mean              loaded from res4.1.conv2.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_var               loaded from res4.1.conv2.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.weight                    loaded from res4.1.conv2.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.weight                         loaded from res4.1.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.bias                      loaded from res4.1.conv3.norm.bias                   of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.num_batches_tracked       loaded from res4.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_mean              loaded from res4.1.conv3.norm.running_mean           of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_var               loaded from res4.1.conv3.norm.running_var            of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.weight                    loaded from res4.1.conv3.norm.weight                 of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.weight                         loaded from res4.1.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.bias                      loaded from res4.2.conv1.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.num_batches_tracked       loaded from res4.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_mean              loaded from res4.2.conv1.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_var               loaded from res4.2.conv1.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.weight                    loaded from res4.2.conv1.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.weight                         loaded from res4.2.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.bias                      loaded from res4.2.conv2.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.num_batches_tracked       loaded from res4.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_mean              loaded from res4.2.conv2.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_var               loaded from res4.2.conv2.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.weight                    loaded from res4.2.conv2.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.weight                         loaded from res4.2.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.bias                      loaded from res4.2.conv3.norm.bias                   of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.num_batches_tracked       loaded from res4.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_mean              loaded from res4.2.conv3.norm.running_mean           of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_var               loaded from res4.2.conv3.norm.running_var            of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.weight                    loaded from res4.2.conv3.norm.weight                 of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.weight                         loaded from res4.2.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.bias                      loaded from res4.3.conv1.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.num_batches_tracked       loaded from res4.3.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_mean              loaded from res4.3.conv1.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_var               loaded from res4.3.conv1.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.weight                    loaded from res4.3.conv1.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.weight                         loaded from res4.3.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.bias                      loaded from res4.3.conv2.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.num_batches_tracked       loaded from res4.3.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_mean              loaded from res4.3.conv2.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_var               loaded from res4.3.conv2.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.weight                    loaded from res4.3.conv2.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.weight                         loaded from res4.3.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.bias                      loaded from res4.3.conv3.norm.bias                   of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.num_batches_tracked       loaded from res4.3.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_mean              loaded from res4.3.conv3.norm.running_mean           of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_var               loaded from res4.3.conv3.norm.running_var            of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.weight                    loaded from res4.3.conv3.norm.weight                 of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.weight                         loaded from res4.3.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.bias                      loaded from res4.4.conv1.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.num_batches_tracked       loaded from res4.4.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_mean              loaded from res4.4.conv1.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_var               loaded from res4.4.conv1.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.weight                    loaded from res4.4.conv1.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.weight                         loaded from res4.4.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.bias                      loaded from res4.4.conv2.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.num_batches_tracked       loaded from res4.4.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_mean              loaded from res4.4.conv2.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_var               loaded from res4.4.conv2.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.weight                    loaded from res4.4.conv2.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.weight                         loaded from res4.4.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.bias                      loaded from res4.4.conv3.norm.bias                   of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.num_batches_tracked       loaded from res4.4.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_mean              loaded from res4.4.conv3.norm.running_mean           of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_var               loaded from res4.4.conv3.norm.running_var            of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.weight                    loaded from res4.4.conv3.norm.weight                 of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.weight                         loaded from res4.4.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.bias                      loaded from res4.5.conv1.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.num_batches_tracked       loaded from res4.5.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_mean              loaded from res4.5.conv1.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_var               loaded from res4.5.conv1.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.weight                    loaded from res4.5.conv1.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.weight                         loaded from res4.5.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.bias                      loaded from res4.5.conv2.norm.bias                   of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.num_batches_tracked       loaded from res4.5.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_mean              loaded from res4.5.conv2.norm.running_mean           of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_var               loaded from res4.5.conv2.norm.running_var            of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.weight                    loaded from res4.5.conv2.norm.weight                 of shape (256,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.weight                         loaded from res4.5.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.bias                      loaded from res4.5.conv3.norm.bias                   of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.num_batches_tracked       loaded from res4.5.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_mean              loaded from res4.5.conv3.norm.running_mean           of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_var               loaded from res4.5.conv3.norm.running_var            of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.weight                    loaded from res4.5.conv3.norm.weight                 of shape (1024,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.weight                         loaded from res4.5.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.bias                        loaded from stem.conv1.norm.bias                     of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.num_batches_tracked         loaded from stem.conv1.norm.num_batches_tracked      of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_mean                loaded from stem.conv1.norm.running_mean             of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_var                 loaded from stem.conv1.norm.running_var              of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.weight                      loaded from stem.conv1.norm.weight                   of shape (64,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.weight                           loaded from stem.conv1.weight                        of shape (64, 3, 7, 7)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.bias                     loaded from res5.0.conv1.norm.bias                   of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.num_batches_tracked      loaded from res5.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_mean             loaded from res5.0.conv1.norm.running_mean           of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_var              loaded from res5.0.conv1.norm.running_var            of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.weight                   loaded from res5.0.conv1.norm.weight                 of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.weight                        loaded from res5.0.conv1.weight                      of shape (512, 1024, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.bias                     loaded from res5.0.conv2.norm.bias                   of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.num_batches_tracked      loaded from res5.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_mean             loaded from res5.0.conv2.norm.running_mean           of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_var              loaded from res5.0.conv2.norm.running_var            of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.weight                   loaded from res5.0.conv2.norm.weight                 of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.weight                        loaded from res5.0.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.bias                     loaded from res5.0.conv3.norm.bias                   of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.num_batches_tracked      loaded from res5.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_mean             loaded from res5.0.conv3.norm.running_mean           of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_var              loaded from res5.0.conv3.norm.running_var            of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.weight                   loaded from res5.0.conv3.norm.weight                 of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.weight                        loaded from res5.0.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.bias                  loaded from res5.0.shortcut.norm.bias                of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.num_batches_tracked   loaded from res5.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_mean          loaded from res5.0.shortcut.norm.running_mean        of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_var           loaded from res5.0.shortcut.norm.running_var         of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.weight                loaded from res5.0.shortcut.norm.weight              of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.weight                     loaded from res5.0.shortcut.weight                   of shape (2048, 1024, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.bias                     loaded from res5.1.conv1.norm.bias                   of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.num_batches_tracked      loaded from res5.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_mean             loaded from res5.1.conv1.norm.running_mean           of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_var              loaded from res5.1.conv1.norm.running_var            of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.weight                   loaded from res5.1.conv1.norm.weight                 of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.weight                        loaded from res5.1.conv1.weight                      of shape (512, 2048, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.bias                     loaded from res5.1.conv2.norm.bias                   of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.num_batches_tracked      loaded from res5.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_mean             loaded from res5.1.conv2.norm.running_mean           of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_var              loaded from res5.1.conv2.norm.running_var            of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.weight                   loaded from res5.1.conv2.norm.weight                 of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.weight                        loaded from res5.1.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.bias                     loaded from res5.1.conv3.norm.bias                   of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.num_batches_tracked      loaded from res5.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_mean             loaded from res5.1.conv3.norm.running_mean           of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_var              loaded from res5.1.conv3.norm.running_var            of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.weight                   loaded from res5.1.conv3.norm.weight                 of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.weight                        loaded from res5.1.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.bias                     loaded from res5.2.conv1.norm.bias                   of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.num_batches_tracked      loaded from res5.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_mean             loaded from res5.2.conv1.norm.running_mean           of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_var              loaded from res5.2.conv1.norm.running_var            of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.weight                   loaded from res5.2.conv1.norm.weight                 of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.weight                        loaded from res5.2.conv1.weight                      of shape (512, 2048, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.bias                     loaded from res5.2.conv2.norm.bias                   of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.num_batches_tracked      loaded from res5.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_mean             loaded from res5.2.conv2.norm.running_mean           of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_var              loaded from res5.2.conv2.norm.running_var            of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.weight                   loaded from res5.2.conv2.norm.weight                 of shape (512,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.weight                        loaded from res5.2.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.bias                     loaded from res5.2.conv3.norm.bias                   of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.num_batches_tracked      loaded from res5.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_mean             loaded from res5.2.conv3.norm.running_mean           of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_var              loaded from res5.2.conv3.norm.running_var            of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.weight                   loaded from res5.2.conv3.norm.weight                 of shape (2048,)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.weight                        loaded from res5.2.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.anchor_generator.cell_anchors.0[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mroi_heads.res5.norm.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[01/24 12:25:36] detectron2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.0.{bias, weight}[0m
  [35mstem.fc.2.{bias, weight}[0m
[01/24 12:25:37] detectron2.data.build INFO: Distribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    car     | 3390         | pedestrian | 455          |  cyclist   | 185          |
|            |              |            |              |            |              |
|   total    | 4030         |            |              |            |              |[0m
[01/24 12:25:37] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[01/24 12:25:37] detectron2.data.common INFO: Serializing 749 elements to byte tensors and concatenating them all ...
[01/24 12:25:37] detectron2.data.common INFO: Serialized dataset takes 0.43 MiB
[01/24 12:25:37] detectron2.evaluation.evaluator INFO: Start inference on 374 images
[01/24 12:25:49] detectron2.evaluation.evaluator INFO: Inference done 11/374. 0.2346 s / img. ETA=0:01:25
[01/24 12:25:54] detectron2.evaluation.evaluator INFO: Inference done 33/374. 0.2346 s / img. ETA=0:01:20
[01/24 12:25:59] detectron2.evaluation.evaluator INFO: Inference done 55/374. 0.2350 s / img. ETA=0:01:15
[01/24 12:26:04] detectron2.evaluation.evaluator INFO: Inference done 76/374. 0.2354 s / img. ETA=0:01:10
[01/24 12:26:09] detectron2.evaluation.evaluator INFO: Inference done 97/374. 0.2357 s / img. ETA=0:01:05
[01/24 12:26:14] detectron2.evaluation.evaluator INFO: Inference done 118/374. 0.2359 s / img. ETA=0:01:01
[01/24 12:26:19] detectron2.evaluation.evaluator INFO: Inference done 139/374. 0.2360 s / img. ETA=0:00:56
[01/24 12:26:24] detectron2.evaluation.evaluator INFO: Inference done 160/374. 0.2362 s / img. ETA=0:00:51
[01/24 12:26:29] detectron2.evaluation.evaluator INFO: Inference done 181/374. 0.2364 s / img. ETA=0:00:46
[01/24 12:26:34] detectron2.evaluation.evaluator INFO: Inference done 202/374. 0.2367 s / img. ETA=0:00:41
[01/24 12:26:40] detectron2.evaluation.evaluator INFO: Inference done 223/374. 0.2369 s / img. ETA=0:00:36
[01/24 12:26:45] detectron2.evaluation.evaluator INFO: Inference done 244/374. 0.2371 s / img. ETA=0:00:31
[01/24 12:26:50] detectron2.evaluation.evaluator INFO: Inference done 265/374. 0.2372 s / img. ETA=0:00:26
[01/24 12:26:55] detectron2.evaluation.evaluator INFO: Inference done 286/374. 0.2375 s / img. ETA=0:00:21
[01/24 12:27:00] detectron2.evaluation.evaluator INFO: Inference done 307/374. 0.2377 s / img. ETA=0:00:16
[01/24 12:27:05] detectron2.evaluation.evaluator INFO: Inference done 328/374. 0.2378 s / img. ETA=0:00:11
[01/24 12:27:10] detectron2.evaluation.evaluator INFO: Inference done 349/374. 0.2380 s / img. ETA=0:00:06
[01/24 12:27:15] detectron2.evaluation.evaluator INFO: Inference done 370/374. 0.2381 s / img. ETA=0:00:00
[01/24 12:27:17] detectron2.evaluation.evaluator INFO: Total inference time: 0:01:29.481331 (0.242497 s / img per device, on 2 devices)
[01/24 12:27:17] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:27 (0.238154 s / img per device, on 2 devices)
[01/24 14:15:35] detectron2 INFO: Rank of current process: 1. World size: 2
[01/24 14:15:36] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  --------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/24 14:15:36] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=True, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output.pkl'], resume=False)
[01/24 14:15:36] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/24 14:15:36] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/24 14:15:36] detectron2.utils.env INFO: Using a generated random seed 36418449
[01/24 14:15:36] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/24 14:15:36] fvcore.common.checkpoint INFO: Loading checkpoint from ./output.pkl
[01/24 14:15:37] fvcore.common.checkpoint INFO: Reading a file from 'MOCO'
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.bias                      loaded from res2.0.conv1.norm.bias                   of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.num_batches_tracked       loaded from res2.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_mean              loaded from res2.0.conv1.norm.running_mean           of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.running_var               loaded from res2.0.conv1.norm.running_var            of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.norm.weight                    loaded from res2.0.conv1.norm.weight                 of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv1.weight                         loaded from res2.0.conv1.weight                      of shape (64, 64, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.bias                      loaded from res2.0.conv2.norm.bias                   of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.num_batches_tracked       loaded from res2.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_mean              loaded from res2.0.conv2.norm.running_mean           of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.running_var               loaded from res2.0.conv2.norm.running_var            of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.norm.weight                    loaded from res2.0.conv2.norm.weight                 of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv2.weight                         loaded from res2.0.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.bias                      loaded from res2.0.conv3.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.num_batches_tracked       loaded from res2.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_mean              loaded from res2.0.conv3.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.running_var               loaded from res2.0.conv3.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.norm.weight                    loaded from res2.0.conv3.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.conv3.weight                         loaded from res2.0.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.bias                   loaded from res2.0.shortcut.norm.bias                of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.num_batches_tracked    loaded from res2.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_mean           loaded from res2.0.shortcut.norm.running_mean        of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.running_var            loaded from res2.0.shortcut.norm.running_var         of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.norm.weight                 loaded from res2.0.shortcut.norm.weight              of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.0.shortcut.weight                      loaded from res2.0.shortcut.weight                   of shape (256, 64, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.bias                      loaded from res2.1.conv1.norm.bias                   of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.num_batches_tracked       loaded from res2.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_mean              loaded from res2.1.conv1.norm.running_mean           of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.running_var               loaded from res2.1.conv1.norm.running_var            of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.norm.weight                    loaded from res2.1.conv1.norm.weight                 of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv1.weight                         loaded from res2.1.conv1.weight                      of shape (64, 256, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.bias                      loaded from res2.1.conv2.norm.bias                   of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.num_batches_tracked       loaded from res2.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_mean              loaded from res2.1.conv2.norm.running_mean           of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.running_var               loaded from res2.1.conv2.norm.running_var            of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.norm.weight                    loaded from res2.1.conv2.norm.weight                 of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv2.weight                         loaded from res2.1.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.bias                      loaded from res2.1.conv3.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.num_batches_tracked       loaded from res2.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_mean              loaded from res2.1.conv3.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.running_var               loaded from res2.1.conv3.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.norm.weight                    loaded from res2.1.conv3.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.1.conv3.weight                         loaded from res2.1.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.bias                      loaded from res2.2.conv1.norm.bias                   of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.num_batches_tracked       loaded from res2.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_mean              loaded from res2.2.conv1.norm.running_mean           of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.running_var               loaded from res2.2.conv1.norm.running_var            of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.norm.weight                    loaded from res2.2.conv1.norm.weight                 of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv1.weight                         loaded from res2.2.conv1.weight                      of shape (64, 256, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.bias                      loaded from res2.2.conv2.norm.bias                   of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.num_batches_tracked       loaded from res2.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_mean              loaded from res2.2.conv2.norm.running_mean           of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.running_var               loaded from res2.2.conv2.norm.running_var            of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.norm.weight                    loaded from res2.2.conv2.norm.weight                 of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv2.weight                         loaded from res2.2.conv2.weight                      of shape (64, 64, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.bias                      loaded from res2.2.conv3.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.num_batches_tracked       loaded from res2.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_mean              loaded from res2.2.conv3.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.running_var               loaded from res2.2.conv3.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.norm.weight                    loaded from res2.2.conv3.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res2.2.conv3.weight                         loaded from res2.2.conv3.weight                      of shape (256, 64, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.bias                      loaded from res3.0.conv1.norm.bias                   of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.num_batches_tracked       loaded from res3.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_mean              loaded from res3.0.conv1.norm.running_mean           of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.running_var               loaded from res3.0.conv1.norm.running_var            of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.norm.weight                    loaded from res3.0.conv1.norm.weight                 of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv1.weight                         loaded from res3.0.conv1.weight                      of shape (128, 256, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.bias                      loaded from res3.0.conv2.norm.bias                   of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.num_batches_tracked       loaded from res3.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_mean              loaded from res3.0.conv2.norm.running_mean           of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.running_var               loaded from res3.0.conv2.norm.running_var            of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.norm.weight                    loaded from res3.0.conv2.norm.weight                 of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv2.weight                         loaded from res3.0.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.bias                      loaded from res3.0.conv3.norm.bias                   of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.num_batches_tracked       loaded from res3.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_mean              loaded from res3.0.conv3.norm.running_mean           of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.running_var               loaded from res3.0.conv3.norm.running_var            of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.norm.weight                    loaded from res3.0.conv3.norm.weight                 of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.conv3.weight                         loaded from res3.0.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.bias                   loaded from res3.0.shortcut.norm.bias                of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.num_batches_tracked    loaded from res3.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_mean           loaded from res3.0.shortcut.norm.running_mean        of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.running_var            loaded from res3.0.shortcut.norm.running_var         of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.norm.weight                 loaded from res3.0.shortcut.norm.weight              of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.0.shortcut.weight                      loaded from res3.0.shortcut.weight                   of shape (512, 256, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.bias                      loaded from res3.1.conv1.norm.bias                   of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.num_batches_tracked       loaded from res3.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_mean              loaded from res3.1.conv1.norm.running_mean           of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.running_var               loaded from res3.1.conv1.norm.running_var            of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.norm.weight                    loaded from res3.1.conv1.norm.weight                 of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv1.weight                         loaded from res3.1.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.bias                      loaded from res3.1.conv2.norm.bias                   of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.num_batches_tracked       loaded from res3.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_mean              loaded from res3.1.conv2.norm.running_mean           of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.running_var               loaded from res3.1.conv2.norm.running_var            of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.norm.weight                    loaded from res3.1.conv2.norm.weight                 of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv2.weight                         loaded from res3.1.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.bias                      loaded from res3.1.conv3.norm.bias                   of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.num_batches_tracked       loaded from res3.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_mean              loaded from res3.1.conv3.norm.running_mean           of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.running_var               loaded from res3.1.conv3.norm.running_var            of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.norm.weight                    loaded from res3.1.conv3.norm.weight                 of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.1.conv3.weight                         loaded from res3.1.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.bias                      loaded from res3.2.conv1.norm.bias                   of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.num_batches_tracked       loaded from res3.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_mean              loaded from res3.2.conv1.norm.running_mean           of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.running_var               loaded from res3.2.conv1.norm.running_var            of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.norm.weight                    loaded from res3.2.conv1.norm.weight                 of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv1.weight                         loaded from res3.2.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.bias                      loaded from res3.2.conv2.norm.bias                   of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.num_batches_tracked       loaded from res3.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_mean              loaded from res3.2.conv2.norm.running_mean           of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.running_var               loaded from res3.2.conv2.norm.running_var            of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.norm.weight                    loaded from res3.2.conv2.norm.weight                 of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv2.weight                         loaded from res3.2.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.bias                      loaded from res3.2.conv3.norm.bias                   of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.num_batches_tracked       loaded from res3.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_mean              loaded from res3.2.conv3.norm.running_mean           of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.running_var               loaded from res3.2.conv3.norm.running_var            of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.norm.weight                    loaded from res3.2.conv3.norm.weight                 of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.2.conv3.weight                         loaded from res3.2.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.bias                      loaded from res3.3.conv1.norm.bias                   of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.num_batches_tracked       loaded from res3.3.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_mean              loaded from res3.3.conv1.norm.running_mean           of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.running_var               loaded from res3.3.conv1.norm.running_var            of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.norm.weight                    loaded from res3.3.conv1.norm.weight                 of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv1.weight                         loaded from res3.3.conv1.weight                      of shape (128, 512, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.bias                      loaded from res3.3.conv2.norm.bias                   of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.num_batches_tracked       loaded from res3.3.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_mean              loaded from res3.3.conv2.norm.running_mean           of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.running_var               loaded from res3.3.conv2.norm.running_var            of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.norm.weight                    loaded from res3.3.conv2.norm.weight                 of shape (128,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv2.weight                         loaded from res3.3.conv2.weight                      of shape (128, 128, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.bias                      loaded from res3.3.conv3.norm.bias                   of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.num_batches_tracked       loaded from res3.3.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_mean              loaded from res3.3.conv3.norm.running_mean           of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.running_var               loaded from res3.3.conv3.norm.running_var            of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.norm.weight                    loaded from res3.3.conv3.norm.weight                 of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res3.3.conv3.weight                         loaded from res3.3.conv3.weight                      of shape (512, 128, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.bias                      loaded from res4.0.conv1.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.num_batches_tracked       loaded from res4.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_mean              loaded from res4.0.conv1.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.running_var               loaded from res4.0.conv1.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.norm.weight                    loaded from res4.0.conv1.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv1.weight                         loaded from res4.0.conv1.weight                      of shape (256, 512, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.bias                      loaded from res4.0.conv2.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.num_batches_tracked       loaded from res4.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_mean              loaded from res4.0.conv2.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.running_var               loaded from res4.0.conv2.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.norm.weight                    loaded from res4.0.conv2.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv2.weight                         loaded from res4.0.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.bias                      loaded from res4.0.conv3.norm.bias                   of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.num_batches_tracked       loaded from res4.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_mean              loaded from res4.0.conv3.norm.running_mean           of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.running_var               loaded from res4.0.conv3.norm.running_var            of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.norm.weight                    loaded from res4.0.conv3.norm.weight                 of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.conv3.weight                         loaded from res4.0.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.bias                   loaded from res4.0.shortcut.norm.bias                of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.num_batches_tracked    loaded from res4.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_mean           loaded from res4.0.shortcut.norm.running_mean        of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.running_var            loaded from res4.0.shortcut.norm.running_var         of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.norm.weight                 loaded from res4.0.shortcut.norm.weight              of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.0.shortcut.weight                      loaded from res4.0.shortcut.weight                   of shape (1024, 512, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.bias                      loaded from res4.1.conv1.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.num_batches_tracked       loaded from res4.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_mean              loaded from res4.1.conv1.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.running_var               loaded from res4.1.conv1.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.norm.weight                    loaded from res4.1.conv1.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv1.weight                         loaded from res4.1.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.bias                      loaded from res4.1.conv2.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.num_batches_tracked       loaded from res4.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_mean              loaded from res4.1.conv2.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.running_var               loaded from res4.1.conv2.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.norm.weight                    loaded from res4.1.conv2.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv2.weight                         loaded from res4.1.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.bias                      loaded from res4.1.conv3.norm.bias                   of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.num_batches_tracked       loaded from res4.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_mean              loaded from res4.1.conv3.norm.running_mean           of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.running_var               loaded from res4.1.conv3.norm.running_var            of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.norm.weight                    loaded from res4.1.conv3.norm.weight                 of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.1.conv3.weight                         loaded from res4.1.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.bias                      loaded from res4.2.conv1.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.num_batches_tracked       loaded from res4.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_mean              loaded from res4.2.conv1.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.running_var               loaded from res4.2.conv1.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.norm.weight                    loaded from res4.2.conv1.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv1.weight                         loaded from res4.2.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.bias                      loaded from res4.2.conv2.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.num_batches_tracked       loaded from res4.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_mean              loaded from res4.2.conv2.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.running_var               loaded from res4.2.conv2.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.norm.weight                    loaded from res4.2.conv2.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv2.weight                         loaded from res4.2.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.bias                      loaded from res4.2.conv3.norm.bias                   of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.num_batches_tracked       loaded from res4.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_mean              loaded from res4.2.conv3.norm.running_mean           of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.running_var               loaded from res4.2.conv3.norm.running_var            of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.norm.weight                    loaded from res4.2.conv3.norm.weight                 of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.2.conv3.weight                         loaded from res4.2.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.bias                      loaded from res4.3.conv1.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.num_batches_tracked       loaded from res4.3.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_mean              loaded from res4.3.conv1.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.running_var               loaded from res4.3.conv1.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.norm.weight                    loaded from res4.3.conv1.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv1.weight                         loaded from res4.3.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.bias                      loaded from res4.3.conv2.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.num_batches_tracked       loaded from res4.3.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_mean              loaded from res4.3.conv2.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.running_var               loaded from res4.3.conv2.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.norm.weight                    loaded from res4.3.conv2.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv2.weight                         loaded from res4.3.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.bias                      loaded from res4.3.conv3.norm.bias                   of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.num_batches_tracked       loaded from res4.3.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_mean              loaded from res4.3.conv3.norm.running_mean           of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.running_var               loaded from res4.3.conv3.norm.running_var            of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.norm.weight                    loaded from res4.3.conv3.norm.weight                 of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.3.conv3.weight                         loaded from res4.3.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.bias                      loaded from res4.4.conv1.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.num_batches_tracked       loaded from res4.4.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_mean              loaded from res4.4.conv1.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.running_var               loaded from res4.4.conv1.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.norm.weight                    loaded from res4.4.conv1.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv1.weight                         loaded from res4.4.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.bias                      loaded from res4.4.conv2.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.num_batches_tracked       loaded from res4.4.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_mean              loaded from res4.4.conv2.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.running_var               loaded from res4.4.conv2.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.norm.weight                    loaded from res4.4.conv2.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv2.weight                         loaded from res4.4.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.bias                      loaded from res4.4.conv3.norm.bias                   of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.num_batches_tracked       loaded from res4.4.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_mean              loaded from res4.4.conv3.norm.running_mean           of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.running_var               loaded from res4.4.conv3.norm.running_var            of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.norm.weight                    loaded from res4.4.conv3.norm.weight                 of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.4.conv3.weight                         loaded from res4.4.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.bias                      loaded from res4.5.conv1.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.num_batches_tracked       loaded from res4.5.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_mean              loaded from res4.5.conv1.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.running_var               loaded from res4.5.conv1.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.norm.weight                    loaded from res4.5.conv1.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv1.weight                         loaded from res4.5.conv1.weight                      of shape (256, 1024, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.bias                      loaded from res4.5.conv2.norm.bias                   of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.num_batches_tracked       loaded from res4.5.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_mean              loaded from res4.5.conv2.norm.running_mean           of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.running_var               loaded from res4.5.conv2.norm.running_var            of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.norm.weight                    loaded from res4.5.conv2.norm.weight                 of shape (256,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv2.weight                         loaded from res4.5.conv2.weight                      of shape (256, 256, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.bias                      loaded from res4.5.conv3.norm.bias                   of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.num_batches_tracked       loaded from res4.5.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_mean              loaded from res4.5.conv3.norm.running_mean           of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.running_var               loaded from res4.5.conv3.norm.running_var            of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.norm.weight                    loaded from res4.5.conv3.norm.weight                 of shape (1024,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.res4.5.conv3.weight                         loaded from res4.5.conv3.weight                      of shape (1024, 256, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.bias                        loaded from stem.conv1.norm.bias                     of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.num_batches_tracked         loaded from stem.conv1.norm.num_batches_tracked      of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_mean                loaded from stem.conv1.norm.running_mean             of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.running_var                 loaded from stem.conv1.norm.running_var              of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.norm.weight                      loaded from stem.conv1.norm.weight                   of shape (64,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: backbone.stem.conv1.weight                           loaded from stem.conv1.weight                        of shape (64, 3, 7, 7)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.bias                     loaded from res5.0.conv1.norm.bias                   of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.num_batches_tracked      loaded from res5.0.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_mean             loaded from res5.0.conv1.norm.running_mean           of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.running_var              loaded from res5.0.conv1.norm.running_var            of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.norm.weight                   loaded from res5.0.conv1.norm.weight                 of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv1.weight                        loaded from res5.0.conv1.weight                      of shape (512, 1024, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.bias                     loaded from res5.0.conv2.norm.bias                   of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.num_batches_tracked      loaded from res5.0.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_mean             loaded from res5.0.conv2.norm.running_mean           of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.running_var              loaded from res5.0.conv2.norm.running_var            of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.norm.weight                   loaded from res5.0.conv2.norm.weight                 of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv2.weight                        loaded from res5.0.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.bias                     loaded from res5.0.conv3.norm.bias                   of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.num_batches_tracked      loaded from res5.0.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_mean             loaded from res5.0.conv3.norm.running_mean           of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.running_var              loaded from res5.0.conv3.norm.running_var            of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.norm.weight                   loaded from res5.0.conv3.norm.weight                 of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.conv3.weight                        loaded from res5.0.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.bias                  loaded from res5.0.shortcut.norm.bias                of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.num_batches_tracked   loaded from res5.0.shortcut.norm.num_batches_tracked of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_mean          loaded from res5.0.shortcut.norm.running_mean        of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.running_var           loaded from res5.0.shortcut.norm.running_var         of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.norm.weight                loaded from res5.0.shortcut.norm.weight              of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.0.shortcut.weight                     loaded from res5.0.shortcut.weight                   of shape (2048, 1024, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.bias                     loaded from res5.1.conv1.norm.bias                   of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.num_batches_tracked      loaded from res5.1.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_mean             loaded from res5.1.conv1.norm.running_mean           of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.running_var              loaded from res5.1.conv1.norm.running_var            of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.norm.weight                   loaded from res5.1.conv1.norm.weight                 of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv1.weight                        loaded from res5.1.conv1.weight                      of shape (512, 2048, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.bias                     loaded from res5.1.conv2.norm.bias                   of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.num_batches_tracked      loaded from res5.1.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_mean             loaded from res5.1.conv2.norm.running_mean           of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.running_var              loaded from res5.1.conv2.norm.running_var            of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.norm.weight                   loaded from res5.1.conv2.norm.weight                 of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv2.weight                        loaded from res5.1.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.bias                     loaded from res5.1.conv3.norm.bias                   of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.num_batches_tracked      loaded from res5.1.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_mean             loaded from res5.1.conv3.norm.running_mean           of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.running_var              loaded from res5.1.conv3.norm.running_var            of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.norm.weight                   loaded from res5.1.conv3.norm.weight                 of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.1.conv3.weight                        loaded from res5.1.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.bias                     loaded from res5.2.conv1.norm.bias                   of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.num_batches_tracked      loaded from res5.2.conv1.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_mean             loaded from res5.2.conv1.norm.running_mean           of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.running_var              loaded from res5.2.conv1.norm.running_var            of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.norm.weight                   loaded from res5.2.conv1.norm.weight                 of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv1.weight                        loaded from res5.2.conv1.weight                      of shape (512, 2048, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.bias                     loaded from res5.2.conv2.norm.bias                   of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.num_batches_tracked      loaded from res5.2.conv2.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_mean             loaded from res5.2.conv2.norm.running_mean           of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.running_var              loaded from res5.2.conv2.norm.running_var            of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.norm.weight                   loaded from res5.2.conv2.norm.weight                 of shape (512,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv2.weight                        loaded from res5.2.conv2.weight                      of shape (512, 512, 3, 3)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.bias                     loaded from res5.2.conv3.norm.bias                   of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.num_batches_tracked      loaded from res5.2.conv3.norm.num_batches_tracked    of shape ()
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_mean             loaded from res5.2.conv3.norm.running_mean           of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.running_var              loaded from res5.2.conv3.norm.running_var            of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.norm.weight                   loaded from res5.2.conv3.norm.weight                 of shape (2048,)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: roi_heads.res5.2.conv3.weight                        loaded from res5.2.conv3.weight                      of shape (2048, 512, 1, 1)
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.anchor_generator.cell_anchors.0[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mroi_heads.res5.norm.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[01/24 14:15:37] detectron2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.0.{bias, weight}[0m
  [35mstem.fc.2.{bias, weight}[0m
[01/24 14:22:32] detectron2 INFO: Rank of current process: 1. World size: 2
[01/24 14:22:32] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  --------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/24 14:22:32] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=True, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output/model_final.pth'], resume=False)
[01/24 14:22:32] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/24 14:22:32] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output/model_final.pth
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/24 14:22:32] detectron2.utils.env INFO: Using a generated random seed 32862990
[01/24 14:22:33] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/24 14:22:33] fvcore.common.checkpoint INFO: Loading checkpoint from ./output/model_final.pth
[01/24 14:24:00] detectron2 INFO: Rank of current process: 1. World size: 2
[01/24 14:24:00] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
numpy                   1.19.2
detectron2              0.3 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.1
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.5.1 @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /usr/local/cuda
Pillow                  8.1.0
torchvision             0.6.0a0+35d732a @/home/nj/anaconda3/envs/pytorch-1.5/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20210115
cv2                     4.5.1
----------------------  --------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[01/24 14:24:00] detectron2 INFO: Command line arguments: Namespace(config_file='configs/pascal_voc_R_50_C4_24k_moco.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=True, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './output/model_final.pth'], resume=False)
[01/24 14:24:00] detectron2 INFO: Contents of args.config_file=configs/pascal_voc_R_50_C4_24k_moco.yaml:
_BASE_: "pascal_voc_R_50_C4_24k.yaml"
MODEL:
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  WEIGHTS: "See Instructions"
  RESNETS:
    STRIDE_IN_1X1: False
INPUT:
  FORMAT: "RGB"

[01/24 14:24:00] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('voc_2007_test',)
  TRAIN: ('voc_2007_trainval',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: RGB
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 0
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [123.675, 116.28, 103.53]
  PIXEL_STD: [58.395, 57.12, 57.375]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: False
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeadsExtraNorm
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 3
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./output/model_final.pth
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (18000, 22000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 100
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: True
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[01/24 14:24:00] detectron2.utils.env INFO: Using a generated random seed 647196
[01/24 14:24:01] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeadsExtraNorm(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (norm): NaiveSyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
)
[01/24 14:24:01] fvcore.common.checkpoint INFO: Loading checkpoint from ./output/model_final.pth
[01/24 14:24:01] detectron2.data.build INFO: Distribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    car     | 3390         | pedestrian | 455          |  cyclist   | 185          |
|            |              |            |              |            |              |
|   total    | 4030         |            |              |            |              |[0m
[01/24 14:24:01] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[01/24 14:24:01] detectron2.data.common INFO: Serializing 749 elements to byte tensors and concatenating them all ...
[01/24 14:24:01] detectron2.data.common INFO: Serialized dataset takes 0.43 MiB
[01/24 14:24:01] detectron2.evaluation.evaluator INFO: Start inference on 374 images
[01/24 14:24:08] detectron2.evaluation.evaluator INFO: Inference done 11/374. 0.2399 s / img. ETA=0:01:27
[01/24 14:24:13] detectron2.evaluation.evaluator INFO: Inference done 32/374. 0.2404 s / img. ETA=0:01:22
[01/24 14:24:18] detectron2.evaluation.evaluator INFO: Inference done 53/374. 0.2407 s / img. ETA=0:01:17
[01/24 14:24:23] detectron2.evaluation.evaluator INFO: Inference done 74/374. 0.2409 s / img. ETA=0:01:12
[01/24 14:24:28] detectron2.evaluation.evaluator INFO: Inference done 95/374. 0.2411 s / img. ETA=0:01:07
[01/24 14:24:33] detectron2.evaluation.evaluator INFO: Inference done 116/374. 0.2414 s / img. ETA=0:01:02
[01/24 14:24:38] detectron2.evaluation.evaluator INFO: Inference done 137/374. 0.2416 s / img. ETA=0:00:57
[01/24 14:24:43] detectron2.evaluation.evaluator INFO: Inference done 158/374. 0.2418 s / img. ETA=0:00:52
[01/24 14:24:48] detectron2.evaluation.evaluator INFO: Inference done 179/374. 0.2420 s / img. ETA=0:00:47
[01/24 14:24:54] detectron2.evaluation.evaluator INFO: Inference done 200/374. 0.2422 s / img. ETA=0:00:42
[01/24 14:24:59] detectron2.evaluation.evaluator INFO: Inference done 221/374. 0.2424 s / img. ETA=0:00:37
[01/24 14:25:04] detectron2.evaluation.evaluator INFO: Inference done 242/374. 0.2427 s / img. ETA=0:00:32
[01/24 14:25:09] detectron2.evaluation.evaluator INFO: Inference done 263/374. 0.2428 s / img. ETA=0:00:27
[01/24 14:25:14] detectron2.evaluation.evaluator INFO: Inference done 284/374. 0.2430 s / img. ETA=0:00:21
[01/24 14:25:19] detectron2.evaluation.evaluator INFO: Inference done 305/374. 0.2432 s / img. ETA=0:00:16
[01/24 14:25:25] detectron2.evaluation.evaluator INFO: Inference done 326/374. 0.2433 s / img. ETA=0:00:11
[01/24 14:25:30] detectron2.evaluation.evaluator INFO: Inference done 347/374. 0.2435 s / img. ETA=0:00:06
[01/24 14:25:35] detectron2.evaluation.evaluator INFO: Inference done 368/374. 0.2437 s / img. ETA=0:00:01
[01/24 14:25:37] detectron2.evaluation.evaluator INFO: Total inference time: 0:01:30.645975 (0.245653 s / img per device, on 2 devices)
[01/24 14:25:37] detectron2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:29 (0.243783 s / img per device, on 2 devices)
